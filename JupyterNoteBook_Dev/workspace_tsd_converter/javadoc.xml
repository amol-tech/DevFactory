<?xml version="1.0" encoding="UTF-8"?><Interfaces>
<Interface component="Backend" groupName="Engines" interfaceName="IWebService">
<Methods>
<Method author="mmkhan" methodDesc="bThis module will set the engine configuration setting on orchestrator./b" methodName="SetEngineConfiguration">
<Parameters>
<Parameter caption="Feature" dataType="String" paramDefault="" parameterName="feature" show="Y" type="DROPDOWN" values="CHAL,VSH,Audit,NormalLockExpiredNoOfDays,PerpetualLockExpiredNoOfDays,CHALWithDeprecatedOption">Feature for which engine config needs to be done</Parameter>
<Parameter caption="Enable/Disable Setting" dataType="String" paramDefault="" parameterName="flag" show="Y" type="DROPDOWN" values="True,False">Pass value true if needs to be enabled else pass false</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> feature </th></tr>
 <tr><td> setengineconfiguration </td><td> chal:true </td></tr>
 <tr><td> setengineconfiguration </td><td> chal:false </td></tr>
</table>
]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="Backend" groupName="Profiles" interfaceName="IWebService">
<Methods>
<Method author="" methodDesc="Use this function to download files from FTP location defined in the EnvConfig file. The file is downloaded in the PublishFiles folder of the TestEvidence folder." methodName="DownstreamPublishFiles">
<Parameters>
<Parameter caption="Subsription Name" dataType="String" paramDefault="" parameterName="subscriptionname" show="Y" type="TEXT" values="">Subscription name or publishing profile name from which downstream location will be extracted using a database query.</Parameter>
<Parameter caption="Publishing File Name" dataType="String" paramDefault="" parameterName="publishingfilename" show="Y" type="TEXT" values="">Name of the publishing file. A new file is created if it is published or the file is renamed with the given name. It is an optional parameter and works only with LatestFilesOnly and FilePattern parameters.</Parameter>
<Parameter caption="Pick Latest File" dataType="String" paramDefault="Y" parameterName="latestfilesonly" show="Y" type="DROPDOWN" values="Y,N">Y or N where Y indicates the latest created files on the FTP server will be retrieved.</Parameter>
<Parameter caption="File Pattern" dataType="String" paramDefault="" parameterName="filepattern" show="Y" type="TEXT" values="">A part of text to be searched. It is used along with LatestFilesOnly parameter. (.) needs to be added at the start or the end of the search text.</Parameter>
<Parameter caption="Time Out" dataType="String" paramDefault="" parameterName="timeout" show="Y" type="TEXT" values="">Polling time in minutes. It keeps polling on the FTP server for the defined time interval, if the file takes longer than the usual time to be downloaded.</Parameter>
<Parameter caption="Rename" dataType="String" paramDefault="" parameterName="rename" show="N" type="TEXT" values="">TODO</Parameter>
<Parameter caption="File Name" dataType="String" paramDefault="" parameterName="filename" show="N" type="TEXT" values="">Name of the file to be downloaded.</Parameter>
<Parameter caption="Pick Values From Variables Property File" dataType="String" paramDefault="N" parameterName="isvariableproperty" show="N" type="DROPDOWN" values="Y,N">If yes then envpath and scripname can be defined in variables.prop and it will read from there</Parameter>
<Parameter caption="FTP location" dataType="String" paramDefault="" parameterName="ftplocation" show="N" type="TEXT" values="">Location of the file on the FTP server from where it needs to be downloaded.</Parameter>
<Parameter caption="Event Name" dataType="String" paramDefault="" parameterName="eventname" show="N" type="TEXT" values="">Event Name to be passed in case of 8.8 as RunWorkflow is trigger via UI</Parameter>
<Parameter caption="Is Secure Shell?" dataType="String" paramDefault="N" parameterName="secureshell" show="N" type="DROPDOWN" values="Y,N">Y or N, where Y indicates the file is downloaded with different JAVA API except 4j. It is an optional parameter.</Parameter>
<Parameter caption="Db Properties" dataType="String" paramDefault="" parameterName="dbpropertiespath" show="N" type="TEXT" values="">TODO</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border="1">
	 <tr><th>method name</th><th>parameters</th></tr>
	 <tr><td>downstreampublishfiles</td><td>subscriptionname:bbgeneric,
latestfilesonly:y,
filepattern:(.*)publishedfile(.*),
publishingfilename:autopublishfile.xml,
timeout:2</td></tr>
	 	</table>
]]></Examples>
</Method>
<Method author="" methodDesc="Use this function to disable a publishing profile on Orchestrator." methodName="DisablePublishingProfile">
<Parameters>
<Parameter caption="Subscription Name" dataType="String" paramDefault="" parameterName="subscriptionname" show="Y" type="TEXT" values="">Pass the subscription name</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border="1">
	 <tr><th>method name</th><th>parameters</th></tr>
	 <tr><td>disablepublishingprofile</td><td>subscriptionname:bbglobalequity_mm</td></tr>
	 	</table>
]]></Examples>
</Method>
<Method author="" methodDesc="Use this function to enable a publishing profile on Orchestrator." methodName="EnablePublishingProfile">
<Parameters>
<Parameter caption="Subscription Name" dataType="String" paramDefault="" parameterName="subscriptionname" show="Y" type="TEXT" values="">Pass the subscription name</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border="1">
	 <tr><th>method name</th><th>parameters</th></tr>
	 <tr><td>enablepublishingprofile</td><td>subscriptionname:bbglobalequity_mm</td></tr>
	 	</table>

]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="Backend" groupName="General" interfaceName="IWebService">
<Methods>
<Method author="" methodDesc="Use this function to pause a test step for a defined time period. If a time is not provided, a default value of 5 minutes would be set. During the waiting period, logs will be recorded while the execution is in progress." methodName="TestStepWait">
<Parameters>
<Parameter caption="Time In Seconds" dataType="String" paramDefault="" parameterName="waittimeseconds" show="Y" type="TEXT" values="">time in seconds</Parameter>
<Parameter caption="Time In Minutes" dataType="String" paramDefault="" parameterName="waittimeminutes" show="N" type="TEXT" values="">time in minutes</Parameter>
</Parameters>
<Examples/>
</Method>
</Methods>
</Interface>
<Interface component="Backend" groupName="RESTAPI/GSOSerive" interfaceName="IWebService">
<Methods>
<Method author="" methodDesc="" methodName="GSOService">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="Backend" groupName="RunUI" interfaceName="IWebService">
<Methods>
<Method author="" methodDesc="This module is use to trigger ui tests" methodName="RunUI">
<Parameters>
<Parameter caption="Test Case Name" dataType="String" paramDefault="" parameterName="testcaseidentifier" show="Y" type="TEXT" values="">Pass a unique Test Case Name</Parameter>
<Parameter caption="Test Summary" dataType="String" paramDefault="" parameterName="testcasedescription" show="Y" type="TEXTAREA" values="">Description/Summary of the Test Case</Parameter>
</Parameters>
<Examples><![CDATA[
 	 * <table border="1">
	 <tr><th>method name</th><th>parameters</th></tr>
	 <tr><td>runui</td><td>filename:gsqa_001</td></tr>
	 	</table>
]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="Backend" groupName="RunSQL" interfaceName="IWebService">
<Methods>
<Method author="" methodDesc="Use this function to add two rules, CGSCCaptureUpdateCommentsFromUI and CGSCFilterAOIEntities, in the Final Segment, and one rule, CGSCFilterAOIEntities, in the AOFDAttributeofInterestLogDetails segment. The MSG_SET_BLOB column is updated in the FT_T_XMGS table. The AOI-related rules are used to run an AOI-specific test suite containing publishing profiles required to publish only a specific set of attributes to the downstream system. The audit-specific rule is used to obtain the users comments for auditing purposes." methodName="AuditAOIRuleSetUpdate">
<Parameters>
<Parameter caption="Verify VDDB Connection" dataType="String" paramDefault="Y" parameterName="verifydbconnection" show="Y" type="DROPDOWN" values="Y,N">Put Y to verify connection on VDDB schema</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'><tr>
		<th>method name</th>
		<th>parameters</th>
		</tr>
		<td>auditaoirulesetupdate</td>
		<td>verifydbconnection:y</td>
		</table>
]]></Examples>
</Method>
<Method author="" methodDesc="Use this module to perform dynamic and static operations using Java JDBC of Oracle. You need to provide an SQL file name to be executed on the database schemas defined in the variables.properties file where it is mandatory to define the owner schema details of GC, VDDB and AUDIT. The module performs DML/DDL operations of database. If you intend to use a SELECT query, you can use only one SELECT statement in the SQL file without a semicolon, whereas the SQL file can contain multiple DDL/DML commands such as Create, Drop, Truncate, Alter, Insert, Update, Delete, and so on, all ending with a semicolon. CLOB-related operations are also supported in this format." methodName="RunSQL">
<Parameters>
<Parameter caption="SQL File Name" dataType="String" paramDefault="" parameterName="sqlfilename" show="Y" type="FILE" values="">Name of the file and its extension to be provided. It is to be stored in the TestDataRunSQL folder</Parameter>
<Parameter caption="RunSQL Place Holders" dataType="String" paramDefault="" parameterName="placeholder" show="N" type="TEXT" values="">Values to be passed on to GenericExcel. You can use this parameter in two ways depending on the query in the .txt file: 1)If the query is Select  from tablename where idparam, then write the value as PlaceHolder:123 2)If the query is Select  from emp where IDID, then write the value as PlaceHolder:ID123</Parameter>
<Parameter caption="Verify VDD Connection" dataType="String" paramDefault="N" parameterName="verifydbconnection" show="N" type="DROPDOWN" values="Y,N">If value is set to Y then it verifies if its able to connect to vddb successfully or not.</Parameter>
<Parameter caption="Iteration Limit" dataType="String" paramDefault="" parameterName="iterationlimit" show="N" type="TEXT" values=""/>
<Parameter caption="Fix Clob Data" dataType="String" paramDefault="N" parameterName="isfixclob" show="N" type="DROPDOWN" values="Y,N">Y or N, where Y indicates that the BLOB data queried is stored in the generated output file</Parameter>
<Parameter caption="Clob Data" dataType="String" paramDefault="N" parameterName="isclob" show="N" type="DROPDOWN" values="Y,N">Y or N, where Y indicates that the CLOB data queried is stored in the generated output file</Parameter>
<Parameter caption="Execute on DWH" dataType="String" paramDefault="N" parameterName="isdwh" show="N" type="DROPDOWN" values="Y,N">For running queries on DWH schema set parameter isdwh:Y in RunSQL step.</Parameter>
<Parameter caption="Generate Output In Xlsx/Xls" dataType="String" paramDefault="" parameterName="xlsorxlsx" show="N" type="DROPDOWN" values="xlsx,xsl">pass xls if the out of the sql query to be saved in xls or xlsx if it needs to be saved in xlsx</Parameter>
<Parameter caption="External File Name" dataType="String" paramDefault="" parameterName="externalfilename" show="N" type="FILE" values=""/>
<Parameter caption="Folder Name" dataType="String" paramDefault="" parameterName="foldername" show="N" type="TEXT" values="">Name of the folder where the SQL files are stored. All the files in the folder are executed one at a time. If a SELECT query is defined in a file, it creates a new file with an incremental value in CSV format. It is an optional parameter and used only when you want to run all the queries or perform bulk query operations</Parameter>
<Parameter caption="Generate Output In XML/CSV" dataType="String" paramDefault="" parameterName="xmlcsv" show="N" type="DROPDOWN" values="xml,csv">Format type in which the output file is generated. XML or CSV are the permitted format types. For non-SELECT queries, it is an optional parameter</Parameter>
<Parameter caption="Blob Data" dataType="String" paramDefault="N" parameterName="isblob" show="N" type="DROPDOWN" values="Y,N">Y or N, where Y indicates that the BLOB data queried is stored in the generated output file</Parameter>
<Parameter caption="Output File" dataType="String" paramDefault="" parameterName="outputfilename" show="N" type="TEXT" values="">Name of the output file to be generated. For non-SELECT queries, it is an optional parameter</Parameter>
<Parameter caption="Do you want to append File in csv?" dataType="String" paramDefault="N" parameterName="appendflag" show="N" type="DROPDOWN" values="Y,N">Y or N, where Y indicates that output of a query will get appended in the same SQL file, and N indicates the existing SQL file is deleted first and then the output of a query is stored in a newly created SQL file. For non-SELECT queries, it is an optional parameter</Parameter>
<Parameter caption="Publish File" dataType="String" paramDefault="N" parameterName="publishing" show="N" type="DROPDOWN" values="Y,N">Y indicates that the output file from this module is considered as the first file for the comparison modules such as CSVComparison and XMLComparison. The module is used only when you want to compare two files</Parameter>
<Parameter caption="PLSQL Data" dataType="String" paramDefault="N" parameterName="isplsql" show="N" type="DROPDOWN" values="Y,N">Set this value to Y if the sql is of type plsql</Parameter>
<Parameter caption="Test Data" dataType="String" paramDefault="N" parameterName="istestdata" show="N" type="DROPDOWN" values="Y,N"/>
<Parameter caption="Folder" dataType="String" paramDefault="" parameterName="folder" show="N" type="TEXT" values=""/>
<Parameter caption="Execute On VDDB" dataType="String" paramDefault="N" parameterName="isvddb" show="N" type="DROPDOWN" values="Y,N">Set this parameter to Y to enable all the queries mentioned in RunSQL to run on VDDB schema. By default, it runs on the GC schema.</Parameter>
<Parameter caption="Execute On Audit" dataType="String" paramDefault="N" parameterName="isaudit" show="N" type="DROPDOWN" values="Y,N">Set this parameter to Y to enable all the queries mentioned in RunSQL to run on AUDIT schema. By default, it runs on the GC schema.</Parameter>
<Parameter caption="Mutiple Parameters" dataType="String" paramDefault="N" parameterName="ismultiparam" show="N" type="DROPDOWN" values="Y,N">Y or N, where Y indicates that you can generate multiple outputs with a single query. For example, if the query in the .txt or .sql file is Select  from emp where idparam, then you can pass the values on GenericExcel as PlaceHolder:123345945</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border="1">
 <tr><th>method name</th><th>parameters</th>
 </tr><tr><td>runsql</td><td>sqlfilename:filename1.xml</td></tr>
 	</table>
]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="Backend" groupName="ShellSripts" interfaceName="IWebService">
<Methods>
<Method author="" methodDesc="Use this function to combine external power shell scripts with test step modules. The set of commands for power shell scripting are similar the Linux commands which are used on a Windows machine." methodName="RunPowerShellScript">
<Parameters>
<Parameter caption="Comment" dataType="String" paramDefault="" parameterName="comment" show="Y" type="TEXT" values="">Instruction of a power shell script. It takes a directory file path of the script location along with other details.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border="1">
	 <tr><th>method name</th><th>parameters</th></tr>
	 <tr><td>runpowershellscript</td><td>command:start-process powershell c:\data\powershellscript.ps -verb runas</td></tr>
	 	</table>
]]></Examples>
</Method>
<Method author="" methodDesc="Use this function to combine external power shell scripts with test step modules. The set of commands for power shell scripting are similar the Linux commands which are used on a Windows machine." methodName="RunShellScripts">
<Parameters>
<Parameter caption="Verify VDDB Connection" dataType="String" paramDefault="" parameterName="verifydbconnection" show="N" type="DROPDOWN" values="Y,N">Put Y to verify connection on VDDB schema</Parameter>
<Parameter caption="Pick Values From Variables Property" dataType="String" paramDefault="" parameterName="isvariableproperty" show="N" type="DROPDOWN" values="Y,N">If yes then envpath and scripname can be defined in variables.prop and it will read from there</Parameter>
<Parameter caption="Environment Path" dataType="String" paramDefault="" parameterName="envpath" show="Y" type="TEXT" values="">Path of the server scripts to set up the environment. The server login credentials such as application server host name, username and password are taken from Variables.properties.</Parameter>
<Parameter caption="Script Name" dataType="String" paramDefault="" parameterName="scriptname" show="Y" type="TEXT" values="">Name of the script to be run.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border="1">
	 <tr><th>method name</th><th>parameters</th></tr>
	 <tr><td>runshellscripts</td><td>envpath:/ext/app/jboss/software/serverscripts,
		scriptname:startstandardvddb.sh</td></tr>
	 	</table>
]]></Examples>
</Method>
<Method author="" methodDesc="Use this function to execute any batch (.bat) files." methodName="RunBatchScripts">
<Parameters>
<Parameter caption="Trigger Python Compare" dataType="String" paramDefault="" parameterName="triggercomparison" show="Y" type="TEXT" values="">TODO</Parameter>
<Parameter caption="Script Parameter" dataType="String" paramDefault="" parameterName="scriptparameter" show="N" type="TEXT" values="">Input parameters of the batch file. It is optional and used when the batch file requires input values.</Parameter>
<Parameter caption="Script Path" dataType="String" paramDefault="" parameterName="scriptpath" show="Y" type="FILE" values="">Path of the batch file. The path must be present in the TestData folder.</Parameter>
<Parameter caption="Script Name" dataType="String" paramDefault="" parameterName="scriptname" show="Y" type="FILE" values="">Name of the batch file. The .bat file must be present in the TestData folder.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border="1">
	 <tr><th>method name</th><th>parameters</th></tr>
	 <tr><td>runbatchscripts</td><td>scriptname:connectdbfetchrecords.bat</td></tr>
	 	</table>
]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="Backend" groupName="Comparisons" interfaceName="IWebService">
<Methods>
<Method author="" methodDesc="This module is used to compare 2 excel files" methodName="ExcelComparison">
<Parameters>
<Parameter caption="Expected File Name" dataType="String" paramDefault="" parameterName="expectedfile" show="Y" type="FILE" values="">Name of the first Xlsx/xls file stored in the CSVComparison folder</Parameter>
<Parameter caption="Comparison Output File Name" dataType="String" paramDefault="" parameterName="outputfilename" show="Y" type="TEXT" values="">Name of the output file generated and stored in the ComparedOutput folder of TestEvidence folder.</Parameter>
<Parameter caption="Verify VDDB Connection" dataType="String" paramDefault="" parameterName="verifydbconnection" show="N" type="DROPDOWN" values="Y,N">Put Y to verify connection on VDDB schema</Parameter>
<Parameter caption="Folder Name" dataType="String" paramDefault="" parameterName="foldername" show="N" type="TEXT" values="">Specify a custom foler name in which output will be generated</Parameter>
<Parameter caption="Exclude Columns from Comparisons" dataType="String" paramDefault="" parameterName="excludeColumns" show="Y" type="TEXT" values="">Name of the fields to be hidden in the final output</Parameter>
<Parameter caption="Actual File Name" dataType="String" paramDefault="" parameterName="actualfile" show="N" type="FILE" values="">Name of the second Xlsx/xls file stored in the CSVComparison folder</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border="1">
	 <tr><th>method name</th><th>parameters</th></tr>
	 <tr><td>excelcomparison</td><td>expectedfile:file1.xlsx,
actualfile:file2.xlx,
outputfilename:jsonoutput</td></tr>
	 	</table>
]]></Examples>
</Method>
<Method author="" methodDesc="Use this function to perform line-by-line comparison. Two text files having a similar sorting order in the TextComparison folder are compared. The output file is a text file that indicates the difference appearing on each line. The output file is created at run time and placed in the ComparedOutput folder." methodName="TextComparison">
<Parameters>
<Parameter caption="Second File Name" dataType="String" paramDefault="" parameterName="secondfile" show="Y" type="FILE" values="">Name of the file 2 in the TextComparison folder.</Parameter>
<Parameter caption="First File Name" dataType="String" paramDefault="" parameterName="firstfile" show="Y" type="FILE" values="">Name of the file 1 in the TextComparison folder.</Parameter>
<Parameter caption="Comparison Output File Name" dataType="String" paramDefault="" parameterName="outputfilename" show="Y" type="TEXT" values="">Name of the output file.</Parameter>
<Parameter caption="Veirfy VDDB Connection" dataType="String" paramDefault="" parameterName="verifydbconnection" show="N" type="DROPDOWN" values="Y,N">Verify Connection successful connection to VDDB</Parameter>
<Parameter caption="Fix Clob Data" dataType="String" paramDefault="" parameterName="isfixclob" show="N" type="DROPDOWN" values="Y,N">Y or N, where Y indicates the FixClob data extracted from the database compares with the data given in the expected output.</Parameter>
<Parameter caption="Is Delta?" dataType="String" paramDefault="N" parameterName="isdelta" show="N" type="DROPDOWN" values="Y,N">Y or N, where Y indicates the second file is taken from TestEvidence folder.</Parameter>
<Parameter caption="Tags to Hide From Comparison For FIX Clob" dataType="String" paramDefault="" parameterName="tagstohide" show="N" type="TEXT" values="">Tags of FixClob to hide when comparing the two files.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border="1">
	 <tr><th>method name</th><th>parameters</th></tr>
	 <tr><td>textcomparison</td><td>firstfile:20170616_iso10383_full.txt,
secondfile:20170615_iso10383_full.txt,
outputfilename:maafcomparison_full </td></tr>
	 	</table>
]]></Examples>
</Method>
<Method author="" methodDesc="Use this function to compare published XML files by either the folder-based or file-based approach. In the folder-based approach, files with matching file names present in two separate folders are compared, whereas, in the file-based approach, two files present in a folder are compared." methodName="XMLComparison">
<Parameters>
<Parameter caption="First File" dataType="String" paramDefault="" parameterName="firstfile" show="N" type="FILE" values="">Name of the first input XML file.</Parameter>
<Parameter caption="Second File" dataType="String" paramDefault="" parameterName="secondfile" show="Y" type="FILE" values="">Name of the second input XML file.</Parameter>
<Parameter caption="Comparison Output File Name" dataType="String" paramDefault="" parameterName="outputfilename" show="Y" type="TEXT" values="">Name of the output file.</Parameter>
<Parameter caption="XML Attributes To Ignore From Compare" dataType="String" paramDefault="" parameterName="ignoreattributelist" show="N" type="TEXT" values=""/>
<Parameter caption="Mappping Files" dataType="String" paramDefault="" parameterName="mappingfiles" show="N" type="FILE" values=""/>
<Parameter caption="Columns To Display" dataType="String" paramDefault="" parameterName="columnstodisplay" show="N" type="TEXT" values=""/>
<Parameter caption="Is Export" dataType="String" paramDefault="" parameterName="isexport" show="N" type="DROPDOWN" values="Y,N"/>
<Parameter caption="Pick File From Publish Folder" dataType="String" paramDefault="N" parameterName="ispublished" show="N" type="DROPDOWN" values="Y,N">Y or N, where Y indicates the second file for comparison is taken from RunSQLResults folder of the TestEvidence folder, and N indicates the file for comparison is taken from the secondFile parameter.</Parameter>
<Parameter caption="Past Date Folder" dataType="String" paramDefault="" parameterName="pastdatefolder" show="N" type="TEXT" values="">Folder used to feed a previous day's published files for comparison.</Parameter>
<Parameter caption="XML Folder 1" dataType="String" paramDefault="" parameterName="folder1" show="Y" type="FILE" values="">Name of the folder created in the XMLComparison folder. It contains the first set of input XML files.</Parameter>
<Parameter caption="XML Folder 2" dataType="String" paramDefault="" parameterName="folder2" show="N" type="FILE" values="">Name of the folder created in the XMLComparison folder. It contains the second set of input XML files.</Parameter>
<Parameter caption="Pick File From Downloads Folder" dataType="String" paramDefault="" parameterName="isdownloadfolder" show="N" type="DROPDOWN" values="Y,N"/>
<Parameter caption="Tags to Hide From Compare" dataType="String" paramDefault="" parameterName="tagtohide" show="N" type="TEXT" values="">Tags to be hidden in the final output.</Parameter>
<Parameter caption="Key Config Doc xlsx" dataType="String" paramDefault="" parameterName="keysconfigdoc" show="N" type="FILE" values="">Name of the Excel spreadsheet containing the configuration to handle multi-occurring elements.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border="1">
	 <tr><th>method name</th><th>parameters</th></tr>
	 <tr><td>xmlcomparison</td><td>firstfile:murex_eqd1.xml,
secondfile:murex_eqd2.xml,
tagtohide:startdate,
keysconfigdoc:keyconfig.xlsx,
outputfilename:comparedoutput </td></tr>
	 	</table>
]]></Examples>
</Method>
<Method author="" methodDesc="Use this function to compare two CSV files. The file used for comparison are kept either in a common folder or separate folders. In some cases, a second file is generated by running an SQL query to retrieve data from the database." methodName="CSVComparison">
<Parameters>
<Parameter caption="First File Name" dataType="String" paramDefault="" parameterName="firstfile" show="Y" type="FILE" values="">Name of the first CSV file stored in the CSVComparison folder</Parameter>
<Parameter caption="Key Column For Comparison" dataType="String" paramDefault="" parameterName="keycolumnname" show="Y" type="TEXT" values="">Column name to uniquely identify each row in both the CSV files</Parameter>
<Parameter caption="Comparison Output File" dataType="String" paramDefault="" parameterName="outputfilename" show="Y" type="TEXT" values="">Name of the output file generated and stored in the ComparedOutput folder of TestEvidence folder.</Parameter>
<Parameter caption="Verify VDDB Connection?" dataType="String" paramDefault="" parameterName="verifydbconnection" show="N" type="DROPDOWN" values="Y,N">Put Y to verify connection on VDDB schema</Parameter>
<Parameter caption="Pick File From Test Evidence" dataType="String" paramDefault="N" parameterName="istestevidencedata" show="N" type="DROPDOWN" values="Y,N"/>
<Parameter caption="Folder Name" dataType="String" paramDefault="" parameterName="foldername" show="N" type="TEXT" values="">Specify a custom foler name in which output will be generated</Parameter>
<Parameter caption="Count" dataType="String" paramDefault="" parameterName="iscount" show="N" type="TEXT" values=""/>
<Parameter caption="Pick First File from RunSQL Step?" dataType="String" paramDefault="N" parameterName="isrunsql" show="N" type="DROPDOWN" values="Y,N">Y or N, where Y indicates the second file for comparison is taken from RunSQLResults folder of the TestEvidence folder, and N indicates the file for comparison is taken from the secondFile parameter.</Parameter>
<Parameter caption="Secound File Name" dataType="String" paramDefault="" parameterName="secondfile" show="N" type="FILE" values="">Name of the second CSV file stored in the CSVComparison folder</Parameter>
<Parameter caption="Fields to Hide From Comparison" dataType="String" paramDefault="" parameterName="fieldstohide" show="N" type="TEXT" values="">Name of the fields to be hidden in the final output</Parameter>
<Parameter caption="Pick First File From Downloads?" dataType="String" paramDefault="N" parameterName="isdownloadfolder" show="N" type="DROPDOWN" values="Y,N">Y or N, where Y indicates the second file for comparison is taken from the local machines Download folder, and N indicates the file for comparison is taken from the secondFile parameter.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border="1">
	 <tr><th>method name</th><th>parameters</th></tr>
	 <tr><td>csvcomparison</td><td>firstfile:publishedfile1.csv,
secondfile:publishedfile2.csv,
keycolumnname:job_id,
outputfilename:csvcomparedoutput </td></tr>
	 	</table>
  ]]></Examples>
</Method>
<Method author="" methodDesc="Use this function to compare JSON files." methodName="JSONComparison">
<Parameters>
<Parameter caption="SQL File Name" dataType="String" paramDefault="" parameterName="sqlfilename" show="Y" type="FILE" values="">Name of the file containing the SQL query to fetch JSON clob from database.</Parameter>
<Parameter caption="Actual Json File" dataType="String" paramDefault="" parameterName="actualjsonfile" show="N" type="FILE" values="">JSON file in text format. The output of the sqlfilename parameter is stored in this file.</Parameter>
<Parameter caption="Expected Json File" dataType="String" paramDefault="" parameterName="expectedjsonfile" show="Y" type="FILE" values="">JSON file in text format. It needs to be placed in the TestData folder.</Parameter>
<Parameter caption="Comparison Output File Name" dataType="String" paramDefault="" parameterName="outputfilename" show="Y" type="TEXT" values="">Name of the output file.</Parameter>
<Parameter caption="RunSQL Place Holders" dataType="String" paramDefault="" parameterName="placeholder" show="N" type="TEXT" values="">Text to be used in a query as a place holder.</Parameter>
<Parameter caption="Verify VDDB Connection" dataType="String" paramDefault="" parameterName="verifydbconnection" show="N" type="DROPDOWN" values="Y,N">Verify Connection successful connection to VDDB</Parameter>
<Parameter caption="Folder Name" dataType="String" paramDefault="" parameterName="foldername" show="N" type="TEXT" values="">Creates a folder with the given name under TestEvidence/CompareOutput folder</Parameter>
<Parameter caption="Tag To Hide From Comparison" dataType="String" paramDefault="" parameterName="tagstoreplace" show="N" type="TEXT" values="">Tags to be hidden in the final output.</Parameter>
<Parameter caption="Test Data" dataType="String" paramDefault="" parameterName="istestdata" show="N" type="DROPDOWN" values="Y,N">If Y the Actual file will be taken from the TestData Folder</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border="1">
	 <tr><th>method name</th><th>parameters</th></tr>
	 <tr><td>jsoncomparison</td><td>sqlfilename:sql.txt,
expectedjsonfile:json.txt,
outputfilename:jsonoutput</td></tr>
	 	</table>
]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="Backend" groupName="Workflow" interfaceName="IWebService">
<Methods>
<Method author="" methodDesc="This module is used to verify the event result for workflow" methodName="VerifyEventResult">
<Parameters>
<Parameter caption="Parameters" dataType="String" paramDefault="" parameterName="parameters" show="Y" type="TEXT" values="">Parameters in pipeseperated format example finishedfalsefailedfalsemasteroidn.a</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border="1">
	 <tr><th>method name</th><th>parameters</th></tr>
	 <tr><td>verifyeventresult</td><td>parameters:finished|false||failed|false|masteroid|n.a</td></tr>
	 	</table>
]]></Examples>
</Method>
<Method author="" methodDesc="Use this function to disable the events on the Events  GenericEvents tab of the Orchestrator. It runs a query on the database to disable or delete the event name." methodName="DisableEvents">
<Parameters>
<Parameter caption="Event Name" dataType="String" paramDefault="" parameterName="eventname" show="Y" type="TEXT" values="">Name of the event to be disabled. The event must appear in the GenericEvents.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'><tr>
		<th>method name</th>
		<th>parameters</th>
		</tr>
		<td>disableevents</td>
		<td>eventname:sfl</td>
		</table>
]]></Examples>
</Method>
<Method author="" methodDesc="Use this function to enable the events on the Events  GenericEvents tab of the Orchestrator. It runs a query on the database to enable or insert the event name." methodName="EnableEvents">
<Parameters>
<Parameter caption="Event Name" dataType="String" paramDefault="" parameterName="eventname" show="Y" type="TEXT" values="">Name of the event to be enabled. The event appears in the GenericEvents</Parameter>
<Parameter caption="Workflow Name" dataType="String" paramDefault="" parameterName="workflowname" show="Y" type="TEXT" values="">Name of the workflow for which the event name is created. The workflow name is case-sensitive</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'><tr>
		<th>method name</th>
		<th>parameters</th>
		</tr>
		<td>enableevents</td>
		<td>eventname:sfl, workflowname:standardfileload</td>
		</table>
]]></Examples>
</Method>
<Method author="" methodDesc="This module allows you to use all out-of-the-box workflows available in the GoldenSource product. An event is used in this module to trigger an Orchestrator workflow." methodName="RunWorkflow">
<Parameters>
<Parameter caption="Event Name" dataType="String" paramDefault="" parameterName="eventname" show="Y" type="TEXT" values="">Event name from orcestrator</Parameter>
<Parameter caption="Workflow Parameters" dataType="String" paramDefault="" parameterName="workflowparameters" show="Y" type="TEXTAREA" values="">Event name from orcestrator</Parameter>
</Parameters>
<Examples/>
</Method>
</Methods>
</Interface>
<Interface component="Backend" groupName="FileRelatedOP" interfaceName="IWebService">
<Methods>
<Method author="" methodDesc="Use this function to move a file to a FTP location. The server login credentials such as application server host name, username and password are taken from EnvConfig.properties." methodName="FTPFileTransfer">
<Parameters>
<Parameter caption="File Name" dataType="String" paramDefault="" parameterName="filename" show="Y" type="TEXT" values="">Name of the file to be downloaded.</Parameter>
<Parameter caption="FTP Location" dataType="String" paramDefault="" parameterName="ftplocation" show="Y" type="TEXT" values="">Location of the file on the FTP server from where it needs to be downloaded.</Parameter>
<Parameter caption="To FTP Location" dataType="String" paramDefault="" parameterName="toftplocationprop" show="N" type="TEXT" values="">Pass the variable name from variables.property which contains the ftp path.</Parameter>
<Parameter caption="Verify VDDB Connection" dataType="String" paramDefault="N" parameterName="verifydbconnection" show="N" type="DROPDOWN" values="Y,N">If value is set to Y then it verifies if its able to connect to vddb successfully or not.</Parameter>
</Parameters>
<Examples><![CDATA[
<table border="1">
	 <tr><th>method name</th><th>parameters</th></tr>
	 <tr><td>ftpfiletransfer</td><td>filename:test.txt,
ftplocation:/export/home/oracle/automation/</td></tr>
	 	</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="CreateFolder">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="VendorComparison" interfaceName="IVendorComparison">
<Methods>
<Method author="" methodDesc="" methodName="SelectVendor">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="CopyDataGroup">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="CopyFieldData">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyCopiedFieldData">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyVendorComparisionIcon">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyGridVendorDataTextColor">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="CompareAndVerifyVendorData">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyCopiedDataGroup">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyUnmatchedRecords">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="Framework Variables" interfaceName="IVariableMethod">
<Methods>
<Method author="" methodDesc="" methodName="SET RANDNO">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="This method is used to Generate 6 digit random number and use can give it a variable name and then use in anywhere in the test case" methodName="GenerateRandomNumber">
<Parameters>
<Parameter caption="VariableName" dataType="String" parameterName="VariableName" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="CommonActionModules" interfaceName="IVariableMethod">
<Methods>
<Method author="" methodDesc="this module refresh url" methodName="refreshURL">
<Parameters>
<Parameter caption="URL" dataType="String" parameterName="URL" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="This module is used to close all opened tabs on the header" methodName="closeAllGSMenuTab">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="Template" interfaceName="ITemplate">
<Methods>
<Method author="" methodDesc="This module is used to select others menu" methodName="SelectTemplateOthersMenu">
<Parameters>
<Parameter caption="actionItem" dataType="String" parameterName="actionItem" show="Y" type="TEXT"/>
<Parameter caption="groupName" dataType="String" parameterName="groupName" show="Y" type="TEXT"/>
<Parameter caption="createCancel" dataType="String" parameterName="createCancel" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th>module name</th><th>actionitem</th><th>groupname</th><th>createcancel</th></tr>
 <tr><td>selecttemplateothersmenu </td><td>todo</td><td>todo</td><td>todo </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="This module is used to select others menu" methodName="SelectTemplateOthersMenu">
<Parameters>
<Parameter caption="actionItem" dataType="String" parameterName="actionItem" show="Y" type="TEXT">action items1</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th>module name</th><th>actionitem</th></tr>
 <tr><td>selecttemplateothersmenu </td><td>export</td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module will verify the filter applied&lt;/b&gt;" methodName="VerifyFilter">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module will verify the filter applied&lt;/b&gt;" methodName="VerifyFilter">
<Parameters>
<Parameter caption="filteredData" dataType="String" parameterName="filteredData" show="Y" type="TEXT">filterdata that needs to be verified.</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">filter verification as per boolean flag</Parameter>
<Parameter caption="index" dataType="int" parameterName="index" show="Y" type="TEXT">verification at the provided index</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> filetereddata</th><th> booleanval</th><th> index</th></tr>
 <tr><td>instrument name|abc || cusip |xyz123</td><td>true</td><td>1</td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module will verify the filter applied&lt;/b&gt;" methodName="VerifyFilter">
<Parameters>
<Parameter caption="fileteredData" dataType="String" parameterName="fileteredData" show="Y" type="TEXT">filterdata that needs to be verified.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> filetereddata</th></tr>
 <tr><td>instrument name|abc || cusip |xyz123</td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module will verify the filter applied&lt;/b&gt;" methodName="VerifyFilter">
<Parameters>
<Parameter caption="filteredData" dataType="String" parameterName="filteredData" show="Y" type="TEXT">filterdata that needs to be verified.</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">filter verification as per boolean flag</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> filetereddata</th><th> booleanval</th></tr>
 <tr><td>instrument name|abc || cusip |xyz123</td><td>true</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifySections">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module lets a user click on create button by providing the name of the template&lt;/b&gt;" methodName="CreateTemplate">
<Parameters>
<Parameter caption="templateName" dataType="String" parameterName="templateName" show="Y" type="TEXT">name of the template to create.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> templatename </th></tr>
 <tr><td> templatebasedexport_3%var1% </td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module lets a user click on create button, provides name of the template and saves&lt;/b&gt;" methodName="CreateTemplate">
<Parameters>
<Parameter caption="templateName" dataType="String" parameterName="templateName" show="Y" type="TEXT">name of the template to create.</Parameter>
<Parameter caption="actionButton" dataType="String" parameterName="actionButton" show="Y" type="TEXT">save or cancel</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> templatename </th><th> actionbutton </th></tr>
 <tr><td> templatebasedexport_3%var1% </td><td>save</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="SetOperators">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyPageSize">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module lets a user to verify the record counts within a given grid.&lt;/b&gt;" methodName="VerifyRecordsCount">
<Parameters>
<Parameter caption="expectedNoOfRecords" dataType="int" parameterName="expectedNoOfRecords" show="Y" type="TEXT">count that needs to be verified.</Parameter>
<Parameter caption="gridno" dataType="int" parameterName="gridno" show="Y" type="TEXT">grid on which count needs to be verified.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> expectednoofrecords</th><th> gridno</th></tr>
 <tr><td> 2 </td><td> 1 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module lets a user to verify the record counts&lt;/b&gt;" methodName="VerifyRecordsCount">
<Parameters>
<Parameter caption="expectedNoOfRecords" dataType="int" parameterName="expectedNoOfRecords" show="Y" type="TEXT">count that needs to be verified.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> expectednoofrecords</th></tr>
 <tr><td> 2 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyRecordsCountOnPopup">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="RemoveTemplateFields">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="Verifies fields" methodName="VerifyColumnFields">
<Parameters>
<Parameter caption="fields" dataType="String" parameterName="fields" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th>module name</th><th>fields</th></tr>
 <tr><td>verifycolumnfields </td><td>todo</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="Verified Fields" methodName="VerifyColumnFields">
<Parameters>
<Parameter caption="grid" dataType="int" parameterName="grid" show="Y" type="TEXT"/>
<Parameter caption="fields" dataType="String" parameterName="fields" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th>module name</th><th>grids</th><th>fields</th></tr>
 <tr><td>verifycolumnfields </td><td>todo</td><td>todo</td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module lets user configures the button or link properties in the Event Properties window&lt;/b&gt;" methodName="ConfigureTemplateEventProperties">
<Parameters>
<Parameter caption="buttonLabel" dataType="String" parameterName="buttonLabel" show="Y" type="TEXT">the button visible on which action needs to be performed.</Parameter>
<Parameter caption="buttonValue" dataType="String" parameterName="buttonValue" show="Y" type="TEXT">value of the button</Parameter>
<Parameter caption="createorCancel" dataType="String" parameterName="createorCancel" show="Y" type="TEXT">select either create or cancel</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> buttonlabel </th><th> buttonvalue </th><th> createorcancel </th></tr>
 <tr><td> create button </td><td>button name|standardfileload </td><td>create new</td></tr>
</table>
]]></Examples>
</Method>
<Method author="hvijayan" methodDesc="&lt;b&gt;This module is set data on the screen like setting values in a dropdown, setting date in date field&lt;/b&gt;" methodName="SetTemplateFields">
<Parameters>
<Parameter caption="entityTemplateValue" dataType="String" parameterName="entityTemplateValue" show="Y" type="TEXT">this is a pipe  separated parameter used to set data on the screen. 
 multiple fields can be set on the screen using it, which is differentiated based on 
 single pipe  is used to separate the field name with the value to be set.
 double pipe  is used to separate multiple fields.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> entitytemplatevalue</th></tr>
 <tr><td> settemplatefields </td><td> date | 20-dec-2017 </td></tr>
 <tr><td> settemplatefields </td><td> date | 20-dec-2017 || snap | 840 || subscriber | dtesta </td></tr>
</table>
]]></Examples>
</Method>
<Method author="sakamble" methodDesc="DESCRIPTION set value in template field based on index" methodName="SetTemplateFields">
<Parameters>
<Parameter caption="index" dataType="int" parameterName="index" show="Y" type="TEXT">- position of the dropdown</Parameter>
<Parameter caption="entityTemplateValue" dataType="String" parameterName="entityTemplateValue" show="Y" type="GSO">- value to set in dropdown</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="SetTemplateFields">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="sakamble" methodDesc="set value in template field" methodName="SetTemplateFields">
<Parameters>
<Parameter caption="tab" dataType="String" parameterName="tab" show="Y" type="TEXT">- tab name</Parameter>
<Parameter caption="entityTemplateValue" dataType="String" parameterName="entityTemplateValue" show="Y" type="TEXT">- value to set in dropdown</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyFilterOnPopup">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module lets a user click on create button, then provie name of the template with save as option&lt;/b&gt;" methodName="CreateTemplateWithSaveAs">
<Parameters>
<Parameter caption="templateName" dataType="String" parameterName="templateName" show="Y" type="TEXT">name of the template to create.</Parameter>
<Parameter caption="actionButton" dataType="String" parameterName="actionButton" show="Y" type="TEXT">save or cancel</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> templatename </th><th> actionbutton </th></tr>
 <tr><td> templatebasedexport_3%var1% </td><td>save</td></tr>
 <tr><td> searchsaveascancel%var3% </td><td>cancel</td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module lets a user click on create button, then provie name of the template with save as option&lt;/b&gt;" methodName="CreateTemplateWithSaveAs">
<Parameters>
<Parameter caption="templateName" dataType="String" parameterName="templateName" show="Y" type="TEXT">name of the template to create.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> templatename </th></tr>
 <tr><td> templatebasedexport_3%var1% </td></tr>
</table>
]]></Examples>
</Method>
<Method author="anagre" methodDesc="" methodName="UncheckDefaultCheckBox">
<Parameters>
<Parameter caption="tab" dataType="String" parameterName="tab" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="this module is used to set event properties" methodName="SetTemplateEventProperties">
<Parameters>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT"/>
<Parameter caption="index" dataType="int" parameterName="index" show="Y" type="TEXT"/>
<Parameter caption="fields" dataType="String" parameterName="fields" show="Y" type="TEXT"/>
<Parameter caption="action" dataType="String" parameterName="action" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> module name </th><th> buttonname </th><th> index </th><th> fields </th><th> action </th></tr>
 <tr><td> settemplateeventproperties </td><td>todo </td><td>todo</td><td>todo</td><td>todo</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="this module is used to set event properties" methodName="SetTemplateEventProperties">
<Parameters>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT"/>
<Parameter caption="fields" dataType="String" parameterName="fields" show="Y" type="TEXT"/>
<Parameter caption="action" dataType="String" parameterName="action" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> module name </th><th> buttonname </th><th> fields </th><th> action </th></tr>
 <tr><td> settemplateeventproperties </td><td>todo </td><td>todo</td><td>todo</td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module will Drag &amp; Drop Fields from left side&lt;/b&gt;" methodName="AddTemplateFields">
<Parameters>
<Parameter caption="fields" dataType="String" parameterName="fields" show="Y" type="TEXT">specify the field name that you want to select.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> field names</th></tr>
 <tr><td>instrument details || description || instrument level identifiers</td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module will Drag &amp; Drop Fields from left side to the screen name&lt;/b&gt;" methodName="AddTemplateFields">
<Parameters>
<Parameter caption="screenCaption" dataType="String" parameterName="screenCaption" show="Y" type="TEXT">name of the screen to drag onto.</Parameter>
<Parameter caption="fieldTree" dataType="String" parameterName="fieldTree" show="Y" type="TEXT">names list of fields to drag from the left.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> screenname </th><th> field names </th></tr>
 <tr><td> screen </td><td>instrument details || instrument level identifiers || description</td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module will Drag &amp; Drop Fields from left side to the screen name with a true/false value&lt;/b&gt;" methodName="AddTemplateFields">
<Parameters>
<Parameter caption="fields" dataType="String" parameterName="fields" show="Y" type="TEXT">names list of fields to drag from the left.</Parameter>
<Parameter caption="flag" dataType="Boolean" parameterName="flag" show="Y" type="TEXT">to check whether the fields can be dragged or not successfully.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> field names </th><th> true/false </th></tr>
 <tr><td> instrument details || instrument level identifiers || description </td><td>true</td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module lets a user Add a Layout, Section or a Tab Sheet to a Form Template&lt;/b&gt;" methodName="AddTemplateComponents">
<Parameters>
<Parameter caption="TemplateComponent" dataType="String" parameterName="TemplateComponent" show="Y" type="TEXT">component that needs to be added.</Parameter>
<Parameter caption="ChangeTemplateComponentCaption" dataType="String" parameterName="ChangeTemplateComponentCaption" show="Y" type="TEXT">component that needs to be added onto templatecomponent</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> templatecomponent</th><th> changetemplatecomponentcaption </th></tr>
 <tr><td> tab sheet </td><td>fins details</td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module lets a user Add a Layout, Section or a Tab Sheet to a Form Template&lt;/b&gt;" methodName="AddTemplateComponents">
<Parameters>
<Parameter caption="TemplateComponent" dataType="String" parameterName="TemplateComponent" show="Y" type="TEXT">component that needs to be added.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> templatecomponent</th></tr>
 <tr><td> tab sheet </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyShareGreyOut">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module lets user move the fields up or down to change the order&lt;/b&gt;" methodName="ChangeTemplateFieldOrder">
<Parameters>
<Parameter caption="gridPosition" dataType="int" parameterName="gridPosition" show="Y" type="TEXT">position of the grid to change the field order</Parameter>
<Parameter caption="changeOrders" dataType="String" parameterName="changeOrders" show="Y" type="TEXT">name of the fields to change order of.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> gripposition </th><th> fielnames </th></tr>
 <tr><td> 1 </td><td>isin  |instrument name || cusip |issuer name</td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module lets user move the fields up or down to change the order&lt;/b&gt;" methodName="ChangeTemplateFieldOrder">
<Parameters>
<Parameter caption="gridPosition" dataType="int" parameterName="gridPosition" show="Y" type="TEXT">position of the grid to change the field order</Parameter>
<Parameter caption="lookupWindowName" dataType="String" parameterName="lookupWindowName" show="Y" type="TEXT">lookup windowname to change the field order of</Parameter>
<Parameter caption="changeOrders" dataType="String" parameterName="changeOrders" show="Y" type="TEXT">name of the fields to change order of.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> gripposition </th><th> lookupwindowname  </th><th> fielnames</th></tr>
 <tr><td> 1 </td><td> lookupwindowname </td><td>isin  |instrument name || cusip |issuer name</td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module lets user move the fields up or down to change the order&lt;/b&gt;" methodName="ChangeTemplateFieldOrder">
<Parameters>
<Parameter caption="changeOrders" dataType="String" parameterName="changeOrders" show="Y" type="TEXT">name of the fields to change order of.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> fielnames</th></tr>
 <tr><td> isin  |instrument name || cusip |issuer name</td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module changes the order of the column headers&lt;/b&gt;" methodName="ChangeSearchColumnOrder">
<Parameters>
<Parameter caption="changeOrders" dataType="String" parameterName="changeOrders" show="Y" type="TEXT">order of the column to be changed into.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> columnorders </th></tr>
 <tr><td> instrument name |isin||issuer name|cusip||</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="SetTemplateFieldsOnPopup">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;Enable lazy loading by clicking the check box for particular data group&lt;/b&gt;" methodName="EnableDisableLazyLoading">
<Parameters>
<Parameter caption="dataGroupName" dataType="String" parameterName="dataGroupName" show="Y" type="TEXT">datagroupname to enable/disable.</Parameter>
<Parameter caption="value" dataType="String" parameterName="value" show="Y" type="TEXT">lazy loading</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> datagroupname </th><th> enable/disable </th></tr>
 <tr><td> all classifications </td><td>enable</td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;Invokes the workflow by right clicking on the row and the button provided&lt;/b&gt;" methodName="InvokeWorkflowFromSearch">
<Parameters>
<Parameter caption="rowNumber" dataType="int" parameterName="rowNumber" show="Y" type="TEXT">rownum to select.</Parameter>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT">name of button workflow to invoke</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> rownumber </th><th> buttonname </th></tr>
 <tr><td>1</td><td>standardfileload</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyTemplateIsDefaultOrNot">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="OpenTemplateEventProperties">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyTemplateShareOrUnshare">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyFilterInTable">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="InvokeWorkflowInsideRecord">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="unknown&#10;&#10; " methodDesc="&lt;b&gt;This module stored filed list of datagroups in a template&lt;/b&gt;" methodName="DataGroupsFieldsList">
<Parameters/>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> stotpt:datagroupsfieldslist</th></tr>
 <tr><td> stotpt:datagroupsfieldslist763</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="MoveExistingDGOrComponent">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyTemplateFields">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="bsaswade" methodDesc="DESCRIPTION : This Module verifies filter/Template headers on search page." methodName="VerifyFilterHeader">
<Parameters>
<Parameter caption="filterHeadersPipeSeperated" dataType="String" parameterName="filterHeadersPipeSeperated" show="Y" type="TEXT">filterheaderspipeseperated</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="Todo description" methodName="RemoveSearchRecordsFilter">
<Parameters>
<Parameter caption="windowTitle" dataType="String" parameterName="windowTitle" show="Y" type="TEXT"/>
<Parameter caption="searchHeadername" dataType="String" parameterName="searchHeadername" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> module name </th><th> windowtitle </th><th> searchheadername </th></tr>
 <tr><td> removesearchrecordsfilter </td><td>todo</td><td>todo</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="TODO" methodName="RemoveSearchRecordsFilter">
<Parameters>
<Parameter caption="searchHeadername" dataType="String" parameterName="searchHeadername" show="Y" type="TEXT">todo</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> module name </th><th> searchheadername</th></tr>
 <tr><td> removesearchrecordsfilter</td><td> todo</td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module will addall or removeall template on create datagroup window&lt;/b&gt;" methodName="AddOrRemoveAllTemplateFields">
<Parameters>
<Parameter caption="actionButtonName" dataType="String" parameterName="actionButtonName" show="Y" type="TEXT">it can be either addall or removeall.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> actionname</th></tr>
 <tr><td> add all</td></tr>
 <tr><td> remove all</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyFilterIsBlank">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module will add layout or section on another already added layout in the add datagroup window&lt;/b&gt;" methodName="AddCompOnAnotherComp">
<Parameters>
<Parameter caption="ExistingComp" dataType="String" parameterName="ExistingComp" show="Y" type="TEXT">name of the first comp to be add onto.</Parameter>
<Parameter caption="NewComp" dataType="String" parameterName="NewComp" show="Y" type="TEXT">addition of new comp on existing comp</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> existingcomp name </th><th> newcomp </th></tr>
 <tr><td> page view </td><td>layout</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="SelectTemplateDatagroupConfiguration">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module will click on the Spanner icon to select the Template menu&lt;/b&gt;" methodName="ConfigureSearchAndScreenTemplates">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module will click on the Spanner icon and verifies if the intended window is visible&lt;/b&gt;" methodName="ConfigureSearchAndScreenTemplatesWithVerify">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="abhishekn" methodDesc="" methodName="VerifyTemplateDatagroupConfiguration">
<Parameters>
<Parameter caption="dataGroup" dataType="String" parameterName="dataGroup" show="Y" type="TEXT">tooltip and booleanval
 the parameter needs to be passed as
 screen, configure event properties, false
 true - button/icon is visible/checked
 false - button/icon is invisible/unchecked</Parameter>
<Parameter caption="toolTip" dataType="String" parameterName="toolTip" show="Y" type="TEXT">-</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyTemplateShareOrUnshareEnable">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module will add all datagroups in the template&lt;/b&gt;" methodName="AddAllDatagroups">
<Parameters>
<Parameter caption="s" dataType="String" parameterName="s" show="Y" type="TEXT">specify the datagroups name that you want to add in pipe seperated format.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> datagroupsname </th></tr>
 <tr><td> instrument details|description|classification</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="verifyGridRow">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="SetOperator">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="SetUpOrUpdateRecords" interfaceName="ISetUpOrUpdateRecords">
<Methods>
<Method author="bkhemani" methodDesc="&lt;b&gt; The module is useful when there is a grid/table having multiple column Headers with multiple grid&#10; The first param works like the Where Clause, i.e., telling the script to enter data on the row where other(first parameter data) column condition falls.&#10; Also, The script verifies that all the condition values of all the different condition column should fall in the same row, and then on the same row value gets entered for the actual column name &lt;/b&gt;" methodName="SetDataOnGrid">
<Parameters>
<Parameter caption="gridpos" dataType="int" parameterName="gridpos" show="Y" type="TEXT">specify the number of the grid/table if there are many grids/tables available.</Parameter>
<Parameter caption="conditionColumnNameAndValue" dataType="String" parameterName="conditionColumnNameAndValue" show="Y" type="TEXT">provide the condition column name and value, column name and its value should be separated by single pipe separator, if providing multiple values i.e., more than one column and its data, then separate the other condition column name and data from the first one by using double pipe separator.
	

 conditioncolumnname1value1  conditioncolumnnam2value2  conditioncolumnname3value3</Parameter>
<Parameter caption="actualColumnNameAndValueToSet" dataType="String" parameterName="actualColumnNameAndValueToSet" show="Y" type="TEXT">provide here the actual column name and the data that needs to be set: actualcolumnnamevaluetoset</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> gridpos </th><th> conditioncolumnnameandvalue </th><th> actualcolumnnameandvaluetoset </th></tr>
 <tr><td> setdataongrid </td><td> 1 </td><td> field|parvalue </td><td> comments|test </td></tr>
</table>
 
]]></Examples>
</Method>
<Method author="bkhemani" methodDesc="&lt;b&gt; &#10; The module is useful when there is a grid/table having multiple column Headers,&#10; The first param works like the Where Clause, i.e., telling the script to enter data on the row where other(first parameter data) column condition falls.&#10; Also, The script verifies that all the condition values of all the different condition column should fall in the same row, and then on the same row value gets entered for the actual column name&lt;/b&gt;" methodName="SetDataOnGrid">
<Parameters>
<Parameter caption="conditionColumnNameAndValue" dataType="String" parameterName="conditionColumnNameAndValue" show="Y" type="TEXT">provide the condition column name and value, column name and its value should be separated by single pipe separator, if providing multiple values i.e., more than one column and its data, then separate the other condition column name and data from the first one by using double pipe separator.
	

 conditioncolumnname1value1  conditioncolumnnam2value2  conditioncolumnname3value3</Parameter>
<Parameter caption="actualColumnNameAndValueToSet" dataType="String" parameterName="actualColumnNameAndValueToSet" show="Y" type="TEXT">provide here the actual column name and the data that needs to be set: actualcolumnnamevaluetoset</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> conditioncolumnnameandvalue </th><th> actualcolumnnameandvaluetoset </th></tr>
 <tr><td> setdataongrid </td><td> field|parvalue </td><td> comments|test </td></tr>
</table>
 
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This module will used to fill records on an entity&lt;/b&gt;" methodName="FillEntityRecord">
<Parameters>
<Parameter caption="TestData" dataType="String" parameterName="TestData" show="Y" type="TEXT">specify the data that you fill inside the entity pipe separated: datagroupnamefieldnamevaluetoset</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> testdata </th></tr>
 <tr><td> fillentityrecord </td><td> instrument details|instrument name|testinstrument||instrument details|instrument description|testinstdescription </td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt; &#10; The module is useful when there is a grid/table on the popup and having multiple column Headers,&#10; The first param works like the Where Clause, i.e., telling the script to enter data on the row where other(first parameter data) column condition falls.&#10; Also, The script verifies that all the condition values of all the different condition column should fall in the same row, and then on the same row value gets entered for the actual column name &lt;/b&gt;" methodName="SetDataOnPopup">
<Parameters>
<Parameter caption="conditionColumnNameAndValue" dataType="String" parameterName="conditionColumnNameAndValue" show="Y" type="TEXT">provide the condition column name and value, column name and its value should be separated by single pipe separator, if providing multiple values i.e., more than one column and its data, then separate the other condition column name and data from the first one by using double pipe separator.
	

 conditioncolumnname1value1  conditioncolumnnam2value2  conditioncolumnname3value3</Parameter>
<Parameter caption="actualColumnNameAndValueToSet" dataType="String" parameterName="actualColumnNameAndValueToSet" show="Y" type="TEXT">provide here the actual column name and the data that needs to be set: actualcolumnnamevaluetoset</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> conditioncolumnnameandvalue </th><th> actualcolumnnameandvaluetoset </th></tr>
 <tr><td> setdataonpopup </td><td> field|parvalue </td><td> comments|test </td></tr>
</table>
 
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This module is used to set/fill data on popup screen&lt;/b&gt;" methodName="SetDataOnPopup">
<Parameters>
<Parameter caption="testData" dataType="String" parameterName="testData" show="Y" type="TEXT">specify the data that you wanted to fill/set pipe separated: fieldnamevaluefieldname2value2</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> testdata </th></tr>
 <tr><td> setdataonpopup </td><td> entity|bonds </td></tr>
</table>
 
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This module is used to click on setup button and select entity and template and save&lt;/b&gt;" methodName="PerformSetUpActions">
<Parameters>
<Parameter caption="EntityName" dataType="String" parameterName="EntityName" show="Y" type="TEXT">this parameter accepts entity name like equity, bonds etc</Parameter>
<Parameter caption="TemplateName" dataType="String" parameterName="TemplateName" show="Y" type="TEXT">this parameter accepts the template that will be used to fill a record.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> entityname </th><th> templatename </th></tr>
 <tr><td> performsetupactions </td><td> bonds </td><td> f: bond:t </td></tr>
</table>
 
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This module is used to click on setup button and select entity,template,draft and save&lt;/b&gt;" methodName="PerformSetUpActions">
<Parameters>
<Parameter caption="EntityName" dataType="String" parameterName="EntityName" show="Y" type="TEXT">this parameter accepts entity name like equity, bonds etc</Parameter>
<Parameter caption="TemplateName" dataType="String" parameterName="TemplateName" show="Y" type="TEXT">this parameter accepts the template that will be used to fill a record.</Parameter>
<Parameter caption="DraftName" dataType="String" parameterName="DraftName" show="Y" type="TEXT">this parameter accepts the draft name.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> entityname </th><th> templatename </th><th> draftname </th></tr>
 <tr><td> performsetupactions </td><td> bonds </td><td> f: bond:t </td><td> testdraft</td></tr>
</table>
 
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This method is used to fill record and whatever is been filled store that data and to be used later in other test cases using STOTPT variable&lt;/b&gt;" methodName="FillEntityRecordAndStoreValue">
<Parameters>
<Parameter caption="TestData" dataType="String" parameterName="TestData" show="Y" type="TEXT">specify the data that you fill inside the entity pipe separated: datagroupnamefieldnamevaluetoset</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> testdata </th></tr>
 <tr><td> fillentityrecordandstorevalue </td><td> instrument details|instrument name|testinstrument||instrument details|instrument description|testinstdescription </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyDataOnPopup">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This module is used to verify data on popup screen&lt;/b&gt;" methodName="VerifyDataOnPopup">
<Parameters>
<Parameter caption="testData" dataType="String" parameterName="testData" show="Y" type="TEXT">specify the data that you wanted to verify pipe separated: fieldnamevaluefieldname2value2</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> testdata </th></tr>
 <tr><td> verifydataonpopup </td><td> entity|bonds </td></tr>
</table>
 
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This module will click on Setup button, Select the Entity and select the template, Fill the required data on entity and save the record. &lt;/br&gt;&#10;  This single module is combined with multiple actions in a single module&lt;/b&gt;" methodName="CreateEntityRecord">
<Parameters>
<Parameter caption="EntityName" dataType="String" parameterName="EntityName" show="Y" type="TEXT">specify the gso that you need to select</Parameter>
<Parameter caption="TemplateName" dataType="String" parameterName="TemplateName" show="Y" type="TEXT">specify the template you need to use</Parameter>
<Parameter caption="TestData" dataType="String" parameterName="TestData" show="Y" type="TEXT">specify the data that you fill inside the entity pipe separated: datagroupnamefieldnamevaluetoset</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> entityname </th><th> templatename </th><th> testdata </th></tr>
 <tr><td> createentityrecord </td><td> bonds </td><td> f: bond:t </td><td> instrument details|instrument name|testinstrument||instrument details|instrument description|testinstdescription </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt; This module is used if you need to fill records on popup&lt;/b&gt;" methodName="FillEntityRecordOnPopup">
<Parameters>
<Parameter caption="TestData" dataType="String" parameterName="TestData" show="Y" type="TEXT">specify the data that you fill inside the entity pipe separated: datagroupnamefieldnamevaluetoset</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> testdata </th></tr>
 <tr><td> fillentityrecordonpopup </td><td> instrument details|instrument name|testinstrument||instrument details|instrument description|testinstdescription </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt; The module is useful when there is a grid/table having multiple column Headers with multiple grid&#10; The first param works like the Where Clause, i.e., telling the script to enter data on the row where other(first parameter data) column condition falls.&#10; Also, The script verifies that all the condition values of all the different condition column should fall in the same row, and then on the same row value gets entered for the actual column name &lt;/b&gt;" methodName="VerifyOrSetDataOnGrid">
<Parameters>
<Parameter caption="gridNum" dataType="int" parameterName="gridNum" show="Y" type="TEXT">specify the number of the grid if there are many grids available.</Parameter>
<Parameter caption="conditionColumnNameAndValue" dataType="String" parameterName="conditionColumnNameAndValue" show="Y" type="TEXT">provide the condition column name and value, column name and its value should be separated by single pipe separator, if providing multiple values i.e., more than one column and its data, then separate the other condition column name and data from the first one by using double pipe separator.
	

 conditioncolumnname1value1  conditioncolumnnam2value2  conditioncolumnname3value3</Parameter>
<Parameter caption="actualColumnNameAndValueToSet" dataType="String" parameterName="actualColumnNameAndValueToSet" show="Y" type="TEXT">provide here the actual column name and the data that needs to be set: actualcolumnnamevaluetoset</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> gridpos </th><th> conditioncolumnnameandvalue </th><th> actualcolumnnameandvaluetoset </th></tr>
 <tr><td> verifyorsetdataongrid </td><td> 1 </td><td> field|parvalue </td><td> comments|test </td></tr>
</table>
 
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="FillEntityRecordGSOAuto">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt; This module is used to click on the user name, select user preferences and checks/unchecks check boxes inside my profile&lt;/b&gt;" methodName="SetPreferencesForUsers">
<Parameters>
<Parameter caption="username" dataType="String" parameterName="username" show="Y" type="TEXT">this parameter accepts the username as a parameter like user1</Parameter>
<Parameter caption="preferenceNameValue" dataType="String" parameterName="preferenceNameValue" show="Y" type="TEXT">this parameter accepts data in pipe separated format: labelnameenablelabel2disable</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> username </th><th> preferencenamevalue </th></tr>
 <tr><td> setpreferencesforusers </td><td> user1 </td><td> show audit|enable</td></tr>
 <tr><td> setpreferencesforusers </td><td> user1 </td><td> case sensitive search|disable</td></tr>
</table>
 
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to Enter, update or add on grid which has rows and columns&lt;/b&gt;" methodName="SetDataOnGridTable">
<Parameters>
<Parameter caption="EnterorAdd" dataType="String" parameterName="EnterorAdd" show="Y" type="TEXT">this accepts parameter as add</Parameter>
<Parameter caption="ColumnNameAndValue" dataType="String" parameterName="ColumnNameAndValue" show="Y" type="TEXT">this accepts parameter as columnname1value1columnname2value2</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> enter </th><th> columnnameandvalue </th></tr>
 <tr><td> setdataongridtable </td><td>enter</td><td>columnname1|value1||columnname2|value2</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This Module is developed to perform Verification of Entity Records on a Overlapping Window/Popup Window&gt;&lt;/b&gt;" methodName="VerifyEntityRecord">
<Parameters>
<Parameter caption="datagroup" dataType="String" parameterName="datagroup" show="Y" type="TEXT">this parameter accepts datagroupname or gridtitle or popup title</Parameter>
<Parameter caption="fieldnamepipevalue" dataType="String" parameterName="fieldnamepipevalue" show="Y" type="TEXT">this contains the fieldname and value pipe separated. for e.g., extraction statussuccessfulrule statuspassed</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupname </th><th> fieldnamepipevalue </th></tr>
 <tr><td> verifyentityrecord </td><td> instrument details </td><<td> instrument name|testinstrument||instrument description|testinstdescription </td></tr>
</table>
 
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;Thid module will verify records values on a instrument/entity&lt;/b&gt;" methodName="VerifyEntityRecord">
<Parameters>
<Parameter caption="TestData" dataType="String" parameterName="TestData" show="Y" type="TEXT">specify the data that you verify inside the entity pipe separated: datagroupnamefieldnamevaluetoverify</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> testdata </th></tr>
 <tr><td> verifyentityrecord </td><td> instrument details|instrument name|testinstrument||instrument details|instrument description|testinstdescription </td></tr>
</table>
 
]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="Search" interfaceName="ISearch">
<Methods>
<Method author="mmkhan" methodDesc="&lt;b&gt;GlobalSearch Module with various combinations to test any random data from Database on UI which is not end dated. The various combinations&#10; include testing of data with Uppercase, Lowercase and Titlecase.&lt;/b&gt;" methodName="SearchRecords">
<Parameters>
<Parameter caption="columnNameAndValue" dataType="String" parameterName="columnNameAndValue" show="Y" type="TEXT">this could be any user given search text value or it could be blank</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> columnnameandvalue </th></tr>
 <tr><td> searchrecords </td><td>blank</td></tr>
 <tr><td> searchrecords </td><td> thai baht offshore </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to search for a record from the mentioned grid on Change Approval Screen.&lt;/b&gt;" methodName="SearchRecords">
<Parameters>
<Parameter caption="GridNo" dataType="int" parameterName="GridNo" show="Y" type="TEXT">specify the number of the grid if there are many grids available.</Parameter>
<Parameter caption="ColumnNameAndValue" dataType="String" parameterName="ColumnNameAndValue" show="Y" type="TEXT">name and value of the field that needs to be filtered. name and value should be separated by '' symbol.  
 columnnamecolumnvalue</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> gridno </th><th> columnnameandvalue </th></tr>
 <tr><td> searchrecords </td><td>2</td><td>lock requested|perpetual</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to search for a particular record on any popup screen.&lt;/b&gt;" methodName="SearchRecords">
<Parameters>
<Parameter caption="WindowTitleOrSectionName" dataType="String" parameterName="WindowTitleOrSectionName" show="Y" type="TEXT">title of the popup window or name of the section</Parameter>
<Parameter caption="ColumnNameAndValue" dataType="String" parameterName="ColumnNameAndValue" show="Y" type="TEXT">name and value of the field that needs to be filtered. name and value should be separated by '' symbol. in case multiple filter needs to be applied, parameters should be separated by '' symbol.
 columnname1columnvalue1columnname2columnvalue2</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> windowtitleorsectionname </th><th> columnnameandvalue </th></tr>
 <tr><td> searchrecords </td><td>description</td><td>instrument name|testbondinst</td></tr>
 <tr><td> searchrecords </td><td>extended income details</td><td>calculation method|accrual</td></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;GlobalSearch Module with various combinations to test any random data from Database on UI which is not end dated. The various combinations&#10; include testing of data with Uppercase, Lowercase and Titlecase.&lt;/b&gt;" methodName="GlobalSearch">
<Parameters>
<Parameter caption="Identifier" dataType="String" parameterName="Identifier" show="Y" type="TEXT">this could be any user given search text value or it could be blank</Parameter>
<Parameter caption="EntityType" dataType="String" parameterName="EntityType" show="Y" type="TEXT">type of the entity</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> identifier </th><th> entitytype </th></tr>
 <tr><td> globalsearch </td><td>blank</td><td> issue </td></tr>
 <tr><td> globalsearch </td><td> thai baht offshore </td><td> issuer </td></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;GlobalSearch Module with various combinations to test any random data from Database on UI which is not end dated. The various combinations&#10; include testing of data with Uppercase, Lowercase and Titlecase.&lt;/b&gt;" methodName="GlobalSearch">
<Parameters>
<Parameter caption="FieldName" dataType="String" parameterName="FieldName" show="Y" type="TEXT">this could be any user given search text value or it could be blank</Parameter>
<Parameter caption="EntityType" dataType="String" parameterName="EntityType" show="Y" type="TEXT">type of the entity</Parameter>
<Parameter caption="PartialText" dataType="String" parameterName="PartialText" show="Y" type="TEXT">true(means its a partial text), false (means if its not a partial text)</Parameter>
<Parameter caption="Failure" dataType="String" parameterName="Failure" show="Y" type="TEXT">true(means its a negative scenario), false (means its a positive scenario)</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> fieldname </th><th> entitytype </th><th> partialtext </th><th> failure </th></tr>
 <tr><td> globalsearch </td><td>blank</td><td> issue </td><td> false </td><td> false </td></tr>
 <tr><td> globalsearch </td><td> thai baht offshore </td><td> issuer </td><td> false </td><td> false </td></tr>
 <tr><td> globalsearch </td><td> thomsonreuters </td><td> financial institution </td><td> false </td><td> false </td></tr>
</table>
]]></Examples>
</Method>
<Method author="sakamble" methodDesc="&lt;b&gt;Detailed Search is an option avaliable for search of any field in the entity.&lt;/b&gt;" methodName="DetailedSearch">
<Parameters>
<Parameter caption="FieldLabelorValue" dataType="String" parameterName="FieldLabelorValue" show="Y" type="TEXT">label of the field or value of the field that needs to be searched</Parameter>
<Parameter caption="IsPopUpPresent" dataType="String" parameterName="IsPopUpPresent" show="Y" type="TEXT">to verify the error notification popup on search of a field. value can be true(if notification popup will be displayed after search)
  or false(if no notification popup is displayed)</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> fieldlabelorvalue </th><th> ispopuppresent </th></tr>
 <tr><td> detailedsearch </td><td>instrument system status : active </td><td> false </td></tr>
 <tr><td> detailedsearch </td><td> 0.8 </td><td> true </td></tr>
 <tr><td> detailedsearch </td><td> issuer->issuer long name :  </td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to search for any GSOEntity and open. (Specific to GSO Designer screen)&lt;/b&gt;" methodName="SearchGSOEntityAndOpen">
<Parameters>
<Parameter caption="EntityName" dataType="String" parameterName="EntityName" show="Y" type="TEXT">name of the entity that needs to searched and opened</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> entityname </th></tr>
 <tr><td> searchgsoentityandopen</td><td>equity</td></tr>
 <tr><td> searchgsoentityandopen</td><td>bonds</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to search for a record and open on the search page.&lt;/b&gt;" methodName="MultiSearchAndOpenRecord">
<Parameters>
<Parameter caption="ColumnNameAndValue" dataType="String" parameterName="ColumnNameAndValue" show="Y" type="TEXT">name and value of the field that needs to be filtered. name and value should be separated by '' symbol. in case multiple filter needs to be applied, parameters should be separated by '' symbol.
 
 columnname1columnvalue1columnname2columnvalue2</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> columnnameandvalue </th></tr>
 <tr><td> multisearchandopenrecord</td><td>primary entity id|reference entity id|fa2eebf715754e6bb11c25755584af89crds||primary entity id|reference entity id|1e064cc74b1443a09fc58521fe1420a1</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to search for a particular record on any popup screen.&lt;/b&gt;" methodName="SearchAndOpenRecord">
<Parameters>
<Parameter caption="WindowTitleOrSectionName" dataType="String" parameterName="WindowTitleOrSectionName" show="Y" type="TEXT">title of the popup window or name of the section</Parameter>
<Parameter caption="ColumnNameAndValue" dataType="String" parameterName="ColumnNameAndValue" show="Y" type="TEXT">name and value of the field that needs to be filtered. name and value should be separated by '' symbol. in case multiple filter needs to be applied, parameters should be separated by '' symbol.
 columnname1columnvalue1columnname2columnvalue2</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> windowtitleorsectionname </th><th> columnnameandvalue </th></tr>
 <tr><td> searchandopenrecord </td><td>coupon schedule</td><td>coupon type (amount/percent)|amount rate type</td></tr>
 <tr><td> searchandopenrecord </td><td>call schedules</td><td>call currency|ecs - ecuador sucre</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to search for a record and open on the search page.&lt;/b&gt;" methodName="SearchAndOpenRecord">
<Parameters>
<Parameter caption="ColumnNameAndValue" dataType="String" parameterName="ColumnNameAndValue" show="Y" type="TEXT">name and value of the field that needs to be filtered. name and value should be separated by '' symbol. in case multiple filter needs to be applied, parameters should be separated by '' symbol.
 
 columnname1columnvalue1columnname2columnvalue2</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> columnnameandvalue </th></tr>
 <tr><td> searchandopenrecord</td><td>issuer name|paccar financial corp</td></tr>
 <tr><td> searchandopenrecord</td><td>instrument name|taiyo yuden co ltd||instrument type|bond</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to search for a record and open from the mentioned grid on Change Approval Screen.&lt;/b&gt;" methodName="SearchAndOpenRecord">
<Parameters>
<Parameter caption="GridNo" dataType="int" parameterName="GridNo" show="Y" type="TEXT">specify the number of the grid if there are many grids available.</Parameter>
<Parameter caption="ColumnNameAndValue" dataType="String" parameterName="ColumnNameAndValue" show="Y" type="TEXT">name and value of the field that needs to be filtered. name and value should be separated by '' symbol.  
 columnnamecolumnvalue</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> gridno </th><th> columnnameandvalue </th></tr>
 <tr><td> searchandopenrecord </td><td>2</td><td>lock requested|perpetual</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;After Standard File Load or RunWorkflow, if u want to validate if the uploaded record is ivisible on UI after RunWorkflow the next step should be GlobalSearchWithFileLoad&lt;/b&gt;" methodName="GlobalSearchWithFileLoad">
<Parameters>
<Parameter caption="EntityType" dataType="String" parameterName="EntityType" show="Y" type="TEXT">type of the entity</Parameter>
<Parameter caption="Identifier" dataType="String" parameterName="Identifier" show="Y" type="TEXT">identifier of the entity that needs to be verified</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> entitytype </th><th> identifier </th></tr>
 <tr><td> globalsearchwithfileload </td><td>&lt;issu&gt;</td><td> &lt;identifier&gt; </td></tr>
 <tr><td> globalsearchwithfileload </td><td>&lt;entitytype&gt;</td><td>&lt;identifier&gt;</td></tr>
</table>
]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="RuleConfiguration" interfaceName="IRuleConfiguration">
<Methods>
<Method author="bsaswade&#10; this method is used to click on setup/edit button on rule name cell and create new rule." methodDesc="" methodName="CreateNewRule">
<Parameters>
<Parameter caption="gridControl" dataType="WebElement" parameterName="gridControl" show="Y" type="TEXT"/>
<Parameter caption="testData" dataType="String" parameterName="testData" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="bsaswade&#10; this method is used to set data on grid table columns." methodDesc="" methodName="SetTextInGridTable">
<Parameters>
<Parameter caption="gridControl" dataType="WebElement" parameterName="gridControl" show="Y" type="TEXT"/>
<Parameter caption="gridRow" dataType="WebElement" parameterName="gridRow" show="Y" type="TEXT"/>
<Parameter caption="testData" dataType="String" parameterName="testData" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="bsaswade&#10; this method is used to set data on grid table columns." methodDesc="" methodName="SetTextInGridTable">
<Parameters>
<Parameter caption="gridControl" dataType="WebElement" parameterName="gridControl" show="Y" type="TEXT"/>
<Parameter caption="testData" dataType="String" parameterName="testData" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="bsaswade&#10; this method is used to update the rule." methodDesc="" methodName="UpdateDataInGridTable">
<Parameters>
<Parameter caption="gridControl" dataType="WebElement" parameterName="gridControl" show="Y" type="TEXT"/>
<Parameter caption="gridRow" dataType="WebElement" parameterName="gridRow" show="Y" type="TEXT"/>
<Parameter caption="testData" dataType="String" parameterName="testData" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="bsaswade&#10; this method will delete the row on rule group configuration page." methodDesc="" methodName="DeleteRuleFromRuleGroup">
<Parameters>
<Parameter caption="gridNumber" dataType="int" parameterName="gridNumber" show="Y" type="TEXT"/>
<Parameter caption="searchKey" dataType="String" parameterName="searchKey" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="bsaswade&#10; this method will delete the row on rule group configuration page." methodDesc="" methodName="DeleteRuleFromRuleGroup">
<Parameters>
<Parameter caption="gridNumber" dataType="int" parameterName="gridNumber" show="Y" type="TEXT"/>
<Parameter caption="rowNumber" dataType="int" parameterName="rowNumber" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="FillRuleDesignerValues">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="bsaswade&#10; this method is used to click on spyglass on add rule name cell and select value from popup." methodDesc="" methodName="ClickOnSpyGlassAndSelectValue">
<Parameters>
<Parameter caption="gridControl" dataType="WebElement" parameterName="gridControl" show="Y" type="TEXT"/>
<Parameter caption="testData" dataType="String" parameterName="testData" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="bsaswade&#10; this method is used to update existing record by click on spyglass on add rule name cell and select value from popup." methodDesc="" methodName="ClickOnSpyGlassAndSelectValue">
<Parameters>
<Parameter caption="gridControl" dataType="WebElement" parameterName="gridControl" show="Y" type="TEXT"/>
<Parameter caption="gridRow" dataType="WebElement" parameterName="gridRow" show="Y" type="TEXT"/>
<Parameter caption="testData" dataType="String" parameterName="testData" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="DeleteRuleDesignerValues">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="RiskMaster" interfaceName="IRiskMaster">
<Methods>
<Method author="hvijayan" methodDesc="&lt;b&gt;This module is used to verify the values of a series based on the headerName vertically(Validation Panel) on TimeSeries Dashboard screen&lt;/b&gt;" methodName="verifyOrEditGrid">
<Parameters>
<Parameter caption="panelNameEditOrVerify" dataType="String" parameterName="panelNameEditOrVerify" show="Y" type="TEXT">this parameter is used to specify whether user wants to edit / verify records pipeseparated by the name of the panel eg. validation panel
 valid entries editvalidation panel
				 verifyvalidation panel</Parameter>
<Parameter caption="pipeSeparatedActualFieldNames" dataType="String" parameterName="pipeSeparatedActualFieldNames" show="Y" type="TEXT">this is the name of the header element pipe separated with the row value of the header (this is the data which is unique &amp; is used to identify the rows uniquely)</Parameter>
<Parameter caption="doublePipeSeparatedExpectedFieldNames" dataType="String" parameterName="doublePipeSeparatedExpectedFieldNames" show="Y" type="TEXT">these are the  single pipe separated values seen on the rows below the header the headernames along with the values to be entered/verified are passed with $ separator within 
 also used to verify the tooltip values before/after editing</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th>method name </th><th>panelnameeditorverify</th><th>pipeseparatedactualfieldnames</th><th>pipeseparatedexpectedfieldnames</th></tr>
 <tr><td> verifyoreditgrid </td><td>edit|validation panel</td><td>date|17-oct-2018</td><td>modified_cpstsc2 instr1|cpst|euro|vendor|rate|trade|default|mid$21||modified_cpstsc2 instr1|cpst|euro|vendor|rate|trade|default|bid$44</td></tr>
 <tr><td> verifyoreditgrid </td><td>verify|validation panel</td><td>date|17-oct-2018</td><td>modified_cpstsc2 instr1|cpst|euro|vendor|rate|trade|default|mid$price source - inhouse datasource - inhouse resolution method - manual update||modified_cpstsc2 instr1|cpst|euro|vendor|rate|trade|default|bid$resolution method - manual update</td></tr>
</table>
]]></Examples>
</Method>
<Method author="hvijayan" methodDesc="&lt;b&gt;This module is used to click on a tooltip on TimeSeries Dashboard screen&lt;/b&gt;" methodName="clickOnTooltipWithPopupButtons">
<Parameters>
<Parameter caption="tooltip" dataType="String" parameterName="tooltip" show="Y" type="TEXT">this must be the name of the tooltip used to click the button.tooltip is visible on hovering over the field(to be used for edit gird option of worklist panel)</Parameter>
<Parameter caption="buttonToClick" dataType="String" parameterName="buttonToClick" show="Y" type="TEXT">this is the name of the button to be clicked.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> tooltip </th> <th> buttontoclick</th></tr>
 <tr><td> clickontooltipwithpopupbuttons </td><td>edit grid </td><td>lock for edit</td></tr>
 <tr><td> clickontooltipwithpopupbuttons </td><td>edit grid </td><td>lock for approve</td></tr>	 
 <tr><td> clickontooltipwithpopupbuttons </td><td>edit grid </td><td>release lock</td></tr>
</table>
]]></Examples>
</Method>
<Method author="hvijayan" methodDesc="&lt;b&gt;This module is used to verify the Category counts on TimeSeries Dashboard screen&lt;/b&gt;" methodName="GetCategoryCountsRM">
<Parameters>
<Parameter caption="rowValue" dataType="String" parameterName="rowValue" show="Y" type="TEXT">this parameter is used to set the category name to be searched</Parameter>
<Parameter caption="tooltipNameValue" dataType="String" parameterName="tooltipNameValue" show="Y" type="TEXT">this is a pipe separated parameter used to search for a category based on all its tooltip values.
single  pipe is used to separate the tooltip name and its value
double  pipe is used to separate multiple tooltip name &amp; values.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> rowvalue </th> <th> tooltipnamevalue</th></tr>
 <tr><td> getcategorycountsrm </td><td>bond par rate curve </td><td>approved time series|10</td></tr>
 <tr><td> getcategorycountsrm </td><td>bond par rate curve </td><td>approved time series|10||unapproved time series|323||unverified time series|0||pending time series|12||locked time series|17</td></tr>
</table>
]]></Examples>
</Method>
<Method author="hvijayan" methodDesc="&lt;b&gt;This module is used to click on a tooltip &amp; to also click on the Play option on TimeSeries Dashboard screen&lt;/b&gt;" methodName="clickOnTooltipWithPopup">
<Parameters>
<Parameter caption="tooltip" dataType="String" parameterName="tooltip" show="Y" type="TEXT">this must be the name of the tooltip used to click the button.tooltip is visible on hovering over the field(to be used for selecting on the actions option of worklist panel)</Parameter>
<Parameter caption="dropdownValue" dataType="String" parameterName="dropdownValue" show="Y" type="TEXT">this is the name of the value to be selected from the dropdown.</Parameter>
<Parameter caption="runPlayClose" dataType="String" parameterName="runPlayClose" show="Y" type="TEXT">either the clos</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> tooltip </th> <th> dropdownvalue</th><th> runplayclose</th></tr>
 <tr><td> clickontooltipwithpopup </td><td>actions </td><td>make timeseries golden </td><td>play</td></tr>
 <tr><td> clickontooltipwithpopup </td><td>actions </td><td>make timeseries golden </td><td>close</td></tr>
</table>
]]></Examples>
</Method>
<Method author="hvijayan" methodDesc="&lt;b&gt;This module is used to click on a tooltip on TimeSeries Dashboard screen&lt;/b&gt;" methodName="clickOnTooltipWithPopup">
<Parameters>
<Parameter caption="panelNameTooltipName" dataType="String" parameterName="panelNameTooltipName" show="Y" type="TEXT">this is a single pipe separated input with first parameter the name of the panel,eg. myworklistpanel validationpanel 2nd will be
		the name of the tooltip used to click the button.tooltip is visible on hovering over the field(to be used for selecting on the plot by option of worklist panel)</Parameter>
<Parameter caption="dropdownValue" dataType="String" parameterName="dropdownValue" show="Y" type="TEXT">this is the name of the value to be selected from the dropdown.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> tooltip </th> <th> dropdownvalue</th></tr>
 <tr><td> clickontooltipwithpopup </td><td>myworklistpanel|plot by </td><td>tenor</td></tr>
 <tr><td> clickontooltipwithpopup </td><td>validationpanel|status </td><td>valid</td></tr>

</table>
]]></Examples>
</Method>
<Method author="hvijayan" methodDesc="&lt;b&gt;This module is used to verify the values of a series based on the headerName vertically(Validation Panel) on TimeSeries Dashboard screen&lt;/b&gt;" methodName="verifyGridDataBasedOnHeader">
<Parameters>
<Parameter caption="panelName" dataType="String" parameterName="panelName" show="Y" type="TEXT">this is the name of the panel eg. validation panel</Parameter>
<Parameter caption="headerName" dataType="String" parameterName="headerName" show="Y" type="TEXT">this is the name of the header element which is used to verify all the rows below it.</Parameter>
<Parameter caption="valuesToBeVerified" dataType="String" parameterName="valuesToBeVerified" show="Y" type="TEXT">these are the  single pipe separated values seen on the rows below the header
 values which are missing are passed with nothing eg . there are 2 missing entries to be verified (sequence is important): 13.11240000000099.199400000000-45.187400000000</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th>method name </th><th>panelname</th><th>headername</th><th>valuestobeverified</th></tr>
 <tr><td> verifygriddatabasedonheader </td><td>validation panel</td><td>cpstsc3instr1|cpst|us dollar|vendor|rate|trade|default|mid</td><td>|||13.112400000000|99.199400000000|-45.187400000000</td></tr>
 <tr><td> verifygriddatabasedonheader </td><td>validation panel</td><td>cpstsc3instr1|cpst|us dollar|vendor|rate|trade|default|mid</td><td>13.112400000000|99.199400000000|-45.187400000000</td></tr>
</table>
]]></Examples>
</Method>
<Method author="hvijayan" methodDesc="&lt;b&gt;This module is used to verify the values of a series based on the headerName vertically(Validation Panel) on TimeSeries Dashboard screen&lt;/b&gt;" methodName="verifyDataOnPopup">
<Parameters>
<Parameter caption="popupName" dataType="String" parameterName="popupName" show="Y" type="TEXT">this parameter is used to specify the name of the popup</Parameter>
<Parameter caption="pipeSeparatedNamesFixed" dataType="String" parameterName="pipeSeparatedNamesFixed" show="Y" type="TEXT">this is the name of the header element pipe separated with the row value of the header (this is the data which is unique &amp; is used to identify the rows uniquely)</Parameter>
<Parameter caption="doublePipeSeperatedNames" dataType="String" parameterName="doublePipeSeperatedNames" show="Y" type="TEXT">these are the  single pipe separated values seen on the rows below the header the headernames along with the values to be entered/verified are passed with $ separator within 
 also used to verify the tooltip values</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th>method name </th><th>panelnameeditorverify</th><th>pipeseparatedactualfieldnames</th><th>pipeseparatedexpectedfieldnames</th></tr>
 <tr><td> verifyoreditgrid </td><td>edit|validation panel</td><td>date|17-oct-2018</td><td>modified_cpstsc2 instr1|cpst|euro|vendor|rate|trade|default|mid$21||modified_cpstsc2 instr1|cpst|euro|vendor|rate|trade|default|bid$44</td></tr>
 <tr><td> verifyoreditgrid </td><td>verify|validation panel</td><td>date|17-oct-2018</td><td>modified_cpstsc2 instr1|cpst|euro|vendor|rate|trade|default|mid$price source - inhouse datasource - inhouse resolution method - manual update||modified_cpstsc2 instr1|cpst|euro|vendor|rate|trade|default|bid$resolution method - manual update</td></tr>
</table>
]]></Examples>
</Method>
<Method author="hvijayan" methodDesc="&lt;b&gt;This module is used to select either one of the types of Categories on TimeSeries Dashboard screen from the list of dropdowns.&lt;/b&gt;&#10;  &lt;b&gt;This module is also used to search the type of Category on TimeSeries Dashboard screen.&lt;/b&gt;" methodName="clickOnCategoryTypes">
<Parameters>
<Parameter caption="categoryTypeSearchOrSelect" dataType="String" parameterName="categoryTypeSearchOrSelect" show="Y" type="TEXT">this is a pipe separated parameter used to either select/search for a category.
			  select is used to specify when its a selection of the category types eg. selectasset type
			  search is used to specify that it's a search that needs to be done. eg. searchbond</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> categorytypesearchorselect</th></tr>
 <tr><td> clickoncategorytypes </td><td> select|asset type </td></tr>
 <tr><td> clickoncategorytypes </td><td> search|bond </td></tr>
</table>
]]></Examples>
</Method>
<Method author="hvijayan" methodDesc="&lt;b&gt;This module is used to click on a specific the Categories count value to be seen on the instrument/Curve/Matrix panel on TimeSeries Dashboard screen&lt;/b&gt;" methodName="ClickCategoryCountsRM">
<Parameters>
<Parameter caption="rowValue" dataType="String" parameterName="rowValue" show="Y" type="TEXT">this parameter is used to set the category name to be searched</Parameter>
<Parameter caption="tooltipNameValue" dataType="String" parameterName="tooltipNameValue" show="Y" type="TEXT">this is a pipe separated parameter used to click on a category based on its tooltip value.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> rowvalue </th> <th> tooltipnamevalue</th></tr>
 <tr><td> clickcategorycountsrm </td><td>bond par rate curve </td><td>approved time series|10</td></tr>
</table>
]]></Examples>
</Method>
<Method author="hvijayan" methodDesc="&lt;b&gt;This module is used to verify the header values of the Validation Panel on TimeSeries Dashboard screen&lt;/b&gt;" methodName="verifyHeaderValuesRM">
<Parameters>
<Parameter caption="panelNameSeriesOrHeader" dataType="String" parameterName="panelNameSeriesOrHeader" show="Y" type="TEXT">this is a pipe separated parameter with first value used to specify whether it's a series or a header to be verified followed by  with the panel name
 eg. validation panel</Parameter>
<Parameter caption="doublePipeSeparatedFieldNames" dataType="String" parameterName="doublePipeSeparatedFieldNames" show="Y" type="TEXT">this is the name of the header elements tooltip value which needs to be specified in a double pipe separated format.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th>method name </th><th>panelnameseriesorheader</th><th>doublepipeseparatedfieldnames</th></tr>
 <tr><td> verifyheadervaluesrm </td><td>series|validation panel</td><td>cpstsc2 instr1||cpstsc3 instr1||cpstsc2 instr1</td></tr>
 <tr><td> verifyheadervaluesrm </td><td>header|validation panel</td><td>cpstsc2 instr1|cpst|euro|vendor|rate|trade|default|mid prices : valid:(6) suspect:(0) missing:(0)||cpstsc5 instr1|cpst|indianrupee|bloomberg|vendor|rate|bloomberg|trade|default|mid prices : valid:(0) suspect:(0) missing:(6)||cpstsc5 instr1|cpst|indianrupee|vendor|rate|trade|default|mid prices : valid:(0) suspect:(0) missing:(0)</td></tr>
</table>
]]></Examples>
</Method>
<Method author="hvijayan" methodDesc="&lt;b&gt;This module is used to click on a tooltip &amp; to also click on the Play option on TimeSeries Dashboard screen&lt;/b&gt;" methodName="selectChoices">
<Parameters>
<Parameter caption="panelName" dataType="String" parameterName="panelName" show="Y" type="TEXT">this must be the name of the panel eg. my worklist panel</Parameter>
<Parameter caption="rowValue" dataType="String" parameterName="rowValue" show="Y" type="TEXT">this is the name of the value to be selected from the checkboxes either multiple values bdouble pipeb separated or 
 all the elements to be selected together/ the name of the header itself to select all records.
 also note that this module does not accept values in single pipe separated format.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th>method name </th><th>panel name</th><th>rowvalue</th></tr>
 <tr><td> selectchoices </td><td>my worklist panel </td><td>cpstsc4 instr1|cpst|australian dollar|vendor|rate|trade|default|mid||tw17z7275037|multitenancy_eod_1700|algerian dinar|p.tln?>i81|vendor|price quoted|trade|default|mid </td></tr>
 <tr><td> selectchoices </td><td>my worklist panel </td><td>instrument name  [3] </td></tr>
</table>
]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="Pricing" interfaceName="IPricing">
<Methods>
<Method author="" methodDesc="For specific pricing clicks &amp; verifications" methodName="GetCategoryCounts">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;TODO&lt;/b&gt;" methodName="verifyPointOnGraph">
<Parameters>
<Parameter caption="graphData" dataType="String" parameterName="graphData" show="Y" type="TEXT">todo.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> graphdata</th></tr>
 <tr><td> todo </td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;TODO&lt;/b&gt;" methodName="verifyPointOnGraph">
<Parameters>
<Parameter caption="curveName" dataType="String" parameterName="curveName" show="Y" type="TEXT">todo.</Parameter>
<Parameter caption="gridno" dataType="String" parameterName="gridno" show="Y" type="TEXT">todo.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> curvename</th><th> gridno</th></tr>
 <tr><td> todo </td><td> todo </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyDataOnPopupMDS">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="verifyGridHeadersMDS">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="rightClickFilters">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="clickOnTooltipWithNoGridMDS">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;TODO&lt;/b&gt;" methodName="ClickOnGraph">
<Parameters>
<Parameter caption="graphData" dataType="String" parameterName="graphData" show="Y" type="TEXT">todo.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> graphdata</th></tr>
 <tr><td> todo </td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;TODO&lt;/b&gt;" methodName="ClickOnGraph">
<Parameters>
<Parameter caption="curveNames" dataType="String" parameterName="curveNames" show="Y" type="TEXT">todo.</Parameter>
<Parameter caption="graphData" dataType="String" parameterName="graphData" show="Y" type="TEXT">todo.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> curvenames</th><th> graphdata</th></tr>
 <tr><td> todo </td><td> todo </td></tr>
</table>
]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="NavigationRelatedModules" interfaceName="INavigationRelatedModules">
<Methods>
<Method author="mmkhan" methodDesc="" methodName="NavigateToPreviousEntityOnBreadCrumb">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="mmkhan&#10; it will navigate to the path and perform the context click operation and also unlock the grid" methodDesc="" methodName="NavigateGSOEntityAndPerformAction">
<Parameters>
<Parameter caption="path" dataType="String" parameterName="path" show="Y" type="TEXT">to be traversed</Parameter>
<Parameter caption="OperationToBePerformed" dataType="String" parameterName="OperationToBePerformed" show="Y" type="TEXT">:contextclickoperationtobeperformed</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="NavigateToPageViaArrowKeys">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="" methodName="NavigateOnFieldHyperlinkAndAdd">
<Parameters>
<Parameter caption="dataGroupAndFieldNamePipeSeparated" dataType="String" parameterName="dataGroupAndFieldNamePipeSeparated" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="" methodName="NavigateOnBreadCrumbs">
<Parameters>
<Parameter caption="sectionNameAndBreadCrum" dataType="String" parameterName="sectionNameAndBreadCrum" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="NavigateViaScreenDivider">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="" methodName="NavigateToRelationalEntity">
<Parameters>
<Parameter caption="path" dataType="String" parameterName="path" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="NavigateOnFieldHyperlinkOnPopup">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="NavigateToLandingPage">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="" methodName="NavigateOnFieldHyperlink">
<Parameters>
<Parameter caption="dataGroupAndFieldNamePipeSeparated" dataType="String" parameterName="dataGroupAndFieldNamePipeSeparated" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="This will Navigate to the Master/List/Search Pages on the UI" methodName="NavigateToMaster">
<Parameters>
<Parameter caption="NavigationPath" dataType="String" parameterName="NavigationPath" show="Y" type="TEXT">for navigation path test data, menu and sub-menu to be given and should be separated by semicolon in the</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="MakerCheckerIVEyeVIEye" interfaceName="IMakerCheckerIVEyeVIEye">
<Methods>
<Method author="" methodDesc="" methodName="VerifyMakerCheckerModifiedValues">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyModificationValue">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyBlankFields">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyMakerCheckerModifiedDataGroups">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;PerformMakerCheckerActionsFromSearch.&lt;/b&gt;" methodName="PerformMakerCheckerActionsFromSearch">
<Parameters>
<Parameter caption="rowNumber" dataType="int" parameterName="rowNumber" show="Y" type="TEXT">specify row number</Parameter>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT">name of the button</Parameter>
<Parameter caption="dropDown" dataType="String" parameterName="dropDown" show="Y" type="TEXT">dropdown value</Parameter>
<Parameter caption="comments" dataType="String" parameterName="comments" show="Y" type="TEXT">specify comments</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> popupwindowname </th><th> rownumber </th><th> buttonname </th><th> dropdown </th><th> dropdown </th></tr>
 <tr><td> performmakercheckeractionsfromsearch </td><td> todo </td><td> todo </td><td> todo </td><td> todo </td><td> todo </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;PerformMakerCheckerActionsFromSearch.&lt;/b&gt;" methodName="PerformMakerCheckerActionsFromSearch">
<Parameters>
<Parameter caption="rowNumber" dataType="int" parameterName="rowNumber" show="Y" type="TEXT">specify row number</Parameter>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT">name of the button</Parameter>
<Parameter caption="comments" dataType="String" parameterName="comments" show="Y" type="TEXT">specify comments</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> rownumber </th><th> buttonname </th><th> comments </th></tr>
 <tr><td> performmakercheckeractionsfromsearch </td><td> todo </td><td> todo </td><td> todo </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyMakerCheckerModificationTable">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyMakerCheckerWorkflowHistory">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="Locking" interfaceName="ILocking">
<Methods>
<Method author="" methodDesc="" methodName="VerifyRecordLock">
<Parameters>
<Parameter caption="listOfDataGroups" dataType="String" parameterName="listOfDataGroups" show="Y" type="TEXT"/>
<Parameter caption="lockTypeCommentsBooleanVal" dataType="String" parameterName="lockTypeCommentsBooleanVal" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="Applies or Removes the Lock on entity with its comments&#10; APPLY:&#10; For Normal, Perpetual and Record lock:&#10; DataGroupName|FieldName|LockType|Comments&#10; &lt;br/&gt; &lt;br/&gt; Example:-: Instrument Details|Instrument Name|Normal Lock|Normal lock is applied&#10; For Entity Lock:&#10; LockType|Comments&#10; &lt;br/&gt; &lt;br/&gt; Example:-: Lock|Entity Lock is applied&#10; ---------------------------------------------------------------------------------------------------------------&#10; REMOVE:&#10; For Normal,Perpetual and Record Lock:&#10; DataGroupName|FieldName|Remove&#10; &lt;br/&gt; &lt;br/&gt; Example:-: Instrument Details|Instrument Name|Remove&#10; For Entity Lock:&#10; LockType&#10; &lt;br/&gt; &lt;br/&gt; Example:-: Unlock" methodName="ApplyRemoveLock">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyLock">
<Parameters>
<Parameter caption="DataGroupFieldNamelockTypeAndComments" dataType="String" parameterName="DataGroupFieldNamelockTypeAndComments" show="Y" type="TEXT"/>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyLockOnDB">
<Parameters>
<Parameter caption="preferredInstrumentIdentifier" dataType="String" parameterName="preferredInstrumentIdentifier" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="GSODesigner" interfaceName="IGSODesigner">
<Methods>
<Method author="kpandya" methodDesc="" methodName="VerifyAllDefaultorCustomGSOLeafNodes">
<Parameters>
<Parameter caption="DefaultorCustom" dataType="String" parameterName="DefaultorCustom" show="Y" type="TEXT">this parameter needs to be passed as:- default or custom</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="anagre" methodDesc="" methodName="ClickOnGSOIconsWithToolTipOnPouUp">
<Parameters>
<Parameter caption="tooltipText" dataType="String" parameterName="tooltipText" show="Y" type="TEXT">this parameter needs to be passed as
 eg: add new rule</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="kpandya" methodDesc="" methodName="CloseTabOnGSO">
<Parameters>
<Parameter caption="tabName" dataType="String" parameterName="tabName" show="Y" type="TEXT">this parameter needs to be passed as
 eg: employeedetail</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="kpandya" methodDesc="" methodName="VerifyAllGSOs">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="kpandya" methodDesc="" methodName="SelectTabOnGSO">
<Parameters>
<Parameter caption="tabName" dataType="String" parameterName="tabName" show="Y" type="TEXT">this parameter needs to be passed as
 eg: benchmark</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="kpandya" methodDesc="" methodName="VerifyTabOnGSO">
<Parameters>
<Parameter caption="tabName" dataType="String" parameterName="tabName" show="Y" type="TEXT">this parameter needs to be passed as
 eg: accountbenchmarkcustomeraddressemployeedetail</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">this parameter needs to be passed as
 eg: true or false</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="anagre" methodDesc="" methodName="CreateRule">
<Parameters>
<Parameter caption="entityOrFunctionAddIcon" dataType="String" parameterName="entityOrFunctionAddIcon" show="Y" type="TEXT">editordelete
 this parameter needs to be passed as
 eg: bonds,if condition, 2</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="anagre" methodDesc="" methodName="SearchAndOpenRecordGSOField">
<Parameters>
<Parameter caption="coloumnNamesAndValues" dataType="String" parameterName="coloumnNamesAndValues" show="Y" type="TEXT">buttonname
 this parameter needs to be passed as
 eg: labelinstrument detailsinstrument name</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="kpandya" methodDesc="" methodName="OpenGSOorDataGroupFromTreeView">
<Parameters>
<Parameter caption="GSOorDatagrpPath" dataType="String" parameterName="GSOorDatagrpPath" show="Y" type="TEXT">this parameter needs to be passed as
 eg: goldensource objectsaccountsaccount or data groupsemployeeemployeedetail</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="anagre" methodDesc="" methodName="OpenOrDeleteEntity">
<Parameters>
<Parameter caption="entityName" dataType="String" parameterName="entityName" show="Y" type="TEXT">valuestoselect
 this parameter needs to be passed as
 eg: and1add1, instrument nameequal toinstrument description</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="anagre" methodDesc="" methodName="AddNewVSHOrVendor">
<Parameters>
<Parameter caption="addButtonToolTip" dataType="String" parameterName="addButtonToolTip" show="Y" type="TEXT">openordelete
 this parameter needs to be passed as
 eg: test entity2, delete</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="UpdateVSHOrVendorEntry">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyVSHOrVendorEntry">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="kpandya" methodDesc="" methodName="VerifyTabActiveorInActiveOnGSO">
<Parameters>
<Parameter caption="tabName" dataType="String" parameterName="tabName" show="Y" type="TEXT">this parameter needs to be passed as
 eg: accountbenchmarkcustomeraddress</Parameter>
<Parameter caption="activeOrInactive" dataType="String" parameterName="activeOrInactive" show="Y" type="TEXT">this parameter needs to be passed as
 eg: active or inactive</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="kpandya" methodDesc="" methodName="VerifyAllGSOLeafNodes">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="anagre" methodDesc="" methodName="FillDeleteRuleCondition">
<Parameters>
<Parameter caption="conditionAndRow" dataType="String" parameterName="conditionAndRow" show="Y" type="TEXT">value
 this parameter needs to be passed as
 eg: choose constant/variable, field</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="DeleteVSHOrVendorEntry">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="anagre" methodDesc="" methodName="EditOrDeleteGSORule">
<Parameters>
<Parameter caption="ruleName" dataType="String" parameterName="ruleName" show="Y" type="TEXT">this parameter needs to be passed as
 eg: test1, delete or edit or description</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="kpandya" methodDesc="" methodName="VerifyAllGSODatagroups">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="kpandya" methodDesc="" methodName="SelectOptionOnRightClick">
<Parameters>
<Parameter caption="GSOorDatagrpPath" dataType="String" parameterName="GSOorDatagrpPath" show="Y" type="TEXT">this parameter needs to be passed as
 eg: accountbenchmarkcustomeraddress</Parameter>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT">this parameter needs to be passed as
 eg: open or create new gso etc</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="anagre" methodDesc="" methodName="SelectValueOnPopup">
<Parameters>
<Parameter caption="tooltipText" dataType="String" parameterName="tooltipText" show="Y" type="TEXT">function, occurance
 this parameter needs to be passed as
 eg: then,if condition,2</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="GenericModules" interfaceName="IGenericModules">
<Methods>
<Method author="arath" methodDesc="&lt;b&gt;This module select the grid by the grid position and the row value.&lt;/b&gt;" methodName="SelectGridRow">
<Parameters>
<Parameter caption="gridPosition" dataType="int" parameterName="gridPosition" show="Y" type="TEXT">refers to the grid  user want select</Parameter>
<Parameter caption="rowNoColVal" dataType="String" parameterName="rowNoColVal" show="Y" type="TEXT">refers to the value user want to select from the particular grid</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> gridposition </th><th> rownocolval </th></tr>
 <tr><td> selectgridrow </td><td>2</td><td>euro(bef) (b) </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyMenuOrder">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module is used to click on any button having tooltip on adornment panel.&lt;/b&gt;" methodName="ClickOnButtonWithTooltipOnAdornment">
<Parameters>
<Parameter caption="tooltip" dataType="String" parameterName="tooltip" show="Y" type="TEXT">- the tooltip button name</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> tooltip </th></tr>
 <tr><td> clickonbuttonwithtooltiponadornment </td><td> chal history </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module will check if the button is enabled on the Others drop down option in UI screen.&lt;/b&gt;" methodName="CheckIfButtonEnableOnOthersDropdown">
<Parameters>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT">this param is for specifying button name</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">this param is to give result whether the button is available or not as true/false</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonlabel </th><th> booleanval </th></tr>
 <tr><td> checkifbuttonenableonothersdropdown </td><td> export </td><td> true </td></tr>
 <tr><td> checkifbuttonenableonothersdropdown </td><td> save draft </td><td> false </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyMessageOnEngineValidationPopUp">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module Works same like FillEntityRecords but here this module will work on any screen which has just a labelName and value.&lt;/b&gt;" methodName="SetFieldValues">
<Parameters>
<Parameter caption="labelNamesValuesPipeSeperated" dataType="String" parameterName="labelNamesValuesPipeSeperated" show="Y" type="TEXT">explanation of this param</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> labelnamesvaluespipeseperated </th></tr>
 <tr><td> setfieldvalues </td><td> label1|issuertest1||label2|issuerdesc1</td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module will fill the dropdwon with the gso name ,data group name ,field name.&lt;/b&gt;" methodName="FillDropDown">
<Parameters>
<Parameter caption="GSONameDGNameFNameOrDGNameFName" dataType="String" parameterName="GSONameDGNameFNameOrDGNameFName" show="Y" type="TEXT">the dropdown value with the gso name ,data group name ,field name.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> gsonamedgnamefnameordgnamefname </th> </tr>
 <tr><td> filldropdown </td><td>issuer|issuer information|type|corporation </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This method will select a particular value in dropdown and verify if present or not as per the booleanVal parameter(true/false).&lt;/b&gt;" methodName="ExpandDataRow">
<Parameters>
<Parameter caption="rowValueOrPipeSeperatedRowValues" dataType="String" parameterName="rowValueOrPipeSeperatedRowValues" show="Y" type="TEXT">value of the row that needs to be expanded. if you want to expand multiple child rows, then you need to mention them in pipe-separated format.</Parameter>
<Parameter caption="gridNum" dataType="int" parameterName="gridNum" show="Y" type="TEXT">number of grid or table you need to select.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> rowvalueorpipeseperatedrowvalues </th> <th> gridnum </th> </tr>
 <tr><td> expanddatarow </td><td>menu1|page1 </td> <td> 2 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This will single click on the grid number specified which has a matching Row name.&lt;/b&gt;" methodName="ClickOnDataRow">
<Parameters>
<Parameter caption="gridNum" dataType="int" parameterName="gridNum" show="Y" type="TEXT">- number of the grid where the row you want to select is located.</Parameter>
<Parameter caption="rownum" dataType="int" parameterName="rownum" show="Y" type="TEXT">- text in the row to be searched.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> gridnum </th> <th> rownum </th></tr>
 <tr><td> clickondatarow </td><td> 2 </td><td> 5 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This will single click on the grid number specified which has a matching Row name.&lt;/b&gt;" methodName="ClickOnDataRow">
<Parameters>
<Parameter caption="gridNum" dataType="int" parameterName="gridNum" show="Y" type="TEXT">- number of the grid where the row you want to select is located.</Parameter>
<Parameter caption="rowValue" dataType="String" parameterName="rowValue" show="Y" type="TEXT">- text in the row to be searched.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> gridnum </th> <th> rowvalue </th></tr>
 <tr><td> clickondatarow </td><td> 2 </td><td> bbglobalequityds </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies sequence/order of the data given by the user as test data and matches that data and its sequence the way it is given with the actual data getting displayed at runtime.&lt;/b&gt;" methodName="VerifyDataOrder">
<Parameters>
<Parameter caption="gridPosition" dataType="int" parameterName="gridPosition" show="Y" type="TEXT">there can be nultiple table/grid like structure on one screen, so user needs to mention the grid number.</Parameter>
<Parameter caption="columnName" dataType="String" parameterName="columnName" show="Y" type="TEXT">the column name under which data sequence needs to be verified</Parameter>
<Parameter caption="data" dataType="String" parameterName="data" show="Y" type="TEXT">the data needs to be separated by single pipe separator, this expected data will verified against the actual data.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> gridposition </th><th> columnname </th><th> data </th></tr>
 <tr><td> verifydataorder </td><td> 1</td><td> instrument name </td><td> euro(ats) (b)s|ecuador sucre </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verify template name.&lt;/b&gt;" methodName="VerifyTreeData">
<Parameters>
<Parameter caption="MenuPath" dataType="String" parameterName="MenuPath" show="Y" type="TEXT">template name and entity name to be provided in  pipe separated.</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">true/false condition</Parameter>
<Parameter caption="gridIndex" dataType="int" parameterName="gridIndex" show="Y" type="TEXT">indicate the grid.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> menupath </th><th> flag </th><th> gridindex </th></tr>
 <tr><td> verifytreedata </td><td> bonds|!sharetousergrouprole!sharesearchtemplate </td><td> false </td><td> 1 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="arath" methodDesc="&lt;b&gt;This will always select the last row, if there is a grid available on popup window.&lt;/b&gt;" methodName="SelectRow">
<Parameters/>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th></tr>
 <tr><td> selectrow </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This method will select the checkbox mentioned.&lt;/b&gt;" methodName="SelectCheckBox">
<Parameters>
<Parameter caption="labelName" dataType="String" parameterName="labelName" show="Y" type="TEXT">the checkbox name</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="" methodName="ClickOnButtonWithToolTip">
<Parameters>
<Parameter caption="tooltipText" dataType="String" parameterName="tooltipText" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module will click on button on the UI screen having tooltip.&lt;/b&gt;" methodName="ClickOnButtonWithToolTip">
<Parameters>
<Parameter caption="tooltipText" dataType="String" parameterName="tooltipText" show="Y" type="TEXT">- this param is for specifying button name</Parameter>
<Parameter caption="GridNo" dataType="int" parameterName="GridNo" show="Y" type="TEXT">- number of the grid where the row you want to select is located.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> tooltiptext </th><th> gridno </th></tr>
 <tr><td> clickonbuttonwithtooltip </td><td> approve </td><td> 3 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module will click on button on the UI screen having tooltip.&lt;/b&gt;" methodName="ClickOnButtonWithToolTip">
<Parameters>
<Parameter caption="tooltipText" dataType="String" parameterName="tooltipText" show="Y" type="TEXT">this param is for specifying button name</Parameter>
<Parameter caption="NotificationMessage" dataType="String" parameterName="NotificationMessage" show="Y" type="TEXT">this param is for specifying notification message that is displayed on the screen after the button click.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> tooltiptext </th><th> notificationmessage </th></tr>
 <tr><td> clickonbuttonwithtooltip </td><td> approve </td><td> operation cannot be performed </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module will click on button on the UI screen having tooltip.&lt;/b&gt;" methodName="ClickOnButtonWithToolTip">
<Parameters>
<Parameter caption="datagroupName" dataType="String" parameterName="datagroupName" show="Y" type="TEXT">- the datagroup name</Parameter>
<Parameter caption="fieldName" dataType="String" parameterName="fieldName" show="Y" type="TEXT">- the field name of the datagroup</Parameter>
<Parameter caption="tooltipText" dataType="String" parameterName="tooltipText" show="Y" type="TEXT">- the tooltip button name</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupname </th><th> fieldname </th> <th> tooltiptext </th></tr>
 <tr><td> clickonbuttonwithtooltip </td><td> issuer information </td><td> issuer long name </td> <td> edit field name </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module will click on button on the popup window on the UI screen.&lt;/b&gt;" methodName="ClickOnButtonOnPopup">
<Parameters>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT">this param is for specifying button name</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonname </th></tr>
 <tr><td> clickonbuttononpopup </td><td> save </td></tr>
 </table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module will click on button on the popup window on the UI screen and get the notification message.&lt;/b&gt;" methodName="ClickOnButtonOnPopup">
<Parameters>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT">this param is for specifying button name.</Parameter>
<Parameter caption="notificationPopupMessage" dataType="String" parameterName="notificationPopupMessage" show="Y" type="TEXT">this param is for specifying notification message that is displayed on the screen after the button click.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonname </th><th> notificationpopupmessage </th></tr>
 <tr><td> clickonbuttononpopup </td><td> save </td> <td>template is saved </td></tr>
 </table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;Use this function to right-click on a field or row and select an option from the context menu.&lt;/b&gt;" methodName="PerformBulkMenuAction">
<Parameters>
<Parameter caption="gridNum" dataType="int" parameterName="gridNum" show="Y" type="TEXT">the grid number.</Parameter>
<Parameter caption="rowValuesPipeSeperated" dataType="String" parameterName="rowValuesPipeSeperated" show="Y" type="TEXT">a row value which can uniquely identify a row for which the action is to be performed.
 bdouble pipe  is used to separate multiple fields.b</Parameter>
<Parameter caption="menuOption" dataType="String" parameterName="menuOption" show="Y" type="TEXT">the menu's option.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> gridnum </th> <th> rowvaluespipeseperated </th>  <th> menuoption </th></tr>
 <tr><td> performbulkmenuaction </td><td> 5 </td> <td> 3 month forward||2 month forward||1 month forward </td>  <td> open details </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;Use this function to verify the visibility of any button which has a tooltip.&lt;/b&gt;" methodName="CheckButtonWithToolTipVisibility">
<Parameters>
<Parameter caption="sectionNameOrDataGroupName" dataType="String" parameterName="sectionNameOrDataGroupName" show="Y" type="TEXT">name of the data group.</Parameter>
<Parameter caption="tooltipText" dataType="String" parameterName="tooltipText" show="Y" type="TEXT">this param is to give name of the tooltip.</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">this param is to get result as true or false.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> sectionnameordatagroupname </th> <th> tooltiptext </th><th> flag </th></tr>
 <tr><td> checkbuttonwithtooltipvisibility </td><td> description</td><td>create new </td><td> false </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;Use this function to verify the visibility of any button which has a tooltip.&lt;/b&gt;" methodName="CheckButtonWithToolTipVisibility">
<Parameters>
<Parameter caption="tooltipTextOrSectionNameWithTooltip" dataType="String" parameterName="tooltipTextOrSectionNameWithTooltip" show="Y" type="TEXT">name of the tooltip or the pipe-separated data group with tooltip.</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">this param is to give result whether the button is available or not as true/false</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> tooltiptextorsectionnamewithtooltip </th><th> flag </th></tr>
 <tr><td> checkbuttonwithtooltipvisibility </td><td> menu configuration </td><td> true </td></tr>
 <tr><td> checkbuttonwithtooltipvisibility </td><td> description | create new </td><td> false </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;SaveWithValidationFields.&lt;/b&gt;" methodName="SaveWithValidationFields">
<Parameters>
<Parameter caption="testData" dataType="String" parameterName="testData" show="Y" type="TEXT">testdata</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> testdata </th></tr>
 <tr><td> savewithvalidationfields </td><td> todo </td></tr>
</table>
]]></Examples>
</Method>
<Method author="arath" methodDesc="&lt;b&gt;This module will validate the required fields and save the entity&lt;/b&gt;" methodName="SaveWithValidationFields">
<Parameters/>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th></tr>
 <tr><td> savewithvalidationfieldsonpopup </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module user checks the check box for Edit Relation.&lt;/b&gt;" methodName="SelectCheckboxWithTooltip">
<Parameters>
<Parameter caption="windowName" dataType="String" parameterName="windowName" show="Y" type="TEXT">select the window  where the column present</Parameter>
<Parameter caption="columnNameAndValue" dataType="String" parameterName="columnNameAndValue" show="Y" type="TEXT">column name along with value to be provided as pipe separated value.</Parameter>
<Parameter caption="checkboxTooltipName" dataType="String" parameterName="checkboxTooltipName" show="Y" type="TEXT">option name to be provided.</Parameter>
<Parameter caption="booleanValForCheckUncheck" dataType="String" parameterName="booleanValForCheckUncheck" show="Y" type="TEXT">action iteam whether to check the check box (true/false)</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> windowname </th><th> columnnameandvalue </th><th> checkboxtooltipname </th><th>booleanvalforcheckuncheck</th></tr>
 <tr><td> selectcheckboxwithtooltip </td><td> configure attributes </td><td> gso attributes|expression version </td><td> show/hide attribute </td><td>true</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module user checks the check box for Edit Relation.&lt;/b&gt;" methodName="SelectCheckboxWithTooltip">
<Parameters>
<Parameter caption="gridPosition" dataType="int" parameterName="gridPosition" show="Y" type="TEXT">select the grid where the column present</Parameter>
<Parameter caption="columnNameAndValue" dataType="String" parameterName="columnNameAndValue" show="Y" type="TEXT">column name along with value to be provided as pipe separated value.</Parameter>
<Parameter caption="checkboxTooltipName" dataType="String" parameterName="checkboxTooltipName" show="Y" type="TEXT">option name to be provided.</Parameter>
<Parameter caption="booleanValForCheckUncheck" dataType="String" parameterName="booleanValForCheckUncheck" show="Y" type="TEXT">action iteam whether to check the check box (true/false)</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> gridposition </th><th> approveorrejectstatus </th><th> columnnameandvalue </th><th> checkboxtooltipname </th><th>booleanvalforcheckuncheck</th></tr>
 <tr><td> selectcheckboxwithtooltip </td><td> 1 </td><td> configure attributes </td><td> gso attributes|expression version </td><td> show/hide attribute </td><td>true</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is is used to drag and drop the datagroups on Template Configuration Screen.&lt;/b&gt;" methodName="DragAndDropFields">
<Parameters>
<Parameter caption="popupName" dataType="String" parameterName="popupName" show="Y" type="TEXT">name of the popup window</Parameter>
<Parameter caption="DragItem" dataType="String" parameterName="DragItem" show="Y" type="TEXT">name of the header and text of the source element separated by  symbol</Parameter>
<Parameter caption="DropToItem" dataType="String" parameterName="DropToItem" show="Y" type="TEXT">name of the header and text of the desctination element separated by  symbol</Parameter>
<Parameter caption="gridNumber" dataType="int" parameterName="gridNumber" show="Y" type="TEXT">specify grid number</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> popupwindowname </th><th> headernamevaluetobedraggedpipeseperated </th><th> headervaluetobedroppedpipeseperated </th><th> checkboxtooltipname </th><th> grid number </th></tr>
 <tr><td> draganddropfields </td><td> todo </td><td> todo </td><td> todo </td><td> todo </td><td> todo </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is is used to drag and drop the datagroups on Template Configuration Screen.&lt;/b&gt;" methodName="DragAndDropFields">
<Parameters>
<Parameter caption="popupWindowName" dataType="String" parameterName="popupWindowName" show="Y" type="TEXT">name of the popup window</Parameter>
<Parameter caption="HeaderNameValueToBeDraggedPipeSeperated" dataType="String" parameterName="HeaderNameValueToBeDraggedPipeSeperated" show="Y" type="TEXT">name of the header and text of the source element separated by  symbol</Parameter>
<Parameter caption="HeaderValueToBeDroppedPipeSeperated" dataType="String" parameterName="HeaderValueToBeDroppedPipeSeperated" show="Y" type="TEXT">name of the header and text of the desctination element separated by  symbol</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> popupwindowname </th><th> headernamevaluetobedraggedpipeseperated </th><th> headervaluetobedroppedpipeseperated </th><th> checkboxtooltipname </th></tr>
 <tr><td> draganddropfields </td><td> todo </td><td> todo </td><td> todo </td><td> todo </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module will right click and select the menu option depending on the grid number and row Name specified used in Change approval screen.&lt;/b&gt;" methodName="SelectMenuOptionOnDataRow">
<Parameters>
<Parameter caption="rowValue" dataType="String" parameterName="rowValue" show="Y" type="TEXT">refers to name of the field  in which user want to do the right click to select the menu.</Parameter>
<Parameter caption="menuOption" dataType="String" parameterName="menuOption" show="Y" type="TEXT">refers to the name of the menu user want to use.</Parameter>
<Parameter caption="gridNum" dataType="int" parameterName="gridNum" show="Y" type="TEXT">refers to the grid on the main screen.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> rowvalue </th><th> menuoption </th><th> gridnum </th></tr>
 <tr><td> selectmenuoptionondatarow </td><td> par value </td><td> approve </td><td> 1 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module will right click and select the menu on grid which has only one grid showing on UI. Users needs to just pass the menu name.&lt;/b&gt;" methodName="SelectMenuOptionOnDataRow">
<Parameters>
<Parameter caption="menuOption" dataType="String" parameterName="menuOption" show="Y" type="TEXT">refers to the name of the menu user want to use.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> menuoption </th></tr>
 <tr><td> selectmenuoptionondatarow </td><td> open details </td></tr>
 </table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module will right click and select the menu on grid which has only one grid showing on UI based on the row number passed as a parameter.&lt;/b&gt;" methodName="SelectMenuOptionOnDataRow">
<Parameters>
<Parameter caption="rowNum" dataType="int" parameterName="rowNum" show="Y" type="TEXT">refers to number of the row in which you want to do the right click to check for the menu.</Parameter>
<Parameter caption="menuOption" dataType="String" parameterName="menuOption" show="Y" type="TEXT">refers to the name of the menu user want to use.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> rownum </th><th> menuoption </th></tr>
 <tr><td> selectmenuoptionondatarow </td><td> 1 </td><td> open details </td></tr>
 </table>
]]></Examples>
</Method>
<Method author="arath" methodDesc="&lt;b&gt;This module will right click and select the menu option if the screen has multiple grid on UI and you need to select specific grid on popup window.&lt;/b&gt;" methodName="SelectMenuOptionOnDataRow">
<Parameters>
<Parameter caption="windowNameRowNamePipeSeperated" dataType="String" parameterName="windowNameRowNamePipeSeperated" show="Y" type="TEXT">user need to give the window name and row name in pipe separated format</Parameter>
<Parameter caption="gridNum" dataType="int" parameterName="gridNum" show="Y" type="TEXT">need to provide the grid number.</Parameter>
<Parameter caption="menuName" dataType="String" parameterName="menuName" show="Y" type="TEXT">user need to give the menu name.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> windownamerownamepipeseperated </th><th> gridnum </th><th> menuname </th></tr>
 <tr><td> selectmenuoptionondatarow </td><td> description|testequity </td><td> 1 </td><td> clone </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module will right click and select the menu option if the screen has multiple grid on UI and you need to select specific grid mainly used for change approval screen.&lt;/b&gt;" methodName="SelectMenuOptionOnDataRow">
<Parameters>
<Parameter caption="menuOption" dataType="String" parameterName="menuOption" show="Y" type="TEXT">refers to the name of the menu user want to use.</Parameter>
<Parameter caption="gridNum" dataType="int" parameterName="gridNum" show="Y" type="TEXT">refers to the grid on the main screen.</Parameter>
<Parameter caption="rowNum" dataType="int" parameterName="rowNum" show="Y" type="TEXT">refers to row  in which user want to do the right click to select the menu.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> menuoption </th><th> gridnum </th><th> rownum </th></tr>
 <tr><td> selectmenuoptionondatarow </td><td> approve </td><td> 2 </td><td> 1 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This will double click on the grid number specified which has a matching Row name.&lt;/b&gt;" methodName="DoubleClickOnDataRow">
<Parameters>
<Parameter caption="gridNum" dataType="int" parameterName="gridNum" show="Y" type="TEXT">number of grid you want to select</Parameter>
<Parameter caption="rowValue" dataType="String" parameterName="rowValue" show="Y" type="TEXT">name of the row on which the double-click needs to be performed.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> gridnum </th> <th> rowvalue </th></tr>
 <tr><td> doubleclickondatarow </td><td> 3 </td> <td> income details </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This will double click on the data row specified which has a matching row number.&lt;/b&gt;" methodName="DoubleClickOnDataRow">
<Parameters>
<Parameter caption="windowTitleName" dataType="String" parameterName="windowTitleName" show="Y" type="TEXT">number of grid you want to select</Parameter>
<Parameter caption="rowNum" dataType="int" parameterName="rowNum" show="Y" type="TEXT">name of the row on which the double-click needs to be performed.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> windowtitlename </th> <th> rownum </th></tr>
 <tr><td> doubleclickondatarow </td><td> issue </td> <td> 8 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module will click on the browse button on the UI screen.&lt;/b&gt;" methodName="ClickBrowseButtonOnLookUp">
<Parameters>
<Parameter caption="WindowTitle" dataType="String" parameterName="WindowTitle" show="Y" type="TEXT">this param is for specifying popup windows name</Parameter>
<Parameter caption="Label" dataType="String" parameterName="Label" show="Y" type="TEXT">this param is the browse string value</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> windowtitle </th><th> label </th></tr>
 <tr><td> clickbrowsebuttononlookup </td><td> issuer </td><td> open issuer </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module will click on button on the popup window on the UI screen and get the notification message.&lt;/b&gt;" methodName="ClickOnPopupButton">
<Parameters>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT">this param is for specifying button name.</Parameter>
<Parameter caption="notificationPopupMessage" dataType="String" parameterName="notificationPopupMessage" show="Y" type="TEXT">this param is for specifying notification message that is displayed on the screen after the button click.</Parameter>
<Parameter caption="isVisibleBooleanVal" dataType="String" parameterName="isVisibleBooleanVal" show="Y" type="TEXT">to check if the notification message is visible or not as true/false.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonname </th><th> notificationpopupmessage </th> <th> isvisiblebooleanval </th></tr>
 <tr><td> clickonpopupbutton </td><td> save </td><td> template is saved</td><td> true </td> </tr>
 </table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module will click on button on the UI screen.&lt;/b&gt;" methodName="ClickOnPopupButton">
<Parameters>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT">this param is for specifying button name.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonname </th></tr>
 <tr><td> clickonbuttononpopup </td><td> save </td></tr>
 </table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module will click on button on the popup window on the UI screen and get the notification message.&lt;/b&gt;" methodName="ClickOnPopupButton">
<Parameters>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT">this param is for specifying button name.</Parameter>
<Parameter caption="notificationPopupMessage" dataType="String" parameterName="notificationPopupMessage" show="Y" type="TEXT">this param is for specifying notification message that is displayed on the screen after the button click.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonname </th><th> notificationpopupmessage </th></tr>
 <tr><td> clickonpopupbutton </td><td> save </td><td> template is saved</td> </tr>
 </table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module will click on button on the UI screen having tooltip on the popup window.&lt;/b&gt;" methodName="ClickOnButtonWithToolTipOnPopUp">
<Parameters>
<Parameter caption="tooltipText" dataType="String" parameterName="tooltipText" show="Y" type="TEXT">- this param is for specifying button name</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> tooltiptext </th></tr>
 <tr><td> clickonbuttonwithtooltiponpopup </td><td> open instrument type </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module will click on button on the UI screen having tooltip on the popup window.&lt;/b&gt;" methodName="ClickOnButtonWithToolTipOnPopUp">
<Parameters>
<Parameter caption="tooltipText" dataType="String" parameterName="tooltipText" show="Y" type="TEXT">- this param is for specifying button name</Parameter>
<Parameter caption="popupName" dataType="String" parameterName="popupName" show="Y" type="TEXT">- this param is for specifying button name</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> tooltiptext </th> <th> popupname </th></tr>
 <tr><td> clickonbuttonwithtooltiponpopup </td><td> open instrument type </td><td> instrument type </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This method will select a particular value in dropdown and verify if present or not as per the booleanVal parameter(true/false).&lt;/b&gt;" methodName="EnterAndVerifyValueInDropDown">
<Parameters>
<Parameter caption="datagroupNameFieldNameValuePipeseparated" dataType="String" parameterName="datagroupNameFieldNameValuePipeseparated" show="Y" type="TEXT">datagroup and field name with value.</Parameter>
<Parameter caption="expectedValue" dataType="String" parameterName="expectedValue" show="Y" type="TEXT">expected value to be checked.</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">true or false if the value present or not.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupnamefieldnamevaluepipeseparated </th> <th> expectedvalue </th>  <th> booleanval </th></tr>
 <tr><td> enterandverifyvalueindropdown </td><td>instrument details|instrument system status|expired </td> <td> expired </td>  <td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This will verify the value in drop down specified with data group and field name.&lt;/b&gt;" methodName="EnterAndVerifyValueInDropDown">
<Parameters>
<Parameter caption="datagroupNameFieldNameValuePipeseparated" dataType="String" parameterName="datagroupNameFieldNameValuePipeseparated" show="Y" type="TEXT">data group and the field names.</Parameter>
<Parameter caption="expectedValuesPipeseperated" dataType="String" parameterName="expectedValuesPipeseperated" show="Y" type="TEXT">the drop down expected values.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupnamefieldnamevaluepipeseparated </th> <th> expectedvaluespipeseperated </th></tr>
 <tr><td> enterandverifyvalueindropdown </td><td> issuer information|type </td> <td> corporate </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;Use this function to enter a field value under the field dropdown and verify whether the mentioned value appears in the dropdown as per the expected condition.&lt;/b&gt;" methodName="EnterAndVerifyValueInDropDown">
<Parameters>
<Parameter caption="popupName" dataType="String" parameterName="popupName" show="Y" type="TEXT">data group and the field names.</Parameter>
<Parameter caption="labelNameValue" dataType="String" parameterName="labelNameValue" show="Y" type="TEXT">the drop down expected values.</Parameter>
<Parameter caption="expectedlabelName" dataType="String" parameterName="expectedlabelName" show="Y" type="TEXT">data group and the field names.</Parameter>
<Parameter caption="expectedFlag" dataType="String" parameterName="expectedFlag" show="Y" type="TEXT">the drop down expected values.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> popupname </th> <th> labelnamevalue </th> <th> expectedlabelname </th>  <th> expectedflag </th></tr>
 <tr><td> enterandverifyvalueindropdown </td><td> issuer long name </td> <td> en1072issrlnamegrid </td> <td> en1072issrlnamegrid </td> <td> false </td></tr>
</table>
]]></Examples>
</Method>
<Method author="arath" methodDesc="&lt;b&gt;This module will validate the required fields and save the entity&lt;/b&gt;" methodName="SaveWithValidationFieldsOnPopUp">
<Parameters/>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th></tr>
 <tr><td> savewithvalidationfieldsonpopup </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This method will enter a particular value in dropdown and verify if present or not as per the true or false parameter(true/false).&lt;/b&gt;" methodName="EnterValueInDropDownandverify">
<Parameters>
<Parameter caption="sectionNamecolumnnameandvalue" dataType="String" parameterName="sectionNamecolumnnameandvalue" show="Y" type="TEXT">name of the section name and column name.</Parameter>
<Parameter caption="truefalse" dataType="String" parameterName="truefalse" show="Y" type="TEXT">to check if the value is present in drop down or not.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> sectionnamecolumnnameandvalue </th> <th> truefalse </th> </tr>
 <tr><td> entervalueindropdownandverify </td><td>instrument details|instrument name </td> <td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;Use this function to right-click on a field or row and select an option from the context menu. On the popup window that appears, you can select an option from the drop-down list and also add a comment.&lt;/b&gt;" methodName="PerformBulkMenuActionFromSearch">
<Parameters>
<Parameter caption="allorFieldName" dataType="String" parameterName="allorFieldName" show="Y" type="TEXT">name of a field or all the fields to be selected in the row.</Parameter>
<Parameter caption="actionOption" dataType="String" parameterName="actionOption" show="Y" type="TEXT">name of the menu option to click.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> allorfieldname </th><th> actionoption </th></tr>
 <tr><td> performbulkmenuactionfromsearch </td><td> [inst2441equity]|[inst2441equity]|[inst2441equity] </td><td> complete </td></tr>
 </table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;Use this function to right-click on a field or row and select an option from the context menu. On the popup window that appears, you can select an option from the drop-down list and also add a comment.&lt;/b&gt;" methodName="PerformBulkMenuActionFromSearch">
<Parameters>
<Parameter caption="allorFieldName" dataType="String" parameterName="allorFieldName" show="Y" type="TEXT">name of a field or all the fields to be selected in the row.</Parameter>
<Parameter caption="actionOption" dataType="String" parameterName="actionOption" show="Y" type="TEXT">name of the menu option to click.</Parameter>
<Parameter caption="dropDown" dataType="String" parameterName="dropDown" show="Y" type="TEXT">name of the option in the drop-down list to be selected.</Parameter>
<Parameter caption="comment" dataType="String" parameterName="comment" show="Y" type="TEXT">text to be added as comment.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> allorfieldname </th><th> actionoption </th> <th> dropdown </th> <th> comment </th></tr>
 <tr><td> performbulkmenuactionfromsearch </td><td> [inst2441equity]|[inst2441equity]|[inst2441equity] </td><td> re-assign </td> <td> checker </td> <td> re-assign to checker </td> </tr>
 </table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="PerformBulkMenuActionFromSearch">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;Use this function to right-click on a field or row and select an option from the context menu. On the popup window that appears, you can select an option from the drop-down list and also add a comment.&lt;/b&gt;" methodName="PerformBulkMenuActionFromSearch">
<Parameters>
<Parameter caption="allorFieldName" dataType="String" parameterName="allorFieldName" show="Y" type="TEXT">name of a field or all the fields to be selected in the row.</Parameter>
<Parameter caption="actionOption" dataType="String" parameterName="actionOption" show="Y" type="TEXT">name of the menu option to click.</Parameter>
<Parameter caption="comment" dataType="String" parameterName="comment" show="Y" type="TEXT">text to be added as comment.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> allorfieldname </th><th> actionoption </th> <th> comment </th></tr>
 <tr><td> performbulkmenuactionfromsearch </td><td> [inst2441equity]|[inst2441equity]|[inst2441equity] </td><td> complete </td> <td> approved </td></tr>
 </table>
]]></Examples>
</Method>
<Method author="arath" methodDesc="&lt;b&gt;This module will verify if the checkbox is readonly or enabled. Also this module will Verify if the check box is checked or unchecked.&lt;/b&gt;" methodName="VerifyIfCheckBoxIsEnabledOnPopUp">
<Parameters>
<Parameter caption="labelName" dataType="String" parameterName="labelName" show="Y" type="TEXT">name of the label in which user to check the condition like enable/disable/false .</Parameter>
<Parameter caption="booleanFlagOrEnableDisable" dataType="String" parameterName="booleanFlagOrEnableDisable" show="Y" type="TEXT">user need toput the condition what they need to check for that label.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> labelname </th><th> booleanflagorenabledisable </th></tr>
 <tr><td> verifyifcheckboxisenabledonpopup </td><td> exchange name </td><td> true </td></tr>
 <tr><td> verifyifcheckboxisenabledonpopup </td><td> exchange name </td><td> false  </td></tr>
 * <tr><td> verifyifcheckboxisenabledonpopup </td><td> exchange name </td><td> enable  </td></tr>
 * <tr><td> verifyifcheckboxisenabledonpopup </td><td> exchange name </td><td> disable  </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module check the username and password authentication asked.&lt;/b&gt;" methodName="HandleAuthenticationPopup">
<Parameters>
<Parameter caption="username" dataType="String" parameterName="username" show="Y" type="TEXT">usersname</Parameter>
<Parameter caption="password" dataType="String" parameterName="password" show="Y" type="TEXT">password</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> username </th><th> password </th></tr>
 <tr><td> handleauthenticationpopup </td><td> user </td><td> user@123 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies sequence/order of the data given by the user as test data and matches that data and its sequence the way it is given with the actual data getting displayed at runtime.&lt;/b&gt;" methodName="VerifyDataOrderOnPopup">
<Parameters>
<Parameter caption="gridPosition" dataType="int" parameterName="gridPosition" show="Y" type="TEXT">there can be multiple table/grid like structure on one popup, so user needs to mention the grid number of the popup.</Parameter>
<Parameter caption="columnName" dataType="String" parameterName="columnName" show="Y" type="TEXT">the column name under which data sequence needs to be verified</Parameter>
<Parameter caption="expectedDataListInSequence" dataType="String" parameterName="expectedDataListInSequence" show="Y" type="TEXT">the data needs to be separated by single pipe separator, this expected data will verified against the actual data.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> gridposition </th><th> columnname </th><th> expecteddatalistinsequence </th></tr>
 <tr><td> verifydataorderonpopup </td><td> 1 </td><td> instrument name </td><td> euro(ats) (b)s|euro(bef) (b)|european composite unit </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module will click on the tooltip buttons on popup window.&lt;/b&gt;" methodName="ClickTooltipButtonOnPopup">
<Parameters>
<Parameter caption="buttonNameOrButtonWithTooltipName" dataType="String" parameterName="buttonNameOrButtonWithTooltipName" show="Y" type="TEXT">- the tooltip button name or button name having tooltip.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonnameorbuttonwithtooltipname </th></tr>
 <tr><td> clicktooltipbuttononpopup </td><td> create new </td></tr>
</table>
]]></Examples>
</Method>
<Method author="arath" methodDesc="&lt;b&gt;This module is used to sort the data on grid over popwindow window.&lt;/b&gt;" methodName="SortRecordsOnPopup">
<Parameters>
<Parameter caption="windowTitle" dataType="String" parameterName="windowTitle" show="Y" type="TEXT">refers to the name of the popupwindow</Parameter>
<Parameter caption="columnNamesPipeSeperated" dataType="String" parameterName="columnNamesPipeSeperated" show="Y" type="TEXT">used to specify the name of the fields or columns in pipe separated format.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> windowtitle </th><th> columnnamespipeseperated </th></tr>
 <tr><td> chalapprovereject </td><td> description </td><td> instrument name||instrument description </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This modules verifies popup message in contains.&lt;/b&gt;" methodName="VerifyPopupMessage">
<Parameters>
<Parameter caption="message" dataType="String" parameterName="message" show="Y" type="TEXT">the user needs to provide data in contains of the given popup message and it will verify the same.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> message </th></tr>
 <tr><td> verifypopupmessage </td><td> entity saved successfully. </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;this module Used to verify the message in the pop-up window.&lt;/b&gt;" methodName="VerifyPopupMessage">
<Parameters>
<Parameter caption="text" dataType="String" parameterName="text" show="Y" type="TEXT">message on the pop-up to be verified.</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">true or false, where true indicates whether the message is correct</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> text </th><th> booleanval </th></tr>
 <tr><td> verifypopupmessage </td><td> entity saved successfully  </td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to select multiple row in given in the particular grid.&lt;/b&gt;" methodName="SelectMultipleDataRow">
<Parameters>
<Parameter caption="gridNum" dataType="int" parameterName="gridNum" show="Y" type="TEXT">which grid on the current page this executions needs to be performed</Parameter>
<Parameter caption="rowvaluepipeseparated" dataType="String" parameterName="rowvaluepipeseparated" show="Y" type="TEXT">pipe separated data and for the rows which needs to be selected</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> gridnum </th><th> rowvaluepipeseparated </th></tr>
 <tr><td> selectmultipledatarow </td><td> 1 </td><td> jp389320a777|de000a1udwm7|xs0888245122 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyFreezedColumns">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt; This module clicks on any links inside a popup window &lt;b/&gt;" methodName="ClickOnLinkOnPopup">
<Parameters>
<Parameter caption="linkName" dataType="String" parameterName="linkName" show="Y" type="TEXT">this parameter will accept the link name as the parameter over popup window</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> linkname </th></tr>
 <tr><td> clickonlinkonpopup </td><td>view historical audit</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to drag and drop the field from GSO Data Groups section to New Routine Section.&lt;/b&gt;" methodName="DragAndDropForFuzzyConfig">
<Parameters>
<Parameter caption="DragFromSectionAndField" dataType="String" parameterName="DragFromSectionAndField" show="Y" type="TEXT">gso data groups'field that needs to be dragged and dropped.'</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> dragfromsectionandfield </th></tr>
 <tr><td> draganddropforfuzzyconfig </td><td> gso data groups|instrument name </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;To do right click on a data row specified by grind number and data row value&lt;/b&gt;" methodName="RightClickOnDataRow">
<Parameters>
<Parameter caption="gridNum" dataType="int" parameterName="gridNum" show="Y" type="TEXT">the grid number.</Parameter>
<Parameter caption="rowValue" dataType="String" parameterName="rowValue" show="Y" type="TEXT">the value to be right clicked on.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th> <th> gridnum </th> <th> rowvalue </th></tr>
 <tr><td> rightclickondatarow </td> <td> 5 </td> <td> instrument name | gold france </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyIfColumnIsFilterable">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;Use this function to close the adornment panel window or additional info window.&lt;/b&gt;" methodName="CloseAdornmentPanel">
<Parameters/>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th></tr>
 <tr><td> closeadornmentpanel </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module will check the availability of the button on the UI screen.&lt;/b&gt;" methodName="CheckButtonVisibility">
<Parameters>
<Parameter caption="buttonLabel" dataType="String" parameterName="buttonLabel" show="Y" type="TEXT">this param is for specifying button name</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">this param is to give result whether the button is available or not as true/false</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonlabel </th><th> booleanval </th></tr>
 <tr><td> checkbuttonvisibility </td><td> save </td><td> true </td></tr>
 <tr><td> checkbuttonvisibility </td><td> cancel </td><td> false </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyIfColumnIsSortable">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module Verify whether the template shows up or not.&lt;/b&gt;" methodName="VerifyDropDownValuesOnPopUp">
<Parameters>
<Parameter caption="labelValue" dataType="String" parameterName="labelValue" show="Y" type="TEXT">label name to be provided along with the value/template name pipe separated</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">option as true/false</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> labelvalue </th><th> booleanval </th></tr>
 <tr><td> verifydropdownvaluesonpopup </td><td>template|my search template%var1% </td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module Verify whether the template shows up or not.&lt;/b&gt;" methodName="VerifyDropDownValues">
<Parameters>
<Parameter caption="labelValue" dataType="String" parameterName="labelValue" show="Y" type="TEXT">label name to be provided along with the value/template name pipe separated</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">option as true/false</Parameter>
<Parameter caption="pageIndex" dataType="int" parameterName="pageIndex" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> labelvalue </th><th> booleanval </th><th> pageindex </th></tr>
 <tr><td> verifydropdownvalues </td><td> template|my search template%var1% </td><td> false </td><td> 1 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="ikambli" methodDesc="&lt;b&gt;This module will check if the button is enabled on the UI screen.&lt;/b&gt;" methodName="CheckIfButtonEnable">
<Parameters>
<Parameter caption="buttonLabel" dataType="String" parameterName="buttonLabel" show="Y" type="TEXT">this param is for specifying button name</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">this param is to give result whether the button is available or not as true/false</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonlabel </th><th> booleanval </th></tr>
 <tr><td> checkifbuttonenable </td><td> save </td><td> true </td></tr>
 <tr><td> checkifbuttonenable </td><td> cancel </td><td> false </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module helps in verifying the values in the dropdown..&lt;/b&gt;" methodName="VerifyValuesAndCountInDropDownList">
<Parameters>
<Parameter caption="label" dataType="String" parameterName="label" show="Y" type="TEXT">refers to the field name on which user want to verify the dropdown values.</Parameter>
<Parameter caption="expectedValues" dataType="String" parameterName="expectedValues" show="Y" type="TEXT">refers to the values in the drop down</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">true or false if the value present or not.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> label </th><th> expectedvalues </th><th> booleanval </th></tr>
 <tr><td> verifyvaluesandcountindropdownlist </td><td> instrument type </td><td> value1|value2|value3 </td><td> true  </td></tr>
 <tr><td> verifyvaluesandcountindropdownlist </td><td> instrument type </td><td> value1|value2|value3 </td><td> false </td></tr>
</table>
]]></Examples>
</Method>
<Method author="arath" methodDesc="&lt;b&gt;This module will search for a string passed in the filter select labels.&lt;/b&gt;" methodName="SemiSearchAndSelectValueOnDropDown">
<Parameters>
<Parameter caption="dataGroupNameFieldNameSemiSearchLiteral" dataType="String" parameterName="dataGroupNameFieldNameSemiSearchLiteral" show="Y" type="TEXT">refers to the datagroupname ,filed name along with the filter condition separated by pipe.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupnamefieldnamesemisearchliteral </th></tr>
 <tr><td> semisearchandselectvalueondropdown </td><td> instrument details|issuer long name|a </td></tr>
</table>
]]></Examples>
</Method>
<Method author="arath" methodDesc="&lt;b&gt;This module will search for a string passed in the filter select labels based on the rowNumber specified.&lt;/b&gt;" methodName="SemiSearchAndSelectValueOnDropDown">
<Parameters>
<Parameter caption="dataGroupNameFieldNameSemiSearchLiteral" dataType="String" parameterName="dataGroupNameFieldNameSemiSearchLiteral" show="Y" type="TEXT">refers to the datagroupname ,filed name along with the filter condition separated by pipe.</Parameter>
<Parameter caption="rowNum" dataType="int" parameterName="rowNum" show="Y" type="TEXT">required in search for a string passed in the filter select labels based on the rownumber specified.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupnamefieldnamesemisearchliteral </th><th> rownum </th></tr>
 <tr><td> datagroupnamefieldnamesemisearchliteral </td><td> instrument details|issuer long name|a</td><td> 2 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="arath" methodDesc="&lt;b&gt;This module is used to unselect a checkbox with given label on screen.&lt;/b&gt;" methodName="UnSelectCheckBox">
<Parameters>
<Parameter caption="labelName" dataType="String" parameterName="labelName" show="Y" type="TEXT">refers to the name of the label user wants to un-check.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> labelname </th></tr>
 <tr><td> unselectcheckbox </td><td> default</td></tr>
</table>
]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="Entitlements" interfaceName="IEntitlements">
<Methods>
<Method author="mmkhan&#10; on the entitlement screen, select user role for e.g.: users , administrators. &#10; further also allows to select entity under attribute entitlements&#10; for role param user rolerole name&#10; for entity param entityentity name&#10; &#10; br/ br/ example:-: user roleusers&#10; entityequity" methodDesc="" methodName="SetRoleOrEntity">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="mmkhan&#10; on the entitlement screen, shows or hides menu" methodDesc="" methodName="SetMenuEntitlement">
<Parameters>
<Parameter caption="labelNames" dataType="String" parameterName="labelNames" show="Y" type="TEXT">br/ br/ example:-: 
 1. security masterissueissue, enable
 2. security master, disable
 3. security masterissuer, disable</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="" methodName="VerifyAttributeEntitlement">
<Parameters>
<Parameter caption="path" dataType="String" parameterName="path" show="Y" type="TEXT"/>
<Parameter caption="ActionTypeAction" dataType="String" parameterName="ActionTypeAction" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="" methodName="VerifyMenuEntitlement">
<Parameters>
<Parameter caption="path" dataType="String" parameterName="path" show="Y" type="TEXT"/>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyAllMenuEntitlement">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyEntityEntitlement">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="mmkhan&#10; on the entitlement screen, select and un-select attributes" methodDesc="" methodName="SetAttributeEntitlement">
<Parameters>
<Parameter caption="attributeName" dataType="String" parameterName="attributeName" show="Y" type="TEXT">columnnameenable/disable 
 
 br/ br/ example:-: 
 1. instrument name, editenableread onlydisable</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="mmkhan&#10; on the entitlement screen, select and un-select entities." methodDesc="" methodName="SetEntityEntitlement">
<Parameters>
<Parameter caption="entityName" dataType="String" parameterName="entityName" show="Y" type="TEXT">br/ br/ example:-: 
 1. full instrument, editenableread onlydisable</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="EditInExcel" interfaceName="IEditInExcel">
<Methods>
<Method author="kpandya" methodDesc="" methodName="AddEditinExcel">
<Parameters>
<Parameter caption="tabName" dataType="String" parameterName="tabName" show="Y" type="TEXT">this parameter needs to be passed as the name of the sheet name.
 eg: market listing</Parameter>
<Parameter caption="value" dataType="String" parameterName="value" show="Y" type="TEXT">this parameter needs to be passed as column and value
 eg: exchange namecinnober boatmarket statusactive</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="kpandya" methodDesc="" methodName="UpdateEditinExcel">
<Parameters>
<Parameter caption="tabName" dataType="String" parameterName="tabName" show="Y" type="TEXT">this parameter needs to be passed as the name of the sheet name.
 eg: market listing</Parameter>
<Parameter caption="RowIDandRelationFieldValue" dataType="String" parameterName="RowIDandRelationFieldValue" show="Y" type="TEXT">this parameter needs to be passed as column and value peferrably the relational fields since it is unique.
 eg: exchange namecinnober boatmarket statusactive</Parameter>
<Parameter caption="updatedValues" dataType="String" parameterName="updatedValues" show="Y" type="TEXT">this parameter needs to be passed as column and value which needs to be updated.
 eg: round lot10trading currencychf - swiss franc</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="kpandya" methodDesc="" methodName="DeleteEditinExcel">
<Parameters>
<Parameter caption="tabName" dataType="String" parameterName="tabName" show="Y" type="TEXT">this parameter needs to be passed as the name of the sheet name.
 eg: market listing</Parameter>
<Parameter caption="RowIDandRelationFieldValue" dataType="String" parameterName="RowIDandRelationFieldValue" show="Y" type="TEXT">this parameter needs to be passed as column and value peferrably the relational fields since it is unique.
 eg: exchange namecinnober boatmarket statusactive</Parameter>
<Parameter caption="deleteOrUndelete" dataType="String" parameterName="deleteOrUndelete" show="Y" type="TEXT">this parameter needs to be passed as  deleted or undeleted as per the scenario.
 eg: delete un-delete</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="EditinExcelColumnShowHide">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="bkhemani" methodDesc="Description: Verify the tabs on Edit in Excel screen where the datagroups are visible or not." methodName="VerifyTabsOnEditinExcel">
<Parameters>
<Parameter caption="tabName" dataType="String" parameterName="tabName" show="Y" type="TEXT">- tabname or datagroup name on the edit in excel page</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">- flag accepts true or false if true then it should click on the tab name on excel and navigate if false it should not be present on the excel.</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="kpandya" methodDesc="" methodName="VerifyDataOnEditinExcel">
<Parameters>
<Parameter caption="tabName" dataType="String" parameterName="tabName" show="Y" type="TEXT">this parameter needs to be passed as the name of the sheet name.
 eg: market listing</Parameter>
<Parameter caption="RowIDandRelationFieldValue" dataType="String" parameterName="RowIDandRelationFieldValue" show="Y" type="TEXT">this parameter needs to be passed as column and value peferrably the relational fields since it is unique.
 eg: exchange namecinnober boatmarket statusactive</Parameter>
<Parameter caption="updatedValues" dataType="String" parameterName="updatedValues" show="Y" type="TEXT">this parameter needs to be passed as column and value which needs to be updated.
 eg: round lot10trading currencychf - swiss franc</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">this parameter accepts true or false values from the user, which means if the record is to be verified and should be visible means true and if record expected to be deleted so false</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="bkhemani" methodDesc="DESCRIPTION - Modifies the given column headers on the given tab name on edit in excel page" methodName="ModifyHeaderEditInExcel">
<Parameters>
<Parameter caption="tabName" dataType="String" parameterName="tabName" show="Y" type="TEXT">- tabname or datagroup name on the edit in excel page</Parameter>
<Parameter caption="columnName" dataType="String" parameterName="columnName" show="Y" type="TEXT">- column name which needs to be modified on the edit in excel page</Parameter>
<Parameter caption="conditions" dataType="String" parameterName="conditions" show="Y" type="TEXT">- this parameter accepts following values : 'hide' means to hide the selected column header, 'rename' means to rename the selected column header 
 fixme - insert comments and merge cells will be future conditions which can be used to modify the headers on edit in excel page</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="Drools" interfaceName="IDrools">
<Methods>
<Method author="" methodDesc="" methodName="DroolsNavigation">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyProjectAuthoring">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="DataQuality" interfaceName="IDataQuality">
<Methods>
<Method author="" methodDesc="" methodName="VerifyExceptionTableData">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyJobHighChartStackLabel">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyJobHighChartToolTip">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="SelectExcepHighChart">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyExcepHighChartStackLabel">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyExcepHighChartToolTip">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="SelectJobHighChart">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="Completeness" interfaceName="ICompleteness">
<Methods>
<Method author="" methodDesc="" methodName="SaveOrCancelGSOWindowSettings">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="" methodName="VerifyAcquiredCompletenessLevels">
<Parameters>
<Parameter caption="testData" dataType="String" parameterName="testData" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="This method verifies which completeness level names should be visible and which should not be visible as per the data" methodName="VerifyCompletenessLevels">
<Parameters>
<Parameter caption="TestData" dataType="String" parameterName="TestData" show="Y" type="TEXT">flag (true or false)</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="ClickGSOConfigurationIcons">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="This method will upgarde and downgrade the completeness levels, based on the data passed" methodName="SetCompletenessLevel">
<Parameters>
<Parameter caption="levelName" dataType="String" parameterName="levelName" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="ConfigureCompleteness">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="SaveGSOSettings">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="GenericModules" interfaceName="ICommonActionModules">
<Methods>
<Method author="" methodDesc="bThis module is used to gettext of any field inside a entity on the lookup window and store it in a STOTPT variable./b" methodName="GetFieldValueOnLookup">
<Parameters>
<Parameter caption="TestData" dataType="String" paramDefault="" parameterName="testdata" show="Y" type="TEXTAREA" values="">Pass the field for which you need to get the values and store in STOTPT</Parameter>
<Parameter caption="Standard Stored Output" dataType="String" paramDefault="STOTPT:" parameterName="standardstoredoutput" show="Y" type="TEXT" values="">Specify the variable name after STOTPT:</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> testdata </th><th> stotpt variable name </th></tr>
 <tr><td> getfieldvalueonlookup </td><td>description|instrument name</td><td>stotpt:auditoldvalues210</td></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="This module is used to gettext of any field inside a entity." methodName="GetFieldValue">
<Parameters>
<Parameter caption="TestData" dataType="String" paramDefault="" parameterName="testdata" show="Y" type="TEXTAREA" values="">Pass the field for which you need to get the values and store in STOTPT</Parameter>
<Parameter caption="Standard Stored Output" dataType="String" paramDefault="STOTPT:" parameterName="standardstoredoutput" show="Y" type="TEXT" values="">Specify the variable name after STOTPT:</Parameter>
</Parameters>
<Examples><![CDATA[
	 <table border='1'>
 <tr><th> method name </th><th> testdata </th></tr>
 <tr><td> getfieldvalue </td><td>instrument details|instrument name</td></tr>
</table>
]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="CommonActionModules" interfaceName="ICommonActionModules">
<Methods>
<Method author="mmkhan" methodDesc="&lt;b&gt;This module will click on spy glass and select first record from the search screen for any relational field&lt;/b&gt;" methodName="SetRelationalValue">
<Parameters>
<Parameter caption="dataGroupNameAndFieldName" dataType="String" parameterName="dataGroupNameAndFieldName" show="Y" type="TEXT">this parameter accepts data group and field name in pipe separated format as datagroupnamefieldname</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupnameandfieldname </th></tr>
 <tr><td> setrelationalvalue </td><td> instrument details|issuer long name</td></tr>
</table>
]]></Examples>
</Method>
<Method author="bkhemani" methodDesc="&lt;b&gt;This module clicks on spy glass and selects the first row as relation value on particular template name given by the user&lt;/b&gt;" methodName="SetRelationalValue">
<Parameters>
<Parameter caption="EntityNamePipeTemplateName" dataType="String" parameterName="EntityNamePipeTemplateName" show="Y" type="TEXT">this parameter accepts entity name and template name in pipe separated format like  entitynameentityvaluetemplatenametemplatevalue</Parameter>
<Parameter caption="dataGroupNameAndFieldName" dataType="String" parameterName="dataGroupNameAndFieldName" show="Y" type="TEXT">datagroupnamefieldname this is the format in which user needs to give the data so that it can click on spy glass of the corresponding datagroup field set the relation value as given</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> entitynamepipetemplatename </th><th> datagroupnameandfieldname </th></tr>
 <tr><td> setrelationalvalue </td><td> entity|issuer||template|mysearchtemplate </td><td> institution summary|institution name</td></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;This module will click on spy glass and selects row number specified in module from the search screen for any relational field&lt;/b&gt;" methodName="SetRelationalValue">
<Parameters>
<Parameter caption="dataGroupNameAndFieldName" dataType="String" parameterName="dataGroupNameAndFieldName" show="Y" type="TEXT">this parameter accepts data group and field name in pipe separated format as datagroupnamefieldname</Parameter>
<Parameter caption="rowNum" dataType="integer" parameterName="rowNum" show="Y" type="TEXT">this parameter accepts the row number which needs to be selected on the search screen</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupnameandfieldname </th><th> rownum </th></tr>
 <tr><td> setrelationalvalue </td><td> instrument details|issuer long name</td><td>2</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This method/module clicks on the all the lazy loading buttion of all the datagroups and sub-datagroups by clicking on the hyperlinks inside a form, .&lt;/b&gt;" methodName="ClickOnAllLazyLoadingIconsAndHyperlinks">
<Parameters/>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th></tr>
 <tr><td> clickonalllazyloadingiconsandhyperlinks </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;verify Vendor Data Section should be present&lt;/b&gt;" methodName="CheckIfSectionIsPresentInAdornment">
<Parameters>
<Parameter caption="sectionName" dataType="String" parameterName="sectionName" show="Y" type="TEXT">vendor data section name</Parameter>
<Parameter caption="flag" dataType="Boolean" parameterName="flag" show="Y" type="TEXT">condition to check the visibility of the section.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> sectionname </th><th> flag </th></tr>
 <tr><td> checkifsectionispresentinadornment </td><td> vendor data </td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies Read Only behavior of menu options of Menu bar, which appears after right clicking on the Datagroup fields.&lt;b&gt;" methodName="VerifyReadOnlyMenuOnFieldRightClick">
<Parameters>
<Parameter caption="DataGroupAndFieldNamePipeSeparated" dataType="String" parameterName="DataGroupAndFieldNamePipeSeparated" show="Y" type="TEXT">this parameter accepts datagroupname  fieldname  valueofthefield</Parameter>
<Parameter caption="MenuOption" dataType="String" parameterName="MenuOption" show="Y" type="TEXT">this module accepts menu option that needs to be verified.</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">this module accepts true or false. flag would be true if menu option is enabled/ not read only else false.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupandfieldnamepipeseparated </th><th> menuoption </th><th> flag </th></tr>
 <tr><td> verifyreadonlymenuonfieldrightclick </td><td> instrument details|instrument name|valueofthefield </td><td> normal lock </td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="PerformActionAtMultiOccuringDataGroup">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt; This method should be used if you do not know where the data is in a multi occuring datagroup.&#10; This method should be used if you have multiple breadcrumbs inside a multi occuring datagroup.&#10; Also if you want to traverse both side, next and previous, This module can be be used.&lt;/b&gt;" methodName="VerifyRecordOnMultioccuringDataGroup">
<Parameters>
<Parameter caption="dataGroupNameBreadCrumbNameFieldNameValuePipeSeperated" dataType="String" parameterName="dataGroupNameBreadCrumbNameFieldNameValuePipeSeperated" show="Y" type="TEXT">this parameter accepts datagroupnamebreadcrumbnamefieldnamevalue pipe separated.</Parameter>
<Parameter caption="PrevNext" dataType="String" parameterName="PrevNext" show="Y" type="TEXT">this parameter accepts next/prev.</Parameter>
<Parameter caption="booleanFlag" dataType="String" parameterName="booleanFlag" show="Y" type="TEXT">this parameter accepts the true of false condition.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupnamebreadcrumbnamefieldnamevaluepipeseperated </th><th> prevnext </th><th> flag </th></tr>
 <tr><td> verifyrecordonmultioccuringdatagroup </td><td> instrument details|instrument name|bondinstrument123||instrument details|instrument type|bond </td><td> prev or next </td><td> trueorfalse </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This method verifies multioccuring datagroups with field name value.&lt;/b&gt;" methodName="VerifyRecordOnMultioccuringDataGroup">
<Parameters>
<Parameter caption="datagroupfieldNameValuesPipeSeperated" dataType="String" parameterName="datagroupfieldNameValuesPipeSeperated" show="Y" type="TEXT">this parameter accepts  datagroup  field name  value pipe separated. if multiple values need to be verified then separate them by .</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">this parameter accepts the true of false condition.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupfieldnamevaluespipeseperated </th> <th> flag </th></tr>
 <tr><td> verifyrecordonmultioccuringdatagroup </td><td> instrument details|instrument name|bondinstrument123||instrument details|instrument type|bond </td><td> trueorfalse </td></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;This module verifies if the field or datagroup is visible on UI or not on any popup screen.&lt;/b&gt;" methodName="VerifySectionOrFieldVisibilityOnPopUp">
<Parameters>
<Parameter caption="dataGroupOrFieldName" dataType="String" parameterName="dataGroupOrFieldName" show="Y" type="TEXT"/>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">the parameter needs to be passed as
 instrument detailsdescriptioninstrument name, true/false
 true - datagroup or field is visible.
 false - datagroup or field is disabled.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> dgname|fieldname|value </th><th> trueorfalse </th></tr>
 <tr><td> instrument details||description|instrument name </td><td>true/false</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This method verifies if entire section on popup window is readonly or not.&lt;/b&gt;" methodName="VerifyReadOnlySectionOrFieldsOnPopUp">
<Parameters>
<Parameter caption="dataGroupOrFieldName" dataType="String" parameterName="dataGroupOrFieldName" show="Y" type="TEXT">this parameter accepts section or datagroup name.</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">this parameter accepts the true of false condition.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagrouporfieldname </th> <th> booleanval </th</tr>
 <tr><td> verifyreadonlysectionorfieldsonpopup </td><td> datagroupname </td><td> trueorfalse </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to do GeneralConfiguration on the GSO screen&lt;/b&gt;" methodName="GSOGeneralConfiguration">
<Parameters>
<Parameter caption="ButtonName" dataType="String" parameterName="ButtonName" show="Y" type="TEXT">contains the button name to be clicked.</Parameter>
<Parameter caption="WindowTitle" dataType="String" parameterName="WindowTitle" show="Y" type="TEXT">contains the windowtitle.</Parameter>
<Parameter caption="CheckBoxLabel" dataType="String" parameterName="CheckBoxLabel" show="Y" type="TEXT">contains the label of the checkbox which needs to be set.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonname </th><th> windowtitle </th><th> checkboxlabel </th></tr>
 <tr><td> gsogeneralconfiguration </td><td>general configuration</td><td>general configuration</td><td>capture audit comments|tick||capture locking comments|tick</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;/b&gt;This module  checks/unchecks check boxes inside my profile or selects values in drop down related fields on same screen&lt;/b&gt;" methodName="SetProfileConfigurations">
<Parameters>
<Parameter caption="SectionNameAndLabelNameAndValue" dataType="String" parameterName="SectionNameAndLabelNameAndValue" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> sectionnameandlabelnameandvalue </th></tr>
 <tr><td> setprofileconfigurations </td><td>  show audit|enable</td> </td></tr>
 <tr><td> setprofileconfigurations </td><td> case sensitive search|disable</td></tr>
 <tr><td> setprofileconfigurations </td><td> user role|users</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to select the export type and output type in the Export Options window.&lt;/b&gt;" methodName="SelectExportChoiceAndFileOutput">
<Parameters>
<Parameter caption="FileType" dataType="String" parameterName="FileType" show="Y" type="TEXT">file format in which the records are to be exported. for example: xml, csv or xls.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> filetype </th></tr>
 <tr><td> selectexportchoiceandfileoutput </td><td> export current records </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to check if a particular template is present in the template dropdown when Export in Multi Edit Format is enabled&lt;/b&gt;" methodName="SelectExportChoiceAndFileOutput">
<Parameters>
<Parameter caption="TypesOfRecord" dataType="String" parameterName="TypesOfRecord" show="Y" type="TEXT">type of record to be exported</Parameter>
<Parameter caption="FileType" dataType="String" parameterName="FileType" show="Y" type="TEXT">file format in which the records are to be exported. for example: xml, csv or xls.</Parameter>
<Parameter caption="IsTemplatePresent" dataType="String" parameterName="IsTemplatePresent" show="Y" type="TEXT">true/false value needs to be passed depending on the scenario that needs to be validated. true value if the template is present in the dropdown else false</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> typesofrecord </th><th> filetype </th><th> istemplatepresent </th></tr>
 <tr><td> selectexportchoiceandfileoutput </td><td> export current records </td><td> xls </td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to select the export type and output type in the Export Options window.&lt;/b&gt;" methodName="SelectExportChoiceAndFileOutput">
<Parameters>
<Parameter caption="TypesOfRecord" dataType="String" parameterName="TypesOfRecord" show="Y" type="TEXT">type of record to be exported</Parameter>
<Parameter caption="FileType" dataType="String" parameterName="FileType" show="Y" type="TEXT">file format in which the records are to be exported. for example: xml, csv or xls.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> typesofrecord </th><th> filetype </th></tr>
 <tr><td> selectexportchoiceandfileoutput </td><td> export current records </td><td> xls </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies menu options of Menu bar, which appears after right clicking on the Datagroup fields.&lt;b&gt;" methodName="VerifyMenuOnFieldRightClick">
<Parameters>
<Parameter caption="DataGroupAndFieldNamePipeSeparated" dataType="String" parameterName="DataGroupAndFieldNamePipeSeparated" show="Y" type="TEXT">this parameter accepts datagroupname  fieldname  valueofthefield</Parameter>
<Parameter caption="MenuOption" dataType="String" parameterName="MenuOption" show="Y" type="TEXT">this module accepts menu option that needs to be verified.</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">this module accepts true or false</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupandfieldnamepipeseparated </th><th> menuoption </th><th> flag </th></tr>
 <tr><td> verifymenuonfieldrightclick </td><td> instrument details|instrument name|valueofthefield </td><td> normal lock </td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This method used to select menu options from user menu&lt;/b&gt;" methodName="SelectUserMenuOptions">
<Parameters>
<Parameter caption="menuOptions" dataType="String" parameterName="menuOptions" show="Y" type="TEXT">this parameter accepts the user menu that needs to be selected.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> menuoptions </th></tr>
 <tr><td> selectusermenuoptions </td><td> my preferences </td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This function is used on a pop-up window when you want to perform a save or cancel action to store or discard the changes.&lt;/b&gt;" methodName="SaveOrCancelSettings">
<Parameters>
<Parameter caption="ButtonName" dataType="String" parameterName="ButtonName" show="Y" type="TEXT">name of the button on the pop-up window</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonname </th></tr>
 <tr><td> saveorcancelsettings </td><td>save </td></tr>
 <tr><td> saveorcancelsettings </td><td>cancel</td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This function is used on a pop-up window when you want to perform a save or cancel action to store or discard the changes.&lt;/b&gt;" methodName="SaveOrCancelSettings">
<Parameters>
<Parameter caption="ButtonName" dataType="String" parameterName="ButtonName" show="Y" type="TEXT">name of the button on the pop-up window</Parameter>
<Parameter caption="PopupText" dataType="String" parameterName="PopupText" show="Y" type="TEXT">notification message that appears after saving the record.</Parameter>
<Parameter caption="Value" dataType="String" parameterName="Value" show="Y" type="TEXT">true or false, where true indicates the given notification message should appear on the pop-up window, and false indicates that the given notification message should not appear on the pop-up window</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonname </th><th> popuptext </th><th> value </th></tr>
 <tr><td> saveorcancelsettings </td><td>save </td><td>saved successfully </td><td>true </td></tr>
 <tr><td> saveorcancelsettings </td><td>save</td><td>saved successfully  </td><td>false </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is use to Reload an instrument or reset any setting on the template configuration screen&lt;/b&gt;" methodName="ReloadOrResetSettings">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to perform Complete/reject/reassign/close action by user&lt;/b&gt;" methodName="PerformMakerCheckerActions">
<Parameters>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT">contains the button name to be clicked.</Parameter>
<Parameter caption="comments" dataType="String" parameterName="comments" show="Y" type="TEXT">contains the comments.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonname </th><th> comments </th></tr>
 <tr><td> performmakercheckeractions </td><td>close</td><td>checker close 1</td></tr>
 </table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to perform Complete/reject/reassign/close action by user&lt;/b&gt;" methodName="PerformMakerCheckerActions">
<Parameters>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT">contains the button name to be clicked.</Parameter>
<Parameter caption="dropDown" dataType="String" parameterName="dropDown" show="Y" type="TEXT">contains the dropdown value to be selected.</Parameter>
<Parameter caption="comments" dataType="String" parameterName="comments" show="Y" type="TEXT">contains the comments.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonname </th><th> dropdown </th><th> comments </th></tr>
 <tr><td> performmakercheckeractions </td><td>close</td><td>maker1</td><td>checker close 1</td></tr>
 </table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This module will select the tab on popup screen&lt;/b&gt;" methodName="SelectTheTabOnPopup">
<Parameters>
<Parameter caption="tabname" dataType="String" parameterName="tabname" show="Y" type="TEXT">specify the tab name that you want to select.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> tabname </th></tr>
 <tr><td> selectthetabonpopup </td><td>profile</td></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;This module is used to click on any button inside the datagroup.&lt;/b&gt;" methodName="PerformActionAtDataGroupLevel">
<Parameters>
<Parameter caption="sectionName" dataType="String" parameterName="sectionName" show="Y" type="TEXT">contains the sectionname i.e the datagroup.</Parameter>
<Parameter caption="toolTip" dataType="String" parameterName="toolTip" show="Y" type="TEXT">contains the tooltip name to be clicked.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> sectionname </th><th> tooltip </th></tr>
 <tr><td> performactionatdatagrouplevel </td><td>description</td><td>create new</td></tr>
 </table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;This module is used to click on button which is inside the lookup/popup/overlapping window&lt;/b&gt;" methodName="PerformActionAtDataGroupLevel">
<Parameters>
<Parameter caption="sectionName" dataType="String" parameterName="sectionName" show="Y" type="TEXT">contains the sectionname i.e the datagroup.</Parameter>
<Parameter caption="toolTip" dataType="String" parameterName="toolTip" show="Y" type="TEXT">contains the tooltip name to be clicked.</Parameter>
<Parameter caption="EnableOrDisableOrTrueFalse" dataType="String" parameterName="EnableOrDisableOrTrueFalse" show="Y" type="TEXT">enableordisable is to check if the button is not readonly on ui or not and true/false is to check id the button is visible on ui or not</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> sectionname </th><th> tooltip </th><th> enableordisableortruefalse </th></tr>
 <tr><td> performactionatdatagrouplevel </td><td>description</td><td>copy</td><td>enable</td></tr>
 <tr><td> performactionatdatagrouplevel </td><td>description</td><td>copy</td><td>'false</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to select multiple records to perform an action.&lt;/b&gt;" methodName="SelectMultipleRecords">
<Parameters>
<Parameter caption="NumberOfRecords" dataType="int" parameterName="NumberOfRecords" show="Y" type="TEXT">the number of records to be selected</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> numberofrecords </th></tr>
 <tr><td> selectmultiplerecords </td><td>8</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to select a menu option when you right-click a field in a template..&lt;/b&gt;" methodName="SelectMenuOnFieldRightClick">
<Parameters>
<Parameter caption="DataGroupAndFieldNamePipeSeparated" dataType="String" parameterName="DataGroupAndFieldNamePipeSeparated" show="Y" type="TEXT">name of the data group and field name pipe separated.
 datagroupnamefieldname</Parameter>
<Parameter caption="MenuOption" dataType="String" parameterName="MenuOption" show="Y" type="TEXT">this parameter accepts the user menu that needs to be selected.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupandfieldnamepipeseparated </th><th> menuoption </th></tr>
 <tr><td> selectmenuonfieldrightclick </td><td> instrument details|instrument name </td><td> remove lock </td></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;This module verifies the navigation of the given menu path.&lt;/b&gt;" methodName="VerifyMenuSelection">
<Parameters>
<Parameter caption="path" dataType="String" parameterName="path" show="Y" type="TEXT">this parameter accepts menu path like : security master:issue:issue</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">this parameter accepts true pr false</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> path </th><th> flag </th></tr>
 <tr><td> verifymenuselection </td><td> security master:issue:issue </td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to perform/click on the delete icon for a template under My Templates tab of Account Settings screen.&lt;/b&gt;" methodName="PerformActionsOnMyTemplates">
<Parameters>
<Parameter caption="templateName" dataType="String" parameterName="templateName" show="Y" type="TEXT">contains the name of template.</Parameter>
<Parameter caption="value" dataType="String" parameterName="value" show="Y" type="TEXT">contains the button icon to be clicked.</Parameter>
<Parameter caption="booleanValue" dataType="String" parameterName="booleanValue" show="Y" type="TEXT">contains the button icon to be clicked.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> templatename </th><th> value </th><th> booleanvalue </th></tr>
 <tr><td> performactionsonmytemplates </td><td>s: grid bond template</td><td>delete</td><td>'false</td></tr>
 </table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to perform/click on the delete icon for a template under My Templates tab of Account Settings screen.&lt;/b&gt;" methodName="PerformActionsOnMyTemplates">
<Parameters>
<Parameter caption="templateName" dataType="String" parameterName="templateName" show="Y" type="TEXT">contains the name of template.</Parameter>
<Parameter caption="value" dataType="String" parameterName="value" show="Y" type="TEXT">contains the button icon to be clicked.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> templatename </th><th> value </th></tr>
 <tr><td> performactionsonmytemplates </td><td>s: grid bond template</td><td>delete</td></tr>
 </table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies the readonly buttons on current working page.&lt;/b&gt;" methodName="VerifyReadOnlyButtons">
<Parameters>
<Parameter caption="buttonLabelFlag" dataType="String" parameterName="buttonLabelFlag" show="Y" type="TEXT">this parameter accepts button name and expected result(true or false)
 true - button is enabled
 false- button is disabled</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonlabelflag </th></tr>
 <tr><td> verifyreadonlybuttons </td><td> save|true||reload|false </td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This module verified column headers on popup screen&lt;/b&gt;" methodName="VerifyTableHeadersOnPopup">
<Parameters>
<Parameter caption="windowName" dataType="String" parameterName="windowName" show="Y" type="TEXT">naame of the current screen/window where headers have to be verified</Parameter>
<Parameter caption="fields" dataType="String" parameterName="fields" show="Y" type="TEXT">field name or headers that is to be verified</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> windowname </th><th> fields </th></tr>
 <tr><td> coupon schedule </td><td>coupon start date||coupon type (amount/percent)</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies if a menu option from the Action Menu on a specific Datagroup is read only or not.&lt;/b&gt;" methodName="VerifyReadOnlyMenuAction">
<Parameters>
<Parameter caption="dataGroupNameOrSectionName" dataType="String" parameterName="dataGroupNameOrSectionName" show="Y" type="TEXT">datagroup name for which verification need to be performed.</Parameter>
<Parameter caption="optionName" dataType="String" parameterName="optionName" show="Y" type="TEXT">name of the option under action menu.</Parameter>
<Parameter caption="isDisableBooleanValue" dataType="String" parameterName="isDisableBooleanValue" show="Y" type="TEXT">expected condition, true or false.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupnameorsectionname </th><th> menuoption </th><th> isdisablebooleanvalue </th></tr>
 <tr><td> verifymenuactionvisibility </td><td>instrument details</td><td>reset</td><td>true</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This method is used to verify whether a template menu option of Share To All or Share To is greyout or not. This method is used in Share To templates module where a menu option is enable or disabled is verified.&lt;/b&gt;" methodName="VerifyMenuOptionsReadOnly">
<Parameters>
<Parameter caption="menuOption" dataType="String" parameterName="menuOption" show="Y" type="TEXT">share to all, share to are menu options of others menu on the configure templates popup so user needs to provide similar menu options</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">this parameter accepts true and false</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> menuoption </th><th> booleanval </th></tr>
 <tr><td> verifymenuoptionsreadonly </td><td>share to all</td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies if whole entity on current page is readyonly or enabled.&lt;/b&gt;" methodName="VerifyReadOnlyEntity">
<Parameters>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">the parameter needs to be passed as true/false
 true - whole entity is readonly.
 false - whole entity is not readonly</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> booleanval </th></tr>
 <tr><td> verifyreadonlyentity </td><td> false </td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This module will verify if the message is visible on the screen/b&gt;" methodName="VerifyValidationMessage">
<Parameters>
<Parameter caption="message" dataType="String" parameterName="message" show="Y" type="TEXT">that will be visible.</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">true if message should be visible</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> message </th><th> true/false </th></tr>
 <tr><td> found 1 validation error(s) </td><td>false</td></tr>
 <tr><td> saved successfully </td><td>true</td></tr>
</table>

]]></Examples>
</Method>
<Method author="sakamble" methodDesc="&lt;b&gt;DESCRIPTION To verify if gso field exists with the provided validation message in the Validation Layer OR to verify if the notification popup is displayed on click of GSO Field that is displayed in the Validation Layer&lt;/b&gt;" methodName="VerifyValidationMessage">
<Parameters>
<Parameter caption="gsoField" dataType="String" parameterName="gsoField" show="Y" type="TEXT">- case 1 : instrument typemandatory attribute of the entity is missing. case 2 :  instrument type</Parameter>
<Parameter caption="notificationMessage" dataType="String" parameterName="notificationMessage" show="Y" type="TEXT">- popup message to be displayed (need to pass parameter only in case 2)</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">- true if the popup message is to be displayed else false (need to pass parameter only in case 2)</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> gsofield </th><th> popup message to be displayed  </th><th> true/false </th></tr>
 <tr><td> instrument type </td><td> popup message to be displayed </td><td>true </td></tr>
 <tr><td> instrument type|mandatory attribute of the entity is missing </td><td>  </td><td> </td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt; This module is used to upload file in GSO Designer but its not currently supported." methodName="UploadFilesOnGSORepository">
<Parameters>
<Parameter caption="uploadOptions" dataType="String" parameterName="uploadOptions" show="Y" type="TEXT"/>
<Parameter caption="path" dataType="String" parameterName="path" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is use to delete all the templates under My Templates tab of MY Preferences screen&lt;/b&gt;" methodName="DeleteAllTemplates">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="kpandya" methodDesc="&lt;b&gt;This method is used to click on add,edit,del and details button which is inside the hierarchy screen for a institution&lt;/b&gt;" methodName="ClickOnButtonOnHierarchy">
<Parameters>
<Parameter caption="insName" dataType="String" parameterName="insName" show="Y" type="TEXT">contains the institution name to be clicked.</Parameter>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT">contains the button name to be clicked.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> insname </th><th> buttonname </th></tr>
 <tr><td> clickonbuttononhierarchy </td><td>reliance pet700154</td><td>add</td></tr>
 <tr><td> clickonbuttononhierarchy </td><td>jio ind700154</td><td>edit</td></tr>
 <tr><td> clickonbuttononhierarchy </td><td>reliance pet700154</td><td>del</td></tr>
</table>
]]></Examples>
</Method>
<Method author="kpandya" methodDesc="&lt;b&gt;This method is used to click on zoom in/zoom out button which is inside the hierarchy screen&lt;/b&gt;" methodName="ClickOnButtonOnHierarchy">
<Parameters>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT">contains the button name to be clicked.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonname </th></tr>
 <tr><td> clickonbuttononhierarchy </td><td>zoom in</td></tr>
 <tr><td> clickonbuttononhierarchy </td><td>zoom out</td></tr>
</table>
]]></Examples>
</Method>
<Method author="bsaswade" methodDesc="&lt;b&gt;This module verified the record count of multioccuring Datagroups.&lt;/b&gt;" methodName="VerifyMultiDataGroupRecCount">
<Parameters>
<Parameter caption="dataGroup" dataType="String" parameterName="dataGroup" show="Y" type="TEXT">this parameter accepts the datagroup name for which the record count needs to be verified.</Parameter>
<Parameter caption="count" dataType="int" parameterName="count" show="Y" type="TEXT">this parameter accepts integer count of expected records.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroup </th><th> count </th></tr>
 <tr><td> verifymultidatagroupreccount </td><td> market listing </td><td> 2 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This method verifies multi-occuring Datagroup count on popup window of transpose view.&lt;/b&gt;" methodName="VerifyMultiDataGroupRecCount">
<Parameters>
<Parameter caption="countValue" dataType="int" parameterName="countValue" show="Y" type="TEXT">this parameter accepts integer count of expected records.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> count </th></tr>
 <tr><td> verifymultidatagroupreccount </td><td> 5 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="refreshCurrentURL">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="sakamble" methodDesc="&lt;b&gt;To check and verify if the specified entity is displayed SideBySide&lt;/b&gt;" methodName="CheckEntityForRuleMatchResult">
<Parameters>
<Parameter caption="entityName" dataType="String" parameterName="entityName" show="Y" type="TEXT">- entity header name and value pipe separated</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> entityname </th></tr>
 <tr><td> checkentityforrulematchresult </td><td> entity1|evan zigomalas 1||entity2|evan zigomalas </td></tr>
</table>
]]></Examples>
</Method>
<Method author="bsaswade" methodDesc="&lt;b&gt;This module verifies if rule status displayed properly for selected entities with respect to associated fields.&lt;/b&gt;" methodName="VerifyEntityForRuleMatchResult">
<Parameters>
<Parameter caption="entityNames" dataType="String" parameterName="entityNames" show="Y" type="TEXT">matched entities pipe separated for whihc verification need to be performed.</Parameter>
<Parameter caption="RuleFieldColor" dataType="String" parameterName="RuleFieldColor" show="Y" type="TEXT">- rule name, datagroup name, field name and color to verify.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> entitynames </th><th> rulefieldcolor </th></tr>
 <tr><td> verifyentityforrulematchresult </td><td> entity1|entity2 </td><td> rulename1|instrument details|instrument name|red </td></tr>
</table>
]]></Examples>
</Method>
<Method author="bkhemani" methodDesc="&lt;b&gt;This module is created to click on spy glass on popup/overlapping window.&lt;/b&gt;" methodName="ClickSpyGlassOnPopup">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="bsaswade" methodDesc="&lt;b&gt; This module verifies the current selected value in dropdown. &lt;/b&gt;" methodName="VerifyMergeResult">
<Parameters>
<Parameter caption="EntityRuleCheckUncheck" dataType="String" parameterName="EntityRuleCheckUncheck" show="Y" type="TEXT">parameter accepts entityname  rulename  checkunchecksign pipe seperated.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> entityrulecheckuncheck </th></tr>
 <tr><td> verifymergeresult </td><td> entityname | rulename | checkunchecksign </td></tr>
</table>
]]></Examples>
</Method>
<Method author="kpandya" methodDesc="&lt;b&gt;This method is used to click on button which is inside the lookup/popup/overlapping window&lt;/b&gt;" methodName="clickOnButtonInsideLookup">
<Parameters>
<Parameter caption="lookupWindowName" dataType="String" parameterName="lookupWindowName" show="Y" type="TEXT">contains the name of lookup/popup/overlapping window.</Parameter>
<Parameter caption="ButtonName" dataType="String" parameterName="ButtonName" show="Y" type="TEXT">contains the button name to be clicked.</Parameter>
<Parameter caption="shortcut" dataType="String" parameterName="shortcut" show="Y" type="TEXT">contains the shortcut text(if any) otherwise null for shortcut parameter.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> lookupwindowname </th><th> buttonname </th><th> shortcut </th></tr>
 <tr><td> clickonbuttoninsidelookup </td><td>edit search results</td><td>upload</td><td>null</td></tr>
 <tr><td> clickonbuttoninsidelookup </td><td> upload excel </td><td>upload</td><td>null</td></tr>
</table>
]]></Examples>
</Method>
<Method author="kpandya" methodDesc="&lt;b&gt;This method is used to click on button which is inside the lookup/popup/overlapping window&lt;/b&gt;" methodName="clickOnButtonInsideLookup">
<Parameters>
<Parameter caption="lookupWindowName" dataType="String" parameterName="lookupWindowName" show="Y" type="TEXT">contains the name of lookup/popup/overlapping window.</Parameter>
<Parameter caption="ButtonName" dataType="String" parameterName="ButtonName" show="Y" type="TEXT">contains the button name to be clicked.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> lookupwindowname </th><th> buttonname </th></tr>
 <tr><td> clickonbuttoninsidelookup </td><td>edit search results</td><td>upload</td></tr>
 <tr><td> clickonbuttoninsidelookup </td><td> upload excel </td><td>upload</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt; This module verifies the current selected value in dropdown.&lt;/b&gt;" methodName="VerifyCurrentValueFromDropDown">
<Parameters>
<Parameter caption="labelOrLabelNameValue" dataType="String" parameterName="labelOrLabelNameValue" show="Y" type="TEXT">this parameter accepts the value of the dropfown if there is only input dropdown field on the screen. in case of multiple dropdowns label name and value needs to be specified pipe separated like labelname1value1labelname2value2</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">this parameter accepts boolean value true if the value is expected to be found and false if the value is not expected to be found</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> labelorlabelnamevalue </th><th> booleanval </th></tr>
 <tr><td> verifycurrentvaluefromdropdown </td><td>entity|equity</td><td>true</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt; This module verify the current selected value in dropdown. This accepts an extra parameter pageindex if there are multiple labels with same name you need to specify the index&lt;/b&gt;" methodName="VerifyCurrentValueFromDropDown">
<Parameters>
<Parameter caption="labelNameValue" dataType="String" parameterName="labelNameValue" show="Y" type="TEXT">this parameter accepts the label name and value in specified pipe separated format like labelname1value1labelname2value2</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">this parameter accepts boolean value true if the value is expected to be found and false if the value is not expected to be found</Parameter>
<Parameter caption="pageIndex" dataType="int" parameterName="pageIndex" show="Y" type="TEXT">this parameter accepts the index in case the same dropdown name is showing multiple times on same screen. if case the label is showing only one time pass 1 as the parameter.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> labelnamevalue </th><th> booleanval </th><th> pageindex </th></tr>
 <tr><td> verifycurrentvaluefromdropdown </td><td>entity|equity</td><td>true</td><td>1</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies if specific field under a datagroup is readonly or not, on Popup window.&lt;/b&gt;" methodName="VerifyReadOnlyFieldsOnPopup">
<Parameters>
<Parameter caption="windowTitleName" dataType="String" parameterName="windowTitleName" show="Y" type="TEXT">window title to be specified here.</Parameter>
<Parameter caption="fieldNamesAndValue" dataType="String" parameterName="fieldNamesAndValue" show="Y" type="TEXT">this parameter accepts field name and value pipe separated. for multiple verification values must be separated by .</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">this parameter accepts true or false.
 true - field is enabled
 false - field is disabled</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> windowtitlename </th><th> fieldnamesandvalue </th><th> booleanval </th></tr>
 <tr><td> verifyreadonlyfieldsonpopup </td><td> windowtitlename </td><td> fieldname|value </td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies if All the fields under a specific datagroup is readonly or not, on Popup window.&lt;/b&gt;" methodName="VerifyReadOnlyFieldsOnPopup">
<Parameters>
<Parameter caption="datagroupName" dataType="String" parameterName="datagroupName" show="Y" type="TEXT">the parameter needs to be passed as, instrument details</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">the parameter needs to be passed as
 true - all fields are enabled
 false - all fields are disabled</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupname </th><th> booleanval </th> </tr>
 <tr><td> verifyreadonlyfieldsonpopup </td><td> instrument details</td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This module verified if any text is visible on the popup screen&lt;/b&gt;" methodName="VerifyTextOnPopUp">
<Parameters>
<Parameter caption="text" dataType="String" parameterName="text" show="Y" type="TEXT">checks for visibility of any text message on popup screen.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> text </th></tr>
 <tr><td> saved successfully </td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This module verified if any text is visible on the popup screen&lt;/b&gt;" methodName="VerifyTextOnPopUp">
<Parameters>
<Parameter caption="text" dataType="String" parameterName="text" show="Y" type="TEXT">checks for visibility of any text message on popup screen.</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">value true/false</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> textmessage </th><th> true/false </th></tr>
 <tr><td> save successfully </td><td>true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This module verified if any text is visible on the popup screen&lt;/b&gt;" methodName="VerifyTextOnPopUp">
<Parameters>
<Parameter caption="text" dataType="String" parameterName="text" show="Y" type="TEXT">checks for visibility of any text message on popup screen.</Parameter>
<Parameter caption="flag" dataType="boolean" parameterName="flag" show="Y" type="TEXT">value true/false</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> textmessage </th><th> true/false </th></tr>
 <tr><td> save successfully </td><td>true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="bsaswade" methodDesc="&lt;b&gt;This module verified the field value associated with provided label on UI.&lt;/b&gt;" methodName="VerifyFieldValues">
<Parameters>
<Parameter caption="labelValue" dataType="String" parameterName="labelValue" show="Y" type="TEXT">label name and value pipe separated, multiple field can be verified by using .</Parameter>
<Parameter caption="visible" dataType="Boolean" parameterName="visible" show="Y" type="TEXT">true or false.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> labelvalue </th><th> visible </th></tr>
 <tr><td> verifyfieldvalues </td><td> instrument name|value123 </td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module function is  to select data on a grid.&lt;/b&gt;" methodName="CheckUncheckFieldsOnGrid">
<Parameters>
<Parameter caption="testData" dataType="String" parameterName="testData" show="Y" type="TEXT">:this basically calls the searchrecords module and user needs to provide exactly the value which needs to be checked here.</Parameter>
<Parameter caption="action" dataType="String" parameterName="action" show="Y" type="TEXT">:this basically means user needs to provide the fieldname and its exact datagroup where that fieldname 
		exists with the action as enable or disable</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> testdata </th><th> action </th></tr>
 <tr><td> checkuncheckfieldsongrid </td><td> attribute|instrument details </td><td> instrument details|enable </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies the InTable Data in datagroup where InTable is applied.&lt;/b&gt;" methodName="VerifyInTableData">
<Parameters>
<Parameter caption="DataGroup" dataType="String" parameterName="DataGroup" show="Y" type="TEXT">name of the datagroup/s for which verification needs to be performed.</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">this parameter accepts true or false, depending on the expected condition.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroup </th><th> booleanval </th></tr>
 <tr><td> verifyintabledata </td><td> market listing </td><td> true or false </td></tr>
</table>
]]></Examples>
</Method>
<Method author="bkhemani" methodDesc="&lt;b&gt;Below method will be used if users need to verify a menu option visibility. &#10; Means if Entitlements is applied then if the user removes certain rights so it shouldn't display that menu option then as per the expected value in &#10; isDisableBooleanValue if true and if it works as expected then it won't give any VerificationException failure exception. &lt;/b&gt;" methodName="VerifyVisibilityMenuOptions">
<Parameters>
<Parameter caption="menuOption" dataType="String" parameterName="menuOption" show="Y" type="TEXT">- this could be any menu option pop-up for e.g., actions-multi edit</Parameter>
<Parameter caption="isDisableBooleanValue" dataType="String" parameterName="isDisableBooleanValue" show="Y" type="TEXT">- true/false</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> menuoption </th><th> trueorfalse </th></tr>
 <tr><td> actions|multi edit </td><td>true</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies the menu options whether they checked or unchecked.&lt;/b&gt;" methodName="VerifyMenuOptionsCheckUncheck">
<Parameters>
<Parameter caption="menuOption" dataType="String" parameterName="menuOption" show="Y" type="TEXT">menu option that needs to be verified, like share to options in others menu</Parameter>
<Parameter caption="tickUntick" dataType="String" parameterName="tickUntick" show="Y" type="TEXT">tick or un-tick would be value to be provided here</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> menuoption </th><th> tickuntick </th></tr>
 <tr><td> verifymenuoptionscheckuncheck </td><td>share to all</td><td> untick </td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This module checks the length of the given string&lt;/b&gt;" methodName="VerifyStringLength">
<Parameters>
<Parameter caption="label" dataType="String" parameterName="label" show="Y" type="TEXT">string name to check the length of.</Parameter>
<Parameter caption="size" dataType="int" parameterName="size" show="Y" type="TEXT">size of the given string to check</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> string </th><th> length </th></tr>
 <tr><td> testdate </td><td>8</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This method is used to select option with radio buttons on popup window&lt;/b&gt;" methodName="SetRadioButtonOnPopup">
<Parameters>
<Parameter caption="label" dataType="String" parameterName="label" show="Y" type="TEXT">this parameter accepts the label with radio button.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> label </th></tr>
 <tr><td> setradiobuttononpopup </td><td> export selected records</td></tr>
</table>
]]></Examples>
</Method>
<Method author="bsaswade" methodDesc="&lt;b&gt;To Change the Field Label In Template&lt;/b&gt;" methodName="ChangeFieldLabelInTemplate">
<Parameters>
<Parameter caption="tabName" dataType="String" parameterName="tabName" show="Y" type="TEXT">- tab name under which change label to perform</Parameter>
<Parameter caption="fieldOldNewNames" dataType="String" parameterName="fieldOldNewNames" show="Y" type="TEXT">- field name to be changed with old name pipe separated.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> tabname </th><th> fieldoldnewnames </th></tr>
 <tr><td> changefieldlabelintemplate </td><td> description</td><td> instrument description|testdesc </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt; This module verifies if section is expanded.  &lt;/b&gt;" methodName="VerifyIfSectionExpand">
<Parameters>
<Parameter caption="dataGroupName" dataType="String" parameterName="dataGroupName" show="Y" type="TEXT">this parameter accepts the name of datagroup which is to be verified for expansion.</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">this parameter accepts boolean value true or false.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupname </th><th> flag </th></tr>
 <tr><td> verifyifsectionexpand </td><td> instrument details </td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to check/uncheck the fields.&lt;/b&gt;" methodName="selectCheckBoxWithLabel">
<Parameters>
<Parameter caption="FieldLabel" dataType="String" parameterName="FieldLabel" show="Y" type="TEXT">name of the field having the checkbox which needs to be selected or cleared</Parameter>
<Parameter caption="IndexOfLabel" dataType="int" parameterName="IndexOfLabel" show="Y" type="TEXT">location of the field on the screen</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> fieldlabel </th><th> indexoflabel </th></tr>
 <tr><td> selectcheckboxwithlabel </td><td>institution name</td><td>1</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to check/uncheck the fields.&lt;/b&gt;" methodName="selectCheckBoxWithLabel">
<Parameters>
<Parameter caption="FieldLabel" dataType="String" parameterName="FieldLabel" show="Y" type="TEXT">name of the field having the checkbox which needs to be selected or cleared</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> fieldlabel </th></tr>
 <tr><td> selectcheckboxwithlabel </td><td>institution name</td></tr>
</table>
]]></Examples>
</Method>
<Method author="sakamble" methodDesc="&lt;b&gt;DESCRIPTION To verify Match Results for created rules&lt;/b&gt;" methodName="VerifyRuleMatchResult">
<Parameters>
<Parameter caption="entityName" dataType="String" parameterName="entityName" show="Y" type="TEXT">- entity header name and value pipe separated (entity1evan zigomalas 1entity2evan zigomalas)</Parameter>
<Parameter caption="ruleName" dataType="String" parameterName="ruleName" show="Y" type="TEXT">- rule name and color to validate pipe separated (paragon id match rulegreentax id matching rulegreen)</Parameter>
<Parameter caption="expectedFlag" dataType="String" parameterName="expectedFlag" show="Y" type="TEXT">- final column header name and color to validate pipe separated (finalred)</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> entity header name and value pipe separated </th><th> rule name and color to validate pipe separated </th><th> final column header name and color to validate pipe separated </th></tr>
 <tr><td> entity1|evan zigomalas 1||entity2|evan zigomalas </td><td> paragon id match rule|green||tax id matching rule|green </td><td> final|red </td></tr>
 </table>
]]></Examples>
</Method>
<Method author="sakamble" methodDesc="&lt;b&gt;DESCRIPTION To verify if records are present to match result&lt;/b&gt;" methodName="VerifyRuleMatchResult">
<Parameters>
<Parameter caption="isRecordPresent" dataType="String" parameterName="isRecordPresent" show="Y" type="TEXT">- true/false</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> isrecordpresent </th></tr>
 <tr><td> true </td></tr>
 </table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to check/uncheck the fields within a popup.&lt;/b&gt;" methodName="selectCheckBoxWithLabelOnPopup">
<Parameters>
<Parameter caption="label" dataType="String" parameterName="label" show="Y" type="TEXT">name of the field having the checkbox which needs to be selected or cleared</Parameter>
<Parameter caption="index" dataType="int" parameterName="index" show="Y" type="TEXT">location of the field on the screen.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> fieldlabel </th><th> indexoflabel </th></tr>
 <tr><td> selectcheckboxonpopup </td><td> income event type </td><td> 1 </td></tr>
 <tr><td> selectcheckboxonpopup </td><td> merge oid </td><td>1 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to verify if the datagroup is empty or has labels depending on the boolean value passed on popup screen&lt;/b&gt;" methodName="VerifyBlankDataGroupOnPopup">
<Parameters>
<Parameter caption="windowName" dataType="String" parameterName="windowName" show="Y" type="TEXT">this parameter accepts the datagroup name.</Parameter>
<Parameter caption="boolanVal" dataType="String" parameterName="boolanVal" show="Y" type="TEXT">this parameter accepts boolean value true if the expectation is that datagroup should be blank and false if the expectation is datagroup should have some labels.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> windowname </th><th> booleanval </th></tr>
 <tr><td> verifyblankdatagrouponpopup </td><td> market listing </td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="GetCurrentActiveBookmark">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to verify if the datagroup is empty or has labels depending on the boolean value passed&lt;/b&gt;" methodName="VerifyBlankDataGroup">
<Parameters>
<Parameter caption="dataGroupsPipeSeperated" dataType="String" parameterName="dataGroupsPipeSeperated" show="Y" type="TEXT">this parameter accepts the datagroup name double pipe seperated like datagroup1datagroup2 and so on.</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">this parameter accepts boolean value true if the expectation is that datagroup should be blank and false if the expectation is datagroup should have some labels.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupspipeseperated </th><th> booleanval </th></tr>
 <tr><td> verifyblankdatagroup </td><td> description||market listing </td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="GetEntityFileLoadCount">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies if a menu option on popup window is read only or not.&lt;/b&gt;" methodName="VerifyReadOnlyMenuOptionOnPopup">
<Parameters>
<Parameter caption="menuOption" dataType="String" parameterName="menuOption" show="Y" type="TEXT">name of the option under action menu.</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">expected condition, true or false.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> menuoption </th><th> isdisablebooleanvalue </th></tr>
 <tr><td> verifyreadonlymenuoptiononpopup </td><td>reset</td><td>true</td></tr>
</table>
]]></Examples>
</Method>
<Method author="bsaswade" methodDesc="&lt;b&gt;This module will verify if the dropdown displayed is in Ascending or Descending order" methodName="SortAndVerifyDropdown">
<Parameters>
<Parameter caption="dropdownname" dataType="String" parameterName="dropdownname" show="Y" type="TEXT">this parameter accepts the name of the dropdown to verify the sorting order</Parameter>
<Parameter caption="DESCorASC" dataType="String" parameterName="DESCorASC" show="Y" type="TEXT">- this parameter accepts the type of sort order expected. (values: desc or asc)</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> dropdownname </th><th> descorasc </th></tr>
 <tr><td> sortandverifydropdown </td><td> instrument type </td><td> asc</td></tr>
 <tr><td> sortandverifydropdown </td><td> instrument type </td><td> desc</td></tr>
</table>
]]></Examples>
</Method>
<Method author="sakamble" methodDesc="&lt;b&gt;DESCRIPTION To verify Fieldwise Contribution&lt;/b&gt;" methodName="VerifyRuleConfidenceFactor">
<Parameters>
<Parameter caption="entityName" dataType="String" parameterName="entityName" show="Y" type="TEXT">- entity header name and value pipe separated (entity1evan zigomalas 1entity2evan zigomalas)</Parameter>
<Parameter caption="ruleColumnValues" dataType="String" parameterName="ruleColumnValues" show="Y" type="TEXT">-rule name and percentage to validate pipe separated (attribute fuzzy matching rule95.06)</Parameter>
<Parameter caption="fieldNamePercentagePipeSeparated" dataType="String" parameterName="fieldNamePercentagePipeSeparated" show="Y" type="TEXT">- fieldname and percentage to validate pipe separated (postal code26.30date of birth26.30)</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> entitynameandvalue </th><th> rulenameandpercentage </th><th> fieldnameandpercentage </th></tr>
 <tr><td> entity1|evanzigom1 </td><td> attribute fuzzy matching rule|95.06 </td><td> postal code|26.30</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies if the field/data is readonly or not.&lt;/b&gt;" methodName="VerifyReadOnlyFields">
<Parameters>
<Parameter caption="dataGroupNameFieldNameOrDataGroupName" dataType="String" parameterName="dataGroupNameFieldNameOrDataGroupName" show="Y" type="TEXT">the parameter needs to be passed as
 1. instrument detailsinstrument namemarket listingexchange name, true/false
 2. instrument details, true/false</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">the parameter needs to be passed as
 true - field/datagroup is enabled
 false - field/datagroup is disabled</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupnamefieldnameordatagroupname </th><th> booleanval </th> </tr>
 <tr><td> verifyreadonlyfields </td><td> instrument details|instrument name||market listing|exchange name </td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies if the menu is created correctly under Menu Configuration window.&lt;/b&gt;" methodName="VerifyMenuCreation">
<Parameters>
<Parameter caption="MenuPath" dataType="String" parameterName="MenuPath" show="Y" type="TEXT">this parameter accepts actual menu path that needs to be verified.</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">this parameter accepts true or false, expected condition.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> menupath </th><th> flag </th></tr>
 <tr><td> verifymenucreation </td><td> security master|issue|issue </td><td> true </td></tr>
 <tr><td> verifymenucreation </td><td> security master </td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to stop/start workstation server&lt;/b&gt;" methodName="StopStartWorkstationServer">
<Parameters>
<Parameter caption="path" dataType="String" parameterName="path" show="Y" type="TEXT">this parameter accepts location of the start and stop scripts.</Parameter>
<Parameter caption="stopCommand" dataType="String" parameterName="stopCommand" show="Y" type="TEXT">this parameter accepts the stop script like stopall.sh</Parameter>
<Parameter caption="startCommand" dataType="String" parameterName="startCommand" show="Y" type="TEXT">this parameter accepts the start script like startall.sh</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> path </th><th> stopcommand </th><th> startcommand </th></tr>
 <tr><td> stopstartworkstationserver </td><td> /ext/app/environmentfoldername/software/serverscripts/</td><td> stopall.sh</td><td>startall.sh</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies if a menu option from the Action menu, is visible.&lt;/b&gt;" methodName="VerifyMenuActionVisibility">
<Parameters>
<Parameter caption="dataGroup" dataType="String" parameterName="dataGroup" show="Y" type="TEXT">name of the datagroup under which the action menu is present.</Parameter>
<Parameter caption="menuOption" dataType="String" parameterName="menuOption" show="Y" type="TEXT">name of the option that needs to be verified for visibility.</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">true or false, expected condition</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupname </th><th> menuoption </th><th> booleanval </th></tr>
 <tr><td> verifymenuactionvisibility </td><td>description</td><td>export</td><td>true</td></tr>
 <tr><td> verifymenuactionvisibility </td><td>description</td><td>acbd</td><td>false</td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;Use this function adding and removing bookmarks from the tabs.&lt;/b&gt;" methodName="AddRemoveBookmark">
<Parameters>
<Parameter caption="entityName" dataType="String" parameterName="entityName" show="Y" type="TEXT">of the tab/entity to be bookmarked.</Parameter>
<Parameter caption="enableOrDisable" dataType="String" parameterName="enableOrDisable" show="Y" type="TEXT">refers to enable or disable, where enable adds the tab to the bookmark list, and disable removes the tab.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> entityname </th><th> entityname </th></tr>
 <tr><td> addremovebookmark </td><td> issue </td><td> enable </td></tr>
 <tr><td> addremovebookmark </td><td> issuer </td><td> disable </td></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;This module verifies if the field or datagroup is visible on UI or not.&lt;/b&gt;" methodName="VerifySectionOrFieldVisibility">
<Parameters>
<Parameter caption="dataGroupOrFieldName" dataType="String" parameterName="dataGroupOrFieldName" show="Y" type="TEXT"/>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">the parameter needs to be passed as
 instrument detailsdescriptioninstrument name, true/false
 true - datagroup or field is visible.
 false - datagroup or field is disabled.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> dgname|fieldname|value </th><th> trueorfalse </th></tr>
 <tr><td> instrument details||description|instrument name </td><td>true/false</td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This module verified if any column is present&lt;/b&gt;" methodName="VerifyTableHeaders">
<Parameters>
<Parameter caption="column" dataType="String" parameterName="column" show="Y" type="TEXT">column name to check</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">either set it true or false</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> column </th><th> true/false </th></tr>
 <tr><td> inhouse identifier </td><td>true</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is use to open new browser instance.&lt;/b&gt;" methodName="OpenNewBrowserInstance">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="bsaswade" methodDesc="&lt;b&gt;This module approves the chal record from the Adornment panel.&lt;/b&gt;" methodName="VerifyDependentFieldValues">
<Parameters>
<Parameter caption="dataGroupNameFieldNameValue" dataType="String" parameterName="dataGroupNameFieldNameValue" show="Y" type="TEXT">datagroup name and field name pipe separated.</Parameter>
<Parameter caption="fieldNameValueToBePrinted" dataType="String" parameterName="fieldNameValueToBePrinted" show="Y" type="TEXT">field name pipe separated.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupandfieldname </th><th> approveorrejectstatus </th></tr>
 <tr><td> verifydependentfieldvalues </td><td> instrument details|instrument name </td><td> complete </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="SortDataGroupRows">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="bkhemani" methodDesc="&lt;b&gt;This module is used to check/uncheck the fields within a popup.&lt;/b&gt;" methodName="SelectCheckBoxOnPopup">
<Parameters>
<Parameter caption="FieldLabel" dataType="String" parameterName="FieldLabel" show="Y" type="TEXT">name of the field having the checkbox which needs to be selected or cleared</Parameter>
<Parameter caption="Flag" dataType="String" parameterName="Flag" show="Y" type="TEXT">value can be check or uncheck. check if value needs to checked and uncheck if value needs to be unchecked</Parameter>
<Parameter caption="IndexOfLabel" dataType="String" parameterName="IndexOfLabel" show="Y" type="TEXT">location of the field on the screen.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> fieldlabel </th><th> flag </th><th> indexoflabel </th></tr>
 <tr><td> selectcheckboxonpopup </td><td> income event type </td><td> check </td><td> 1 </td></tr>
 <tr><td> selectcheckboxonpopup </td><td> merge oid </td><td> uncheck </td><td>1 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to close all opened tabs on the header&lt;/b&gt;" methodName="CloseAllGSMenuTabs">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This module is store multiple field values in STOTPT variable.&lt;/b&gt;" methodName="GetAllFieldValues">
<Parameters>
<Parameter caption="testData" dataType="String" parameterName="testData" show="Y" type="TEXT">contains the field information which needs to be stored.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> testdata </th><th> stotpt variable name </th></tr>
 <tr><td> getallfieldvalues </td><td>description|instrument name||description|source of instrument description</td><td>stotpt:auditoldvalues210</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies if field under a Datagroup is mandatory or not. Multiple fields can be verified by separating them with ||.&lt;/b&gt;" methodName="VerifyMandatoryFields">
<Parameters>
<Parameter caption="dataGroupFieldNameAndFlag" dataType="String" parameterName="dataGroupFieldNameAndFlag" show="Y" type="TEXT">this parameter accepts datagroup  fieldname  true or false, for multiple fields put  in between.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupfieldnameandflag </th></tr>
 <tr><td> verifymandatoryfields </td><td> instrument details|instrument type|true</td></tr>
 <tr><td> verifymandatoryfields </td><td> instrument details|instrument type|true|| description|original data provider|false</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="GetAllInfoFromDataGroup">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to select a menu option from the Action menu.&lt;/b&gt;" methodName="SelectMenuOptions">
<Parameters>
<Parameter caption="MenuOption" dataType="String" parameterName="MenuOption" show="Y" type="TEXT">name of the option to be selected in the menu</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> menuoption </th></tr>
 <tr><td> selectmenuoptions </td><td>share to all</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies if popup window is visible on the screen using window title.&lt;/b&gt;" methodName="VerifyIfPopupVisible">
<Parameters>
<Parameter caption="windowTitleName" dataType="String" parameterName="windowTitleName" show="Y" type="TEXT">this parameter accepts the title of window.</Parameter>
<Parameter caption="booleanVal" dataType="Boolean" parameterName="booleanVal" show="Y" type="TEXT">this parameter accepts boolean value true if window is expected on screen else false.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> windowtitlename </th><th> booleanval </th></tr>
 <tr><td> verifyifpopupvisible </td><td> market listing </td><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="This method is set the drop down values for Admin:Entitlements:Entity Configuration. Action Configuration screen" methodName="SetEntityActionConfiguration">
<Parameters>
<Parameter caption="listOfActionsPipeSeperated" dataType="String" parameterName="listOfActionsPipeSeperated" show="Y" type="TEXT">this parameter accepts value in pipeseperated format like labelname1value1labelname2value2</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> listofactionspipeseperated </th></tr>
 <tr><td> setentityactionconfiguration </td><td>entity|base||search actions|select all||edit actions|select all</td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This function will be useful and used when exporting any record into xml, csv and xls file, At runtime if file has to get exported from UI and the file name is not known by the end user&#10; So this function will search the file by the latest/last/current date in the the download user directory and will copy and rename the same in the destination folder&#10; destination folder for this functions are as follows:&#10; for xml file - the file will be copied to the XMLFileComparison folder of the executed automation build and will be renamed with the param passed..&#10; for csv and xls file - the file will be copied and to the CSVFileComparison folder of the executed automation build and will be renamed with the param passed.&lt;/b&gt;" methodName="RenameExportedFile">
<Parameters>
<Parameter caption="FileNameWithExtension" dataType="String" parameterName="FileNameWithExtension" show="Y" type="TEXT">file name with the file extension to be given</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> filenamewithextension </th></tr>
 <tr><td> renameexportedfile</td><td> tc_tbe_gsqa_1_act.xls </td></tr>
</table>
]]></Examples>
</Method>
<Method author="bsaswade" methodDesc="&lt;b&gt;DESCRIPTION: This method verifies if provided column on popup is sorted per the given sorting order or not.&lt;/b&gt;" methodName="VerifySortOnPopup">
<Parameters>
<Parameter caption="ColumnNameSortType" dataType="String" parameterName="ColumnNameSortType" show="Y" type="TEXT">columnnamesorttype</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> columnnamesorttype </th></tr>
 <tr><td>coupon amount|descending</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies the datagroup sequence for multioccuring data groups after applying the InTable.&lt;/b&gt;" methodName="verifyInTableDGSequence">
<Parameters>
<Parameter caption="fieldsinsequesnce" dataType="String" parameterName="fieldsinsequesnce" show="Y" type="TEXT">this parameter accepts expected sequence of the datagroup after applying the intable.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> fieldsinsequesnce </th></tr>
 <tr><td> verifyintabledgsequence </td><td> extended income details|extended income participant details|extended income schedules </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to verify if lazy loading is enabled on the given Datagroups. Multiple Datagroups can be provided for this module as separating them with ||.&lt;/b&gt;" methodName="VerifyLazyLoading">
<Parameters>
<Parameter caption="dataGroup" dataType="String" parameterName="dataGroup" show="Y" type="TEXT">name of the datagroup for whihc lazyloading need to be verified.</Parameter>
<Parameter caption="value" dataType="String" parameterName="value" show="Y" type="TEXT">true or false</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroup </th><th> value </th></tr>
 <tr><td> verifylazyloading </td><td> all identifiers || all statistics || financial professional services </td><td> false </td></tr>
</table>
]]></Examples>
</Method>
<Method author="nagrawal" methodDesc="" methodName="GetRowValueFromSearchScreen">
<Parameters>
<Parameter caption="columnName" dataType="String" parameterName="columnName" show="Y" type="TEXT">column name(case sensitive)</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to save a record and then reload the saved entity.&lt;/b&gt;" methodName="SaveRecordAndReload">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to select a menu option from the Action menu on popup screen.&lt;/b&gt;" methodName="SelectMenuActionOnPopup">
<Parameters>
<Parameter caption="WindowTitle" dataType="String" parameterName="WindowTitle" show="Y" type="TEXT">title of the popup window</Parameter>
<Parameter caption="MenuOption" dataType="String" parameterName="MenuOption" show="Y" type="TEXT">name of the option to be selected in menu</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> windowtitle </th><th> menuoption </th></tr>
 <tr><td> selectmenuaction </td><td>description</td><td>export</td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This module will check for any validation message is visible on the screen&lt;/b&gt;" methodName="VerifyValidationLayer">
<Parameters>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> true/false </th></tr>
 <tr><td> true </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module Checks if the label mentioned is present or not&lt;/b&gt;" methodName="checkIfLabelVisible">
<Parameters>
<Parameter caption="label" dataType="String" parameterName="label" show="Y" type="TEXT">refers to the label name.</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">refers to the true false condition to check visibility of label.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> label </th><th> booleanval </th></tr>
 <tr><td> checkiflabelvisible </td><td> filter </td><td> true </td></tr>
 <tr><td> checkiflabelvisible </td><td> filter </td><td> false </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module  verify field label&lt;/b&gt;" methodName="checkIfLabelVisible">
<Parameters>
<Parameter caption="sectionName" dataType="String" parameterName="sectionName" show="Y" type="TEXT">refers to the data group name user want to check the visibility of label</Parameter>
<Parameter caption="label" dataType="String" parameterName="label" show="Y" type="TEXT">refers to the label name.</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">refers to the true false condition to check visibility of label.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> sectionname </th><th> label </th><th> booleanval </th></tr>
 <tr><td> checkiflabelvisible </td><td> repayment details </td><td> option exercise by the issuer </td><td> false </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This method is used to click on delete icon button which is under a sectioname(datagroupname)&lt;/b&gt;" methodName="clickOnDeleteIconInsideSection">
<Parameters>
<Parameter caption="sectionName" dataType="String" parameterName="sectionName" show="Y" type="TEXT">contains the sectionname i.e the datagroupname</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> sectionname </th></tr>
 <tr><td> clickondeleteiconinsidesection </td><td>extended income details</td></tr>
 <tr><td> clickondeleteiconinsidesection </td><td>all classifications</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies the record count with respect to grid number provided.&lt;/b&gt;" methodName="VerifyRecordsCountOnGrid">
<Parameters>
<Parameter caption="expectedNoOfRecords" dataType="int" parameterName="expectedNoOfRecords" show="Y" type="TEXT">this parameter accepts the count of records expected on the grid.(integer value)</Parameter>
<Parameter caption="gridNum" dataType="int" parameterName="gridNum" show="Y" type="TEXT">this parameter accepts the grid number on which verification needs to performed. for search screen grid number will be 1.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> expectednoofrecords </th><th> gridnum </th></tr>
 <tr><td> verifyrecordscountongrid </td><td> 50 </td><td> 1 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyChatBotMessages">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;Please use module as the working is same as  {@link #SelectUserMenuOptions(String)}&lt;/b&gt;" methodName="selectUserMenuOption">
<Parameters>
<Parameter caption="userOption" dataType="String" parameterName="userOption" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyTraceLevels">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to switch the control to the main browser tab when there are multiple browser tabs within single browser opened for any test case. This module doesn't accepts any parameter&lt;/b&gt;" methodName="switchToOldWindow">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="This module is used to logout of application" methodName="Logout">
<Parameters/>
<Examples><![CDATA[
	 <table border='1'>
 <tr><th> method name</th></tr>
 <tr><td> logout </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to verify a pop-up message that appears after you select an option that populates on click of Select Others button.&lt;/b&gt;" methodName="SelectOthers">
<Parameters>
<Parameter caption="ActionItem" dataType="String" parameterName="ActionItem" show="Y" type="TEXT">name of the option to be selected in the menu</Parameter>
<Parameter caption="PopupMessage" dataType="String" parameterName="PopupMessage" show="Y" type="TEXT">message to be verified</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> actionitem </th><th> popupmessage </th></tr>
 <tr><td> selectothers </td><td>share to all</td><td>template shared successfully</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to select a menu option that appears after clicking on SelectOthers button.&lt;/b&gt;" methodName="SelectOthers">
<Parameters>
<Parameter caption="MenuOption" dataType="String" parameterName="MenuOption" show="Y" type="TEXT">name of the option to be selected in the menu</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> menuoption </th></tr>
 <tr><td> selectothers </td><td>share to all</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to select datagroup name tags within the page or a vertical tab.&lt;/b&gt;" methodName="SelectThePage">
<Parameters>
<Parameter caption="PageName" dataType="String" parameterName="PageName" show="Y" type="TEXT">name of the page already open or a datagroup name within the page</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> pagename </th></tr>
 <tr><td> selectthepage </td><td>description</td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module verified if the particular column/headers are sorted in ascending/descending order&lt;/b&gt;" methodName="VerifySort">
<Parameters>
<Parameter caption="gridPosition" dataType="int" parameterName="gridPosition" show="Y" type="TEXT">position of the grid to consider for verification of the sort</Parameter>
<Parameter caption="multipleSortType" dataType="String" parameterName="multipleSortType" show="Y" type="TEXT">check if either in ascending or descending order labels are sorted</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> gridposition </th><th> sorttype </th></tr>
 <tr><td> 1 </td><td>instrument name|ascending</td></tr>
</table>
]]></Examples>
</Method>
<Method author="unknown" methodDesc="&lt;b&gt;This module verified if the particular column/headers are sorted in ascending/descending order&lt;/b&gt;" methodName="VerifySort">
<Parameters>
<Parameter caption="sectionName" dataType="String" parameterName="sectionName" show="Y" type="TEXT">name of the section</Parameter>
<Parameter caption="multipleSortType" dataType="String" parameterName="multipleSortType" show="Y" type="TEXT">ascending or descending verification of the sort</Parameter>
<Parameter caption="StringInt" dataType="String" parameterName="StringInt" show="Y" type="TEXT">numericvalue to consider</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> sectionname </th><th> sorttype </th><th> position </th></tr>
 <tr><td> instrumentdetails </td><td>instrument name|ascending </td><td>2</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is to close the popup/overlapping window.&lt;/b&gt;" methodName="CloseWindow">
<Parameters>
<Parameter caption="windowTitle" dataType="String" parameterName="windowTitle" show="Y" type="TEXT">contains the window name to be closed.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> windowtitle </th></tr>
 <tr><td> closewindow </td><td>setup</td></tr>
 <tr><td> closewindow </td><td>configuration</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is to close the popup/overlapping window.&lt;/b&gt;" methodName="CloseWindow">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module helps to add the add GSO attribute.&lt;/b&gt;" methodName="AddGSOAttributes">
<Parameters>
<Parameter caption="dataGroupName" dataType="String" parameterName="dataGroupName" show="Y" type="TEXT">name of the data group for which user want to add the gso attribute.</Parameter>
<Parameter caption="fields" dataType="String" parameterName="fields" show="Y" type="TEXT">refer to the field name along with datagroup name pipe separated.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupname </th><th> fields </th></tr>
 <tr><td> addgsoattributes </td><td> customtestgroup</td><td> instrument details|instrument description||instrument details|country of domicile</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module helps to add the add GSO attribute.&lt;/b&gt;" methodName="AddGSOAttributes">
<Parameters>
<Parameter caption="dataGroupName" dataType="String" parameterName="dataGroupName" show="Y" type="TEXT">name of the data group for which user want to add the gso attribute.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupname </th></tr>
 <tr><td> addgsoattributes </td><td> instrument details</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This method is used to create xml file as per the tags provided.&lt;/b&gt;" methodName="CreateXmlFile">
<Parameters>
<Parameter caption="getFileName" dataType="String" parameterName="getFileName" show="Y" type="TEXT">contains the name of file.</Parameter>
<Parameter caption="getlistOfTags" dataType="String" parameterName="getlistOfTags" show="Y" type="TEXT">contains the list of tags to be used.</Parameter>
<Parameter caption="numOfFiles" dataType="int" parameterName="numOfFiles" show="Y" type="TEXT">contains the no. of files to be created.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> getfilename </th><th> getlistoftags </th><th> numoffiles </th></tr>
 <tr><td> createxmlfile </td><td>template1103.xml</td><td>title||id</td><td>1</td></tr>
</table>
]]></Examples>
</Method>
<Method author="bkhemani" methodDesc="&lt;b&gt;This method is used to click on spy glass on form or grid template's detail screen&lt;/b&gt;" methodName="ClickOnSpyGlass">
<Parameters>
<Parameter caption="dataGroupNameAndFieldName" dataType="String" parameterName="dataGroupNameAndFieldName" show="Y" type="TEXT">contains the datagroupname and fieldname pipe separated</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupnameandfieldname </th></tr>
 <tr><td> clickonspyglass </td><td>institution summary|institution name</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="copyTestcases">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This method is used to close the tab as specified in tabname&lt;/b&gt;" methodName="CloseTab">
<Parameters>
<Parameter caption="tabName" dataType="String" parameterName="tabName" show="Y" type="TEXT">contains the tab name which is to be closed.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> tabname </th></tr>
 <tr><td> closetab </td><td>issue</td></tr>
 <tr><td> closetab </td><td>issuer</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to select a tab on a page.&lt;/b&gt;" methodName="SelectTheTab">
<Parameters>
<Parameter caption="Tabname" dataType="String" parameterName="Tabname" show="Y" type="TEXT">specify the tab name that you want to select.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> tabname </th></tr>
 <tr><td> selectthetab </td><td>entity entitlement</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to transfer the file in ftp location&lt;/b&gt;" methodName="FileDropToFTP">
<Parameters>
<Parameter caption="fileName" dataType="String" parameterName="fileName" show="Y" type="TEXT">contains the name of file which needs to be transfered.</Parameter>
<Parameter caption="remotefolder" dataType="String" parameterName="remotefolder" show="Y" type="TEXT">contains foldername of the remote ftp location.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> filename </th><th> remotefolder </th></tr>
 <tr><td> filedroptoftp </td><td>bbglobalequity_iw360.txt</td><td>invokeworkflow</td></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;This module is used to save a entity.&lt;/b&gt;" methodName="SaveRecord">
<Parameters/>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th></tr>
 <tr><td> saverecord </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to save the changes made in the record.&lt;/b&gt;" methodName="SaveRecord">
<Parameters>
<Parameter caption="PopupMessage" dataType="String" parameterName="PopupMessage" show="Y" type="TEXT">notification message that appears after saving the record.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> popupmessage </th></tr>
 <tr><td> saverecord </td><td>entity saved</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to restart the engine.&lt;/b&gt;&#10; Examples:&#10; &lt;table border='1'&gt;&#10; &lt;tr&gt;&lt;th&gt; Method Name &lt;/th&gt;&lt;/tr&gt;&#10; &lt;tr&gt;&lt;td&gt; RestartEngine &lt;/td&gt;&lt;/tr&gt;&#10;&lt;/table&gt;" methodName="RestartEngine">
<Parameters/>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th></tr>
 <tr><td> restartengine </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;Please use method {@link #SortRows(int, String)}&lt;/b&gt;" methodName="SortRecords">
<Parameters>
<Parameter caption="gridPosition" dataType="int" parameterName="gridPosition" show="Y" type="TEXT">this parameter accepts the number of the grid/table if there are many grids/tables available.</Parameter>
<Parameter caption="columNameSortType" dataType="String" parameterName="columNameSortType" show="Y" type="TEXT">this paramter accepts the columnname and sort type(valid values: descending,ascending) in pipe separated format like columnnamedescending</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to select a menu option from the Action menu.&lt;/b&gt;" methodName="SelectAction">
<Parameters>
<Parameter caption="ActionItem" dataType="String" parameterName="ActionItem" show="Y" type="TEXT">name of the option to be selected in the menu</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> actionitem </th></tr>
 <tr><td> selectaction </td><td>export</td></tr>
 <tr><td> selectaction </td><td>multi edit</td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="" methodName="VerifyBookmark">
<Parameters>
<Parameter caption="bookMarkTabName" dataType="String" parameterName="bookMarkTabName" show="Y" type="TEXT">this parameter accepts the bookmark tab name which needs to be verified.</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">this parameter accepts the boolean value true if expectation is that tab should show and false if expectation is tab should not show.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> bookmarktabname </th><th> flag </th></tr>
 <tr><td> verifybookmark </td><td>issue</td><td>true</td></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;This module will select all the check box with label name specified for clone.&lt;/b&gt;" methodName="SaveClone">
<Parameters>
<Parameter caption="CheckListPipeSeperated" dataType="String" parameterName="CheckListPipeSeperated" show="Y" type="TEXT">name of the checkboxes that needs to be checked separated by '' symbol
 checkboxname1checkboxname2</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> checklistpipeseperated </th></tr>
 <tr><td> saveclone </td><td>modified identifiers</td></tr>
 <tr><td> saveclone </td><td> modified identifiers|delete original entity </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to select the required date.&lt;/b&gt;" methodName="SelectDate">
<Parameters>
<Parameter caption="Date" dataType="String" parameterName="Date" show="Y" type="TEXT">date should be as specified dd-mmm-yyyy to dd-mmm-yyyy</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> date </th></tr>
 <tr><td> selectdate </td><td>07-sep-2020 to 10-sep-2020</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to upload file on any ui screen&lt;/b&gt;" methodName="UploadFile">
<Parameters>
<Parameter caption="fileName" dataType="String" parameterName="fileName" show="Y" type="TEXT">this parameter accepts the file name along with extension like file1.xml</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> filename </th></tr>
 <tr><td> uploadfile </td><td> file1.xml </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to select a menu option from the Action menu.&lt;/b&gt;" methodName="SelectMenuAction">
<Parameters>
<Parameter caption="DataGroupName" dataType="String" parameterName="DataGroupName" show="Y" type="TEXT">name of the datagroup under which the menu needs to be selected</Parameter>
<Parameter caption="MenuOption" dataType="String" parameterName="MenuOption" show="Y" type="TEXT">name of the option to be selected in the menu</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupname </th><th> menuoption </th></tr>
 <tr><td> selectmenuaction </td><td>description</td><td>export</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to refresh the provided url.&lt;/b&gt;" methodName="RefreshURL">
<Parameters>
<Parameter caption="URL" dataType="String" parameterName="URL" show="Y" type="TEXT">contains the url to be refreshed.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> url </th></tr>
 <tr><td> refreshurl </td><td>http://inqa20:8180/gs/</td></tr>
 </table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module use to click on the button name provided.&lt;/b&gt;" methodName="ClickOnButton">
<Parameters>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT">is refer to the button name to be clicked</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonname </th></tr>
 <tr><td> clickonbutton </td><td> filter </td></tr>
</table>
]]></Examples>
</Method>
<Method author="bkhemani" methodDesc="&lt;b&gt;This method is used to click on button and also verify the given notification toggle message like saved successfully&lt;/b&gt;" methodName="ClickOnButton">
<Parameters>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT">contains the button name to be clicked.</Parameter>
<Parameter caption="notificationMessage" dataType="String" parameterName="notificationMessage" show="Y" type="TEXT">contains the notification message.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonname </th><th> notificationmessage </th></tr>
 <tr><td> clickonbutton </td><td> save </td><td> saved successfully </td></tr>
 <tr><td> clickonbutton </td><td> cancel </td><td>error occurred </td></tr>
 <tr><td> clickonbutton </td><td> close </td><td>exception occurred </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module will sort columns in ascending or descending order.&lt;/b&gt;" methodName="SortRows">
<Parameters>
<Parameter caption="gridPosition" dataType="int" parameterName="gridPosition" show="Y" type="TEXT">this parameter accepts the number of the grid/table if there are many grids/tables available.</Parameter>
<Parameter caption="columNameSortType" dataType="String" parameterName="columNameSortType" show="Y" type="TEXT">this parameter accepts the columnname and sort type(valid values: descending,ascending) in pipe separated format like columnnamedescending</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> gridposition </th><th> columnamesorttype </th></tr>
 <tr><td> sortrows </td><td>1</td><td> institution name|descending</td></tr>
 <tr><td> sortrows </td><td>1</td><td> institution name|ascending</td></tr>
</table>
 
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This module is in case the downloaded file or the latest file name is not known by the user and if user wants that latest file to be copied to some expected destination folder along with renaming the file&lt;/b&gt;" methodName="CopyLatestFile">
<Parameters>
<Parameter caption="renameFileName" dataType="String" parameterName="renameFileName" show="Y" type="TEXT">contains the new name of file that user wants to change to the existing file.</Parameter>
<Parameter caption="sourceFolder" dataType="String" parameterName="sourceFolder" show="Y" type="TEXT">contains the source folder path, the absolute path where existing file resides.</Parameter>
<Parameter caption="destFolder" dataType="String" parameterName="destFolder" show="Y" type="TEXT">contains the destination folder path, the absolute path where the file should be moved.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> renamefilename </th><th> sourcefolder </th><th> destfolder </th></tr>
 <tr><td> copylatestfile </td><td>tbe_13_downloadmove.xls</td><td>sourcefolder</td><td>destfolder</td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="&lt;b&gt;This method is used for in case the downloaded file or the latest file name is not known by the user and if user wants that latest file to be copied to some expected destination folder&lt;/b&gt;" methodName="CopyLatestFile">
<Parameters>
<Parameter caption="sourceFolder" dataType="String" parameterName="sourceFolder" show="Y" type="TEXT">contains the source folder path, the absolute path where existing file resides.</Parameter>
<Parameter caption="destFolder" dataType="String" parameterName="destFolder" show="Y" type="TEXT">contains the destination folder path, the absolute path where the file should be moved.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> sourcefolder </th><th> destfolder </th></tr>
 <tr><td> copylatestfile </td><td>downloads</td><td>testdata</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to login into the given url&lt;/b&gt;" methodName="Login">
<Parameters>
<Parameter caption="url" dataType="String" parameterName="url" show="Y" type="TEXT">contains the url.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> url </th></tr>
 <tr><td> login </td><td>http://inqa20:8180/gs/</td></tr>
 </table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to login into the UI along with username and password&lt;/b&gt;" methodName="Login">
<Parameters>
<Parameter caption="username" dataType="String" parameterName="username" show="Y" type="TEXT">contains the username.</Parameter>
<Parameter caption="password" dataType="String" parameterName="password" show="Y" type="TEXT">contains the password.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> username </th><th> password </th></tr>
 <tr><td> login </td><td>user1</td><td>user1@123</td></tr>
 </table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to login into the given url along with username and password&lt;/b&gt;" methodName="Login">
<Parameters>
<Parameter caption="url" dataType="String" parameterName="url" show="Y" type="TEXT">contains the url.</Parameter>
<Parameter caption="username" dataType="String" parameterName="username" show="Y" type="TEXT">contains the username.</Parameter>
<Parameter caption="password" dataType="String" parameterName="password" show="Y" type="TEXT">contains the password.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> url </th><th> username </th><th> password </th></tr>
 <tr><td> login </td><td>http://inqa20:8180/gs/</td><td>user1</td><td>user1@123</td></tr>
</table>
]]></Examples>
</Method>
<Method author="anagre" methodDesc="&lt;b&gt;This module will click on SQL edit icon according to field name specified&lt;/b&gt;" methodName="ClickOnSQLEdit">
<Parameters>
<Parameter caption="fieldName" dataType="String" parameterName="fieldName" show="Y" type="TEXT">contains the fieldname.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> fieldname </th></tr>
 <tr><td> clickonsqledit </td><td>product rule</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies the Title of current working browser page..&lt;/b&gt;" methodName="VerifyPageTitle">
<Parameters>
<Parameter caption="titleName" dataType="String" parameterName="titleName" show="Y" type="TEXT">this parameter accepts the expected page title.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> titlename </th></tr>
 <tr><td> verifypagetitle </td><td> gs login page </td></tr>
</table>
]]></Examples>
</Method>
<Method author="arath" methodDesc="&lt;b&gt;This module helps to click on a button user has been provided.&lt;/b&gt;" methodName="clickOnButton">
<Parameters>
<Parameter caption="buttonLabel" dataType="String" parameterName="buttonLabel" show="Y" type="TEXT">name of the button to click.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupandfieldname </th></tr>
 <tr><td> clickonbutton </td><td> apply </td></tr>
</table>
]]></Examples>
</Method>
<Method author="arath" methodDesc="&lt;b&gt;This action is used to click on a button. &lt;/b&gt;" methodName="clickOnButton">
<Parameters>
<Parameter caption="buttonLabel" dataType="String" parameterName="buttonLabel" show="Y" type="TEXT">refers to the button name</Parameter>
<Parameter caption="shortCut" dataType="String" parameterName="shortCut" show="Y" type="TEXT">user need to pass shortcut(if any) otherwise null for short cut parameter.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonlabel </th><th> shortcut </th></tr>
 <tr><td> clickonbutton </td><td> apply </td> <td>  </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="SearchInChatBot">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is use to open new tab.&lt;/b&gt;&#10; &lt;/br&gt;&#10; &lt;/br&gt;" methodName="OpenNewTab">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies the URL of current working browser page..&lt;/b&gt;" methodName="VerifyPageURL">
<Parameters>
<Parameter caption="URL" dataType="String" parameterName="URL" show="Y" type="TEXT">this parameter accepts the expected page url.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> url </th></tr>
 <tr><td> verifypageurl </td><td> page url </td></tr>
</table>
]]></Examples>
</Method>
<Method author="sakamble" methodDesc="&lt;b&gt;This method will verify the data on UI specific to only Publishing Screen.&lt;/b&gt;" methodName="VerifyFields">
<Parameters>
<Parameter caption="LabelNamePipeLabelValue" dataType="String" parameterName="LabelNamePipeLabelValue" show="Y" type="TEXT">label name and label value pipe separated.
 labelnamelabelvalue</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> labelnamepipelabelvalue </th></tr>
 <tr><td> verifyfields </td><td>subscription name|bbmifircash||subscription description| bbmifircash</td></tr>
</table>
]]></Examples>
</Method>
<Method author="bsaswade" methodDesc="&lt;b&gt;This module reads test from input field on UI, performs action on test and reenters the modified test in same input field.&lt;/b&gt;" methodName="ModifyDataOnForm">
<Parameters>
<Parameter caption="dataGroupsFields" dataType="String" parameterName="dataGroupsFields" show="Y" type="TEXT">refers to the data group name and field name for which actions needs to be performed.</Parameter>
<Parameter caption="valuetofindandvaluetoreplace" dataType="String" parameterName="valuetofindandvaluetoreplace" show="Y" type="TEXT">existingvalue and oldvalue pipe separated.</Parameter>
<Parameter caption="action" dataType="String" parameterName="action" show="Y" type="TEXT">action that needs to be performed on text like replace or replaceall</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> sectionname </th><th> label </th><th> booleanval </th></tr>
 <tr><td> modifydataonform </td><td> datagroupname|fieldname </td><td> existingvalue|oldvalue </td><td> replace </td></tr>
 <tr><td> modifydataonform </td><td> fieldname </td><td> existingvalue|oldvalue </td><td> replace </td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="This method will expand the section control (if it is collapsed) that is being passed." methodName="sectionExpand">
<Parameters>
<Parameter caption="sectionElement" dataType="WebElement" parameterName="sectionElement" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="This method will expand the section control (if it is collapsed) that is being passed." methodName="sectionExpand">
<Parameters>
<Parameter caption="sectionName" dataType="String" parameterName="sectionName" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyTab">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to verify if the given fieldname is displayed or not as per the flag.&lt;/b&gt;&lt;/b&gt;" methodName="isfieldDisplayed">
<Parameters>
<Parameter caption="sectionName" dataType="String" parameterName="sectionName" show="Y" type="TEXT">contains the name of section i.e the datagroup name.</Parameter>
<Parameter caption="fieldName" dataType="String" parameterName="fieldName" show="Y" type="TEXT">contains the name of the field.</Parameter>
<Parameter caption="flag" dataType="String" parameterName="flag" show="Y" type="TEXT">contains the flag value i.e true/false.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> sectionname </th><th> fieldname </th><th> flag </th></tr>
 <tr><td> isfielddisplayed </td><td>extended income schedules</td><td>iso code</td><td>'false</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module is used to verify if the given fieldname is displayed or not.&lt;/b&gt;" methodName="isfieldDisplayed">
<Parameters>
<Parameter caption="sectionName" dataType="String" parameterName="sectionName" show="Y" type="TEXT">contains the name of section i.e the datagroup name.</Parameter>
<Parameter caption="fieldName" dataType="String" parameterName="fieldName" show="Y" type="TEXT">contains the name of the field.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> sectionname </th><th> fieldname </th></tr>
 <tr><td> isfielddisplayed </td><td>extended income details</td><td>calculation method</td></tr>
</table>
]]></Examples>
</Method>
<Method author="bsaswade" methodDesc="&lt;b&gt;This module verifies if checked entities present in all data groups.&lt;/b&gt;" methodName="VerifyIfEntityDisplayedUnderSection">
<Parameters>
<Parameter caption="entityNames" dataType="String" parameterName="entityNames" show="Y" type="TEXT">entities pipe separated for which verification need to be performed.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> entitynames </th></tr>
 <tr><td> verifyifentitydisplayedundersection </td><td> entity1|entity2 </td></tr>
</table>
]]></Examples>
</Method>
<Method author="bsaswade" methodDesc="&lt;b&gt;This module verifies if checked entities present in specified data groups.&lt;/b&gt;" methodName="VerifyIfEntityDisplayedUnderSection">
<Parameters>
<Parameter caption="entityNames" dataType="String" parameterName="entityNames" show="Y" type="TEXT">entity header names pipe separated (evan zigomalas 1evan zigomalas)</Parameter>
<Parameter caption="sectionName" dataType="String" parameterName="sectionName" show="Y" type="TEXT">datagroup name under which entity names to be verified.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> entitynames </th><th> sectionname </th></tr>
 <tr><td> verifyifentitydisplayedundersection </td><td> entity1|entity2 </td><td> instrument details</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="VerifyReadOnlyDropDownFieldsOnPopUp">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt; This module verifies the current selected value in dropdown on popup screen&lt;/b&gt;" methodName="VerifyCurrentValueFromDropDownOnPopUp">
<Parameters>
<Parameter caption="labelNameValue" dataType="String" parameterName="labelNameValue" show="Y" type="TEXT">this parameter accepts the value of the dropfown if there is only input dropdown field on the screen. in case of multiple dropdowns label name and value needs to be specified pipe separated like labelname1value1labelname2value2</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">this parameter accepts boolean value true if the value is expected to be found and false if the value is not expected to be found</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> labelnamevalue </th><th> booleanval </th></tr>
 <tr><td> verifycurrentvaluefromdropdownonpopup </td><td>entity|equity</td><td>true</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verifies if a menu option from the Action Menu on popup window, is visible.&lt;/b&gt;" methodName="VerifyMenuActionVisibilityOnPopup">
<Parameters>
<Parameter caption="menuOption" dataType="String" parameterName="menuOption" show="Y" type="TEXT">name of the option that needs to be verified for visibility in action menu on popup window.</Parameter>
<Parameter caption="booleanVal" dataType="String" parameterName="booleanVal" show="Y" type="TEXT">true or false, expected condition.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> menuoption </th><th> booleanval </th></tr>
 <tr><td> verifymenuactionvisibility </td><td>export</td><td>true</td></tr>
 <tr><td> verifymenuactionvisibility </td><td>acbd</td><td>false</td></tr>
</table>
]]></Examples>
</Method>
<Method author="" methodDesc="&lt;b&gt;This module verify the notification message after clicking the button.&lt;/b&gt;" methodName="ClickButtonAndVerifyNotificationMessage">
<Parameters>
<Parameter caption="buttonName" dataType="String" parameterName="buttonName" show="Y" type="TEXT">name of the button to be clicked.</Parameter>
<Parameter caption="messageToVerifyPostClick" dataType="String" parameterName="messageToVerifyPostClick" show="Y" type="TEXT">text of the notification appears when click on the button.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonname </th><th> messagetoverifypostclick </th></tr>
 <tr><td> clickbuttonandverifynotificationmessage </td><td> save </td><td> entity saved successfully. </td></tr>
</table>
]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="ChangeLabel" interfaceName="IChangeLabel">
<Methods>
<Method author="" methodDesc="" methodName="VerifyChangeLabel">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="DeleteChangeLabel">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="AddLabel">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="Chal" interfaceName="IChal">
<Methods>
<Method author="mmkhan" methodDesc="&lt;b&gt;This module will approve Chal and verify the notification message received upon approval.&lt;/b&gt;" methodName="CHALApproveReject">
<Parameters>
<Parameter caption="FieldNameNewValApproveOrRejectStatusLockTypeAndComment" dataType="String" parameterName="FieldNameNewValApproveOrRejectStatusLockTypeAndComment" show="Y" type="TEXT">this parameter accepts fieldname, new value. approve/reject status, locktype and comment in pipe separated format like fieldnamevalueapprovenormal lockcomments</Parameter>
<Parameter caption="userNamemessageToVerify" dataType="String" parameterName="userNamemessageToVerify" show="Y" type="TEXT">this parameter accepts the username and the notification message that comes on approval or rejection of record on the change approval screen in pipe separated format like user1transaction send</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> fieldnamenewvalapproveorrejectstatuslocktypeandcomment </th><th> usernamemessagetoverify </th></tr>
 <tr><td> chalapprovereject </td><td> par value|0.8|approve|none|approved  </td><td> user1|send  </td></tr>
  <tr><td> chalapprovereject </td><td> par value|0.8|approve|none|approved  </td><td> user1|error  </td></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;Use this function to approve or reject the changes for single or multiple records in the Change Approval screen&lt;/b&gt;" methodName="CHALApproveReject">
<Parameters>
<Parameter caption="FieldName" dataType="String" parameterName="FieldName" show="Y" type="TEXT">this parameter accepts the field name on which the chal is applied.</Parameter>
<Parameter caption="newVal" dataType="String" parameterName="newVal" show="Y" type="TEXT">this parameter accepts the changed value that needs to be approved/rejected</Parameter>
<Parameter caption="ApproveOrRejectStatus" dataType="String" parameterName="ApproveOrRejectStatus" show="Y" type="TEXT">this parameter accepts the action that you need to perform on the record like approve/reject</Parameter>
<Parameter caption="LockTypeAndComment" dataType="String" parameterName="LockTypeAndComment" show="Y" type="TEXT">this parameter accepts the lock type and comments in pipe separated format like normal lockapproved the record</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> fieldname </th><th> newval </th><th> approveorrejectstatus </th><th> locktypeandcomment </th></tr>
 <tr><td> chalapprovereject </td><td> instrument name</td><td> testinstrument </td><td> approve </td><td> normal lock|approved the record </td>></tr>
 * <tr><td> chalapprovereject </td><td> instrument name</td><td> testinstrument </td><td> reject </td><td> rejected the record </td>></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;This module is for approval of chal record based the number of record specified or All passed as a parameter to approve all records.&lt;/b&gt;" methodName="CHALApproveReject">
<Parameters>
<Parameter caption="NumberofRecordsToBeApprovedOrReject" dataType="String" parameterName="NumberofRecordsToBeApprovedOrReject" show="Y" type="TEXT">this parameter accepts all if you want to approve/reject all the record and you just want to approve by specifying the number you can specify 1 or 2 and so on as parameter.</Parameter>
<Parameter caption="ApproveOrRejectStatus" dataType="String" parameterName="ApproveOrRejectStatus" show="Y" type="TEXT">this parameter accepts the action that you need to perform on the record like approve/reject</Parameter>
<Parameter caption="LockTypeAndComment" dataType="String" parameterName="LockTypeAndComment" show="Y" type="TEXT">this parameter accepts the lock type and comments in pipe separated format like normal lockapproved the record</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> numberofrecordstobeapprovedorreject </th><th> approveorrejectstatus </th><th> locktypeandcomment </th></tr>
 <tr><td> chalapprovereject </td><td>all</td><td> approve </td><td> normal lock|approved the record </td>></tr>
 <tr><td> chalapprovereject </td><td>2</td><td> reject </td><td> rejected the record </td>></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;This module will verify multiple chal updates on change approval screen and over entity as well.&lt;/b&gt;" methodName="VerifyMultipleCHALUpdates">
<Parameters>
<Parameter caption="path" dataType="String" parameterName="path" show="Y" type="TEXT">this parameter accepts the datagroup and field name and value of updates record in pipe separated format like datagroupfieldnamefirstupdatedvaluesecondupdatedvaluethridupdatedvalue
 and accepts fieldname and value of updates record in pipe separated format like datagroupfieldnamefirstupdatedvaluesecondupdatedvaluethridupdatedvalue on change approval screen.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> path </th></tr>
 <tr><td> verifymultiplechalupdates </td><td> bb company security|update1|update2|update3  </td></tr>
 <tr><td> verifymultiplechalupdates </td><td> instrument details|par value|firstupdatedvalue|secondupdatedvalue </td></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;This module approves the chal record from the Adornment panel.&lt;/b&gt;" methodName="CHALApproveRejectInAdornment">
<Parameters>
<Parameter caption="DataGroupAndFieldName" dataType="String" parameterName="DataGroupAndFieldName" show="Y" type="TEXT">this parameter takes datagroup, fieldname and value in pipe separated format like datagroupfieldnamevalue</Parameter>
<Parameter caption="ApproveOrRejectStatus" dataType="String" parameterName="ApproveOrRejectStatus" show="Y" type="TEXT">this parameter accepts the action that you need to perform on the record like approve/reject</Parameter>
<Parameter caption="LockType" dataType="String" parameterName="LockType" show="Y" type="TEXT">this parameter accepts the lock type like normal lock and so on.</Parameter>
<Parameter caption="Comment" dataType="String" parameterName="Comment" show="Y" type="TEXT">this parameter accepts any comment that you want to add.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupandfieldname </th><th> approveorrejectstatus </th><th> locktype </th><th> comment </th></tr>
 <tr><td> chalapprovereject </td><td> instrument details|instrument name </td><td> complete </td><td> none </td><td> approved the record </td></tr>
 <tr><td> chalapprovereject </td><td> instrument details|par value </td><td> reject </td><td> normal lock </td><td> rejected the record </td></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;Use this function to verify the CHAL icon, verify chal in the Adornment Panel. The visibility of the icon is checked; old and new values are checked; Pending, Approve, or Reject status is checked. &lt;/b&gt;" methodName="VerifyCHAL">
<Parameters>
<Parameter caption="dataGroupFieldNameValue" dataType="String" parameterName="dataGroupFieldNameValue" show="Y" type="TEXT">this parameter takes datagroup, fieldname and value in pipe separated format like datagroupfieldnamevalue</Parameter>
<Parameter caption="status" dataType="String" parameterName="status" show="Y" type="TEXT">this parameter takes the status of what kind of chal verification you need to perform. valid values that can be passed is: pending,approve,reject</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupfieldnamevalue </th><th> status </th></tr>
 <tr><td> verifychal </td><td> instrument details|instrument name|testinstrument||instrument details|instrument description|testinstdescription </td><td> pending </td></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;This module verifies that chal icon should not be present on UI as well as on the value should be updated on the field.&lt;/b&gt;" methodName="VerifyCHAL">
<Parameters>
<Parameter caption="dataGroupFieldNameValue" dataType="String" parameterName="dataGroupFieldNameValue" show="Y" type="TEXT">this parameter takes datagroup, fieldname and value in pipe separated format like datagroupfieldnamevalue</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> datagroupfieldnamevalue </th></tr>
 <tr><td> verifychal </td><td> instrument details|instrument name|testinstrument||instrument details|instrument description|testinstdescription </td></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;This module will set the engine configuration setting on orchestrator.&lt;/b&gt;" methodName="ConfigureEngines">
<Parameters>
<Parameter caption="Feature" dataType="String" paramDefault="" parameterName="feature" show="Y" type="DROPDOWN" values="CHAL,VSH,Audit,NormalLockExpiredNoOfDays,PerpetualLockExpiredNoOfDays,CHALWithDeprecatedOption">Feature for which engine config needs to be done</Parameter>
<Parameter caption="Enable/Disable Setting" dataType="String" paramDefault="" parameterName="flag" show="Y" type="DROPDOWN" values="True,False">Pass value true if needs to be enabled else pass false</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> feature </th><th> flag </th></tr>
 <tr><td> configureengines </td><td> chal </td><td> true </td></tr>
 <tr><td> configureengines </td><td> chal </td><td> false </td></tr>
</table>
]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="" methodName="ConfigureCHAL">
<Parameters>
<Parameter caption="path" dataType="String" parameterName="path" show="Y" type="TEXT">path to be traversed</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="Audit" interfaceName="IAudit">
<Methods>
<Method author="hdadyal" methodDesc="" methodName="VerifyAuditDetailsInFieldAdornments">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="" methodName="VerifyAuditDetailsInFieldAdornments">
<Parameters>
<Parameter caption="TestData" dataType="String" parameterName="TestData" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="" methodDesc="" methodName="SetModificationComments">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;This module is used to click on the date link and view all link on the audit timeline screen and perform required action.&lt;/b&gt;" methodName="PerformActionAtAuditTimeline">
<Parameters>
<Parameter caption="testData" dataType="String" parameterName="testData" show="Y" type="TEXT">this parameter will accept parameters as 1) datelinktoclickdatetoextractbuttonname</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th<th> testdata </th></tr>
 <tr><td> performactionataudittimeline </td><td> 20-jul-2020 to 21-jul-2020|09-jul-2020 to 10-jul-2020|extract</td></tr>
 <tr><td> performactionataudittimeline </td><td> 14-jul-2020 to 15-jul-2020|clear</td></tr>
</table>
]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="" methodName="VerifyModifiedAuditFields">
<Parameters>
<Parameter caption="testData" dataType="String" parameterName="testData" show="Y" type="TEXT"/>
<Parameter caption="oldValues" dataType="String" parameterName="oldValues" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="hdadyal" methodDesc="" methodName="EnableOrDisableAuditTable">
<Parameters>
<Parameter caption="tableName" dataType="String" parameterName="tableName" show="Y" type="TEXT"/>
<Parameter caption="indicator" dataType="String" parameterName="indicator" show="Y" type="TEXT"/>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="mmkhan" methodDesc="&lt;b&gt;This module verifies data on audit time line grid based on the unique row selector specified&lt;/b&gt;" methodName="VerifyRowsOnAuditTimeLineGrid">
<Parameters>
<Parameter caption="uniqueSearchColumnNameValue" dataType="String" parameterName="uniqueSearchColumnNameValue" show="Y" type="TEXT">this parameter accepts the column name and value which is unique for a row in pipe separated format like columnnamevalue</Parameter>
<Parameter caption="dataToVerifyColumnNameValue" dataType="String" parameterName="dataToVerifyColumnNameValue" show="Y" type="TEXT">this parameter accepts the column name and value which needs to be verified based on the first parameter in pipe separated format.</Parameter>
<Parameter caption="booleanValue" dataType="String" parameterName="booleanValue" show="Y" type="TEXT">this parameter accepts parameter as true is expected value to be found and false if expected value not to be found.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th<th> uniquesearchcolumnnamevalue </th><th> datatoverifycolumnnamevalue </th><th> booleanvalue </th></tr>
 <tr><td> verifyrowsonaudittimelinegrid </td><td>columnnamewithuniquerow|uniquevalueforrow</td><td>columnnameforwhichdataneedstoverified|valuethatneedstoveverified</td><td>true</td></tr>
</table>
]]></Examples>
</Method>
</Methods>
</Interface>
<Interface component="UI" groupName="AdvanceFilter" interfaceName="IAdvanceFilter">
<Methods>
<Method author="anagre" methodDesc="" methodName="AdvanceFilterAddFormula">
<Parameters>
<Parameter caption="parentChild" dataType="String" parameterName="parentChild" show="Y" type="TEXT">this parameter needs to be passed as
  eg: -(add2, date difference110,date1 (productcodedetails)date2 (productcodedetails))
  	-(add2, date difference20g,date1 (productcodedetails)date2 (productcodedetails))
  	-(add2, date difference30l,date1 (productcodedetails)date2 (productcodedetails))</Parameter>
</Parameters>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="kpandya" methodDesc="&lt;b&gt;This module traverses to the Add section passed under first parameter and then fills the values in the dropdown which is passed in second parameter.&lt;/b&gt;" methodName="FillAdvancedFilterValues">
<Parameters>
<Parameter caption="parentChild" dataType="String" parameterName="parentChild" show="Y" type="TEXT">contains the traversing path to the add section.</Parameter>
<Parameter caption="dropDown" dataType="String" parameterName="dropDown" show="Y" type="TEXT">contains the dropdown values to be selected.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> parentchild </th><th> dropdown </th></tr>
 <tr><td> filladvancedfiltervalues </td><td>and|1||and|1||add|2</td><td>issuer long name||contains||abc</td></tr>
 </table>
]]></Examples>
</Method>
<Method author="kpandya" methodDesc="&lt;b&gt;This module is use to  traverses to the mentioned section which needs to be deleted.&lt;/b&gt;" methodName="DeleteAdvancedFilterValues">
<Parameters>
<Parameter caption="parentChild" dataType="String" parameterName="parentChild" show="Y" type="TEXT">contains the traversing path to the mentioned section.</Parameter>
<Parameter caption="deleteButton" dataType="String" parameterName="deleteButton" show="Y" type="TEXT">contains the value as 'delete'.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> parentchild </th><th> deletebutton </th></tr>
 <tr><td> deleteadvancedfiltervalues </td><td>add|1</td><td>delete</td></tr>
 </table>
]]></Examples>
</Method>
<Method author="kpandya&#10; &#10; " methodDesc="&lt;b&gt;This module is use to click on AdvanceFilter button and open the screen..&lt;/b&gt;" methodName="ClickAdvancedFilterButton">
<Parameters/>
<Examples><![CDATA[TODO]]></Examples>
</Method>
<Method author="kpandya" methodDesc="&lt;b&gt;This module expand or maximize AdvanceFilter screen.&lt;/b&gt;" methodName="ExpandAdvancedFilter">
<Parameters>
<Parameter caption="value" dataType="String" parameterName="value" show="Y" type="TEXT">contains the value as 'expand' or 'maximize'.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> buttonname </th></tr>
 <tr><td> expandadvancedfilter </td><td>expand</td></tr>
 <tr><td> expandadvancedfilter </td><td>maximize</td></tr>
 </table>
]]></Examples>
</Method>
<Method author="kpandya" methodDesc="&lt;b&gt;This module traverses to the section passed under first parameter and then clicks on Add, And Group or OR Group as per the value passed in second parameter.&lt;/b&gt;" methodName="ClickAdvancedFilterConditionButton">
<Parameters>
<Parameter caption="parentChild" dataType="String" parameterName="parentChild" show="Y" type="TEXT">contains the traversing path to the mentioned section.</Parameter>
<Parameter caption="addButtons" dataType="String" parameterName="addButtons" show="Y" type="TEXT">contains the button name to be clicked/added.</Parameter>
</Parameters>
<Examples><![CDATA[
 <table border='1'>
 <tr><th> method name </th><th> parentchild </th><th> addbuttons </th></tr>
 <tr><td> clickadvancedfilterconditionbutton </td><td>and|1||and|1||add|2</td><td>add</td></tr>
 <tr><td> clickadvancedfilterconditionbutton </td><td>and|0</td><td>and group</td></tr>
 </table>
]]></Examples>
</Method>
</Methods>
</Interface>
</Interfaces>
